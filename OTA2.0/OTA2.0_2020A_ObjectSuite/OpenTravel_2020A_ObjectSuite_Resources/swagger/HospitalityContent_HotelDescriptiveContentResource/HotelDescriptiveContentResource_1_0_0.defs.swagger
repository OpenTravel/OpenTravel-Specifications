{
  "swagger": "2.0",
  "x-otm-resource": {
    "namespace": "http://www.opentravel.org/OTM/resources/HospitalityResources/v1",
    "localName": "HotelDescriptiveContentResource"
  },
  "info": {
    "title": "HotelDescriptiveContentResource",
    "x-otm-library": {
      "ResourceName": "HotelDescriptiveContentResource",
      "LibraryName": "HospitalityContent",
      "LibraryVersion": "1.0.0",
      "LibraryStatus": "DRAFT",
      "SourceFile": "/HospitalityContent_1_0_0.otm",
      "CompilerVersion": "4.0-SNAPSHOT",
      "CompileDate": "2019-10-30T13:33:15.081-0400"
    },
    "version": "1.0.0"
  },
  "host": "127.0.0.1",
  "basePath": "/v1_0",
  "schemes": [
    "http"
  ],
  "paths": {
    "/HotelDescriptiveContents": {
      "get": {
        "summary": "HotelDescriptiveContentResource - Get",
        "operationId": "Get",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "displayCurrency",
            "in": "query",
            "description": "Preferred currencty code is a 3 char currency code as defined in ISO 4127",
            "x-otm-annotations": {
              "documentation": {
                "references": [
                  "http:\\/\\/www.opentraveldevelopersnetwork.com\\/Supported_ISO_Standards.php"
                ],
                "more-info": [
                  "http:\\/\\/www.opentraveldevelopersnetwork.com\\/2012A_SchemaDoc\\/DisplayCurrency"
                ]
              }
            },
            "required": false,
            "type": "string",
            "pattern": "[a-zA-Z]{3}"
          },
          {
            "name": "maxResponses",
            "in": "query",
            "description": "The maximum quantity of search results in the response.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "summaryResultsInd",
            "in": "query",
            "description": "If true, summary information is requested in the search results.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "code",
            "in": "query",
            "description": "Uniquely identifies a single property for a reservation.",
            "x-otm-annotations": {
              "examples": [
                {
                  "context": "ph",
                  "value": "WASJW"
                }
              ]
            },
            "required": false,
            "type": "string",
            "maxLength": 32
          },
          {
            "name": "chainCode",
            "in": "query",
            "description": "Identifies the chain.",
            "x-otm-annotations": {
              "examples": [
                {
                  "context": "ph",
                  "value": "MC"
                }
              ]
            },
            "required": false,
            "type": "string",
            "maxLength": 32
          },
          {
            "name": "brandCode",
            "in": "query",
            "description": "Identifies a brand with in a chain (e.g. Courtyard, Hampton Inn).  This code is optional if the hotel is an independent property that can be identified by a propert code alone.",
            "x-otm-annotations": {
              "examples": [
                {
                  "context": "ph",
                  "value": "FS"
                }
              ]
            },
            "required": false,
            "type": "string",
            "maxLength": 32
          },
          {
            "name": "cityCode",
            "in": "query",
            "description": "Specifies the three character IATA city code.",
            "x-otm-annotations": {
              "examples": [
                {
                  "context": "ph",
                  "value": "WAS"
                }
              ]
            },
            "required": false,
            "type": "string",
            "maxLength": 32
          },
          {
            "name": "areaID",
            "in": "query",
            "description": "An identifier of an area as defined by a hotel reservation system to allow for seaches in areas such as suburbs or regions.",
            "required": false,
            "type": "string",
            "maxLength": 512
          },
          {
            "name": "hotelCode_TTI",
            "in": "query",
            "description": "TTI hotel reference code.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": false
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "x-xml-schema": {
              "$ref": "Common_5_0_0_Trim.xsd#/BaseResponse"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "x-xml-schema": {
              "$ref": "Common_5_0_0_Trim.xsd#/BaseResponse"
            }
          },
          "402": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "x-xml-schema": {
              "$ref": "Common_5_0_0_Trim.xsd#/BaseResponse"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "x-xml-schema": {
              "$ref": "Common_5_0_0_Trim.xsd#/BaseResponse"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "x-xml-schema": {
              "$ref": "Common_5_0_0_Trim.xsd#/BaseResponse"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "x-xml-schema": {
              "$ref": "Common_5_0_0_Trim.xsd#/BaseResponse"
            }
          },
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/HotelDescriptiveContentListResponse"
            },
            "x-xml-schema": {
              "$ref": "HospitalityContent_HospitalityResources_1_0_0_Trim.xsd#/HotelDescriptiveContentListResponse"
            }
          }
        }
      }
    },
    "/HotelDescriptiveContents/Notifications": {
      "post": {
        "summary": "HotelDescriptiveContentResource - Notification",
        "operationId": "Notification",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "HotelDescriptiveContentID",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HotelDescriptiveContentID"
            },
            "x-xml-schema": {
              "$ref": "OrganizationHospitality_4_0_0_Trim.xsd#/HotelDescriptiveContent"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "x-xml-schema": {
              "$ref": "Common_5_0_0_Trim.xsd#/BaseResponse"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "x-xml-schema": {
              "$ref": "Common_5_0_0_Trim.xsd#/BaseResponse"
            }
          },
          "402": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "x-xml-schema": {
              "$ref": "Common_5_0_0_Trim.xsd#/BaseResponse"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "x-xml-schema": {
              "$ref": "Common_5_0_0_Trim.xsd#/BaseResponse"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "x-xml-schema": {
              "$ref": "Common_5_0_0_Trim.xsd#/BaseResponse"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "x-xml-schema": {
              "$ref": "Common_5_0_0_Trim.xsd#/BaseResponse"
            }
          },
          "201": {
            "description": ""
          }
        }
      }
    },
    "/HotelDescriptiveContents/Query": {
      "post": {
        "summary": "HotelDescriptiveContentResource - Query",
        "operationId": "Query",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "HotelDescriptiveContentQueryInfo",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HotelDescriptiveContentQueryInfo"
            },
            "x-xml-schema": {
              "$ref": "HospitalityContent_HospitalityResources_1_0_0_Trim.xsd#/HotelDescriptiveContentQueryInfo"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "x-xml-schema": {
              "$ref": "Common_5_0_0_Trim.xsd#/BaseResponse"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "x-xml-schema": {
              "$ref": "Common_5_0_0_Trim.xsd#/BaseResponse"
            }
          },
          "402": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "x-xml-schema": {
              "$ref": "Common_5_0_0_Trim.xsd#/BaseResponse"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "x-xml-schema": {
              "$ref": "Common_5_0_0_Trim.xsd#/BaseResponse"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "x-xml-schema": {
              "$ref": "Common_5_0_0_Trim.xsd#/BaseResponse"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "x-xml-schema": {
              "$ref": "Common_5_0_0_Trim.xsd#/BaseResponse"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/HotelDescriptiveContentListResponse"
            },
            "x-xml-schema": {
              "$ref": "HospitalityContent_HospitalityResources_1_0_0_Trim.xsd#/HotelDescriptiveContentListResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "GuaranteesAccepted": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "GuaranteesAccepted"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Type": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentType_Enum"
          },
          "maxItems": 50
        },
        "PaymentCardCode": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentCardCode_Enum"
          },
          "maxItems": 30
        },
        "noCardHolderInfoReqInd": {
          "description": "If true, no credit card holder information is required. If false, it is not required.",
          "type": "boolean"
        },
        "nameReqInd": {
          "description": "If true, the credit card holder name is required. If false, it is not required.",
          "type": "boolean"
        },
        "addressReqInd": {
          "description": "If true, credit card holder address is required. If false, it is not required.",
          "type": "boolean"
        },
        "phoneReqInd": {
          "description": "If true, credit card holder phone number is required. If false, it is not required.",
          "type": "boolean"
        },
        "interbankNbrReqInd": {
          "description": "If true, the credit card interbank number is required. If false, it is not required.",
          "type": "boolean"
        },
        "bookingSourceAllowedInd": {
          "description": "When true, the booking source may be used to guarantee the booking.",
          "type": "boolean"
        },
        "corpDiscountNbrAllowedInd": {
          "description": "When true, the corporate discount number may be used to guarantee the booking.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "PaymentsAccepted": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "GuaranteesAccepted"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Type": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentType_Enum"
          },
          "maxItems": 50
        },
        "PaymentCardCode": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentCardCode_Enum"
          },
          "maxItems": 30
        },
        "noCardHolderInfoReqInd": {
          "description": "If true, no credit card holder information is required. If false, it is not required.",
          "type": "boolean"
        },
        "nameReqInd": {
          "description": "If true, the credit card holder name is required. If false, it is not required.",
          "type": "boolean"
        },
        "addressReqInd": {
          "description": "If true, credit card holder address is required. If false, it is not required.",
          "type": "boolean"
        },
        "phoneReqInd": {
          "description": "If true, credit card holder phone number is required. If false, it is not required.",
          "type": "boolean"
        },
        "interbankNbrReqInd": {
          "description": "If true, the credit card interbank number is required. If false, it is not required.",
          "type": "boolean"
        },
        "bookingSourceAllowedInd": {
          "description": "When true, the booking source may be used to guarantee the booking.",
          "type": "boolean"
        },
        "corpDiscountNbrAllowedInd": {
          "description": "When true, the corporate discount number may be used to guarantee the booking.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Deadline": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "Deadline"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "deadlineType": {
          "description": "An enumerated list of deadline types e.g.Before Arrival.",
          "$ref": "#/definitions/DeadlineDropTime_Enum"
        },
        "ExtensionPoint_Shared": {
          "$ref": "#/definitions/ExtensionPoint_Shared"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "DeadlineTimePeriod": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "Deadline"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Deadline"
        },
        {
          "properties": {
            "minPeriod": {
              "description": "The minimum time period.",
              "type": "integer",
              "format": "int32"
            },
            "maxPeriod": {
              "description": "The maximum time period",
              "type": "integer",
              "format": "int32"
            },
            "timePeriod": {
              "description": "Assigned Type: ota2-0500:StringTiny",
              "type": "string",
              "maxLength": 32
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "DeadlineAbsoluteDate": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "Deadline"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Deadline"
        },
        {
          "properties": {
            "absoluteDateTime": {
              "description": "Assigned Type: ota2-0500:DateTime",
              "type": "string",
              "format": "date-time"
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "RoomOccupancy": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "RoomOccupancy"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "minOccupancy": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "ph",
                "value": "1"
              }
            ]
          },
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "maxOccupancy": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "ph",
                "value": "4"
              }
            ]
          },
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "standardOccupancy": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "AgeQualifying": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgeQualifyingCode_Enum"
          },
          "maxItems": 20
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "BasicPropertyInfo": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "BasicPropertyInfo"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "code": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "ph",
                "value": "WASJW"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "name": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "ph",
                "value": "JW Marriott Washington DC"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "chainCode": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "ph",
                "value": "MC"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "brandCode": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "ph",
                "value": "FS"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "cityCode": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "ph",
                "value": "WAS"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Site": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "BasicPropertyInfo"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "code": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "ph",
                "value": "WASJW"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "name": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "ph",
                "value": "JW Marriott Washington DC"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "chainCode": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "ph",
                "value": "MC"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "brandCode": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "ph",
                "value": "FS"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "cityCode": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "ph",
                "value": "WAS"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "BasicPropertyInfoDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "BasicPropertyInfo"
      },
      "allOf": [
        {
          "$ref": "#/definitions/BasicPropertyInfo"
        },
        {
          "properties": {
            "nameShort": {
              "description": "Assigned Type: ota2-0500:StringShort",
              "type": "string",
              "maxLength": 128
            },
            "chainName": {
              "description": "Assigned Type: ota2-0500:StringShort",
              "x-otm-annotations": {
                "examples": [
                  {
                    "context": "ph",
                    "value": "Marriott"
                  }
                ]
              },
              "type": "string",
              "maxLength": 128
            },
            "brandName": {
              "description": "Assigned Type: ota2-0500:StringShort",
              "x-otm-annotations": {
                "examples": [
                  {
                    "context": "ph",
                    "value": "Full Service"
                  }
                ]
              },
              "type": "string",
              "maxLength": 128
            },
            "areaID": {
              "description": "Assigned Type: ota2-0500:String",
              "type": "string",
              "maxLength": 512
            },
            "hotelCode_TTI": {
              "description": "Assigned Type: ota2-0500:NonNegativeInteger",
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "hotelCodeContext": {
              "description": "Assigned Type: ota2-0500:StringShort",
              "type": "string",
              "maxLength": 128
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "SiteDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "BasicPropertyInfo"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Site"
        },
        {
          "properties": {
            "nameShort": {
              "description": "Assigned Type: ota2-0500:StringShort",
              "type": "string",
              "maxLength": 128
            },
            "chainName": {
              "description": "Assigned Type: ota2-0500:StringShort",
              "x-otm-annotations": {
                "examples": [
                  {
                    "context": "ph",
                    "value": "Marriott"
                  }
                ]
              },
              "type": "string",
              "maxLength": 128
            },
            "brandName": {
              "description": "Assigned Type: ota2-0500:StringShort",
              "x-otm-annotations": {
                "examples": [
                  {
                    "context": "ph",
                    "value": "Full Service"
                  }
                ]
              },
              "type": "string",
              "maxLength": 128
            },
            "areaID": {
              "description": "Assigned Type: ota2-0500:String",
              "type": "string",
              "maxLength": 512
            },
            "hotelCode_TTI": {
              "description": "Assigned Type: ota2-0500:NonNegativeInteger",
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "hotelCodeContext": {
              "description": "Assigned Type: ota2-0500:StringShort",
              "type": "string",
              "maxLength": 128
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "HotelDescriptiveContentListResponse": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "BaseResponse"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "HotelDescriptiveContent": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HotelDescriptiveContentID"
          }
        },
        "PayloadStdAttributes": {
          "description": "Assigned Type: ota2-0500:PayloadStdAttributes",
          "$ref": "#/definitions/PayloadStdAttributes"
        },
        "Result": {
          "description": "Assigned Type: ota2-0500:Result",
          "$ref": "#/definitions/Result"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "HotelDescriptiveContentQueryInfo": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "HotelDescriptiveContent"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "ProcessingInfo": {
          "description": "Assigned Type: ota2-0500:ProcessingInfo",
          "$ref": "#/definitions/ProcessingInfo"
        },
        "HotelDescriptiveRequestInfo": {
          "description": "Assigned Type: orghs-0400:HotelDescriptiveRequestInfo",
          "$ref": "#/definitions/HotelDescriptiveRequestInfo"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "HotelDescriptiveContentQueryGet": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "HotelDescriptiveContent"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "BasicPropertyInfo": {
          "description": "Assigned Type: ph-0200:BasicPropertyInfo",
          "$ref": "#/definitions/BasicPropertyInfo"
        },
        "ProcessingInfo": {
          "description": "Assigned Type: ota2-0500:ProcessingInfo",
          "$ref": "#/definitions/ProcessingInfo"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "BasicPropertyInfo"
      ],
      "discriminator": "@type"
    },
    "Recreation": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Recreation"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "name": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "sort": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "yearReplaced": {
          "description": "The year when recreation associated equipment was last replaced.",
          "type": "string",
          "format": "date"
        },
        "language": {
          "description": "Identifies the language in which the attraction information is sent.",
          "type": "string"
        },
        "Proximity": {
          "description": "Assigned Type: ota2-0400:Proximity_Enum",
          "$ref": "#/definitions/Proximity_Enum"
        },
        "ID": {
          "description": "Assigned Type: ota2-0500:Identifier",
          "$ref": "#/definitions/Identifier"
        },
        "RecreationService": {
          "description": "Assigned Type: ota2-0400:RecreationService_Enum",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            }
          },
          "$ref": "#/definitions/RecreationService_Enum"
        },
        "ContactInformation": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactInformation"
          },
          "maxItems": 10
        },
        "OperationSchedule": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationSchedule"
          },
          "maxItems": 100
        },
        "ReferencePoint": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReferencePoint"
          },
          "maxItems": 100
        },
        "MultimediaCollection": {
          "description": "Assigned Type: ota2-0500:MultimediaCollection",
          "$ref": "#/definitions/MultimediaCollection"
        },
        "RecreationFeature": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecreationFeature"
          },
          "maxItems": 100
        },
        "Description": {
          "description": "Assigned Type: ota2-0500:Description",
          "$ref": "#/definitions/Description"
        },
        "includedInd": {
          "description": "When true, this recreation is included with basic room rates.",
          "type": "boolean"
        },
        "featuredInd": {
          "description": "If true, this is a featured recreation for the property.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "HotelDescriptiveContentID": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "HotelDescriptiveContent"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "objID": {
          "description": "A unique identifier within this document for this object.",
          "type": "string"
        },
        "DescriptiveContentRef": {
          "description": "Refers to the obj ID on an object defined elsewhere in the current document.",
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: ota2-0500:Identifier",
          "$ref": "#/definitions/Identifier"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "HotelDescriptiveContent": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "HotelDescriptiveContent"
      },
      "allOf": [
        {
          "$ref": "#/definitions/HotelDescriptiveContentID"
        },
        {
          "properties": {
            "language": {
              "description": "Assigned Type: ota2-0500:LanguageCode",
              "type": "string"
            },
            "CurrencyCode": {
              "description": "Assigned Type: ota2-0500:CurrencyCode",
              "$ref": "#/definitions/CurrencyCode"
            },
            "DistanceUnitOfMeasure": {
              "description": "Assigned Type: ota2-0400:UnitOfMeasure_Enum",
              "$ref": "#/definitions/UnitOfMeasure_Enum"
            },
            "AreaUnitOfMeasure": {
              "description": "Assigned Type: ota2-0400:UnitOfMeasure_Enum",
              "$ref": "#/definitions/UnitOfMeasure_Enum"
            },
            "WeightUnitOfMeasure": {
              "description": "Assigned Type: ota2-0400:UnitOfMeasure_Enum",
              "$ref": "#/definitions/UnitOfMeasure_Enum"
            },
            "TimeZone": {
              "description": "Describes the local time zone in which the hotel is located. This could include additional information regarding time zones (e.g., Daylight Saving Time observed), a proprietary code, the difference between the local time and GMT.",
              "type": "string",
              "maxLength": 128
            },
            "DateTimeSpanWindows": {
              "description": "Assigned Type: ota2-0500:DateTimeSpanWindows",
              "$ref": "#/definitions/DateTimeSpanWindows"
            },
            "DestinationSystemCode": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 32
              },
              "maxItems": 100
            },
            "WeatherInfo": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WeatherInfo"
              },
              "maxItems": 100
            },
            "BasicPropertyInfo": {
              "description": "Assigned Type: ph-0200:BasicPropertyInfo",
              "$ref": "#/definitions/BasicPropertyInfo"
            },
            "HotelPropertyInfo": {
              "description": "Assigned Type: orghs-0400:HotelPropertyInfo",
              "$ref": "#/definitions/HotelPropertyInfo"
            },
            "FacilityInfo": {
              "description": "Assigned Type: orghs-0400:FacilityInfo",
              "$ref": "#/definitions/FacilityInfo"
            },
            "HotelPolicies": {
              "description": "Assigned Type: orghs-0400:HotelPolicies",
              "$ref": "#/definitions/HotelPolicies"
            },
            "AreaInformation": {
              "description": "Assigned Type: org-0400:AreaInformation",
              "$ref": "#/definitions/AreaInformation"
            },
            "AffiliationInfo": {
              "description": "Assigned Type: org-0400:AffiliationInfo",
              "$ref": "#/definitions/AffiliationInfo"
            },
            "MultimediaCollection": {
              "description": "Assigned Type: ota2-0500:MultimediaCollection",
              "$ref": "#/definitions/MultimediaCollection"
            },
            "ContactInformation": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContactInformation"
              },
              "maxItems": 100
            },
            "GDS_Information": {
              "description": "Assigned Type: orghs-0400:GDS_Information",
              "$ref": "#/definitions/GDS_Information"
            },
            "EffectivePeriod": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EffectivePeriod"
              },
              "maxItems": 100
            },
            "RoomBlockInformation": {
              "description": "Assigned Type: orghs-0400:RoomBlockInformation",
              "$ref": "#/definitions/RoomBlockInformation"
            },
            "EnvironmentalImpact": {
              "description": "Assigned Type: ota2-0500:EnvironmentalImpact",
              "$ref": "#/definitions/EnvironmentalImpact"
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "HotelDescriptiveContentQueryHotels": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "HotelDescriptiveContent"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "maxRepsonses": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "BasicPropertyInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BasicPropertyInfo"
          }
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "CategoryCodes": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "CategoryCodes"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "LocationCategory": {
          "description": "Assigned Type: ota2-0400:LocationCategory_Enum",
          "$ref": "#/definitions/LocationCategory_Enum"
        },
        "SegmentCategory": {
          "description": "Assigned Type: ota2-0400:SegmentCategory_Enum",
          "$ref": "#/definitions/SegmentCategory_Enum"
        },
        "HotelCategory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PropertyClassType_Enum"
          },
          "maxItems": 5
        },
        "ArchitecturalStyle": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArchitecturalStyle_Enum"
          },
          "maxItems": 5
        },
        "GuestRoomInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GuestRoomInfo"
          },
          "maxItems": 99
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "GuestRoomInfo": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "GuestRoomInfo"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "GuestRoomInfo_Enum": {
          "description": "Assigned Type: ota2-0400:GuestRoomInfo_Enum",
          "$ref": "#/definitions/GuestRoomInfo_Enum"
        },
        "Quantity": {
          "description": "The quanity of rooms that the hotel has of this type.",
          "type": "integer",
          "format": "int32"
        },
        "RateRangeInfo": {
          "description": "Assigned Type: ota2-0500:RateRangeInfo",
          "$ref": "#/definitions/RateRangeInfo"
        },
        "MultimediaCollection": {
          "description": "Assigned Type: ota2-0500:MultimediaCollection",
          "$ref": "#/definitions/MultimediaCollection"
        },
        "TextParagraph": {
          "description": "Assigned Type: ota2-0500:TextParagraph",
          "$ref": "#/definitions/TextParagraph"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Service": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "Service"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "inventoryCode": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "quantity": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "sort": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "codeDetail": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "Proximity": {
          "description": "Assigned Type: ota2-0400:Proximity_Enum",
          "$ref": "#/definitions/Proximity_Enum"
        },
        "ContactInformation": {
          "description": "Assigned Type: ota2-0500:ContactInformation",
          "$ref": "#/definitions/ContactInformation"
        },
        "RelativePosition": {
          "description": "Assigned Type: ota2-0500:RelativePosition",
          "$ref": "#/definitions/RelativePosition"
        },
        "OperationSchedule": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationSchedule"
          },
          "maxItems": 99
        },
        "MultimediaCollection": {
          "description": "Assigned Type: ota2-0500:MultimediaCollection",
          "$ref": "#/definitions/MultimediaCollection"
        },
        "Description": {
          "description": "Assigned Type: ota2-0500:Description",
          "$ref": "#/definitions/Description"
        },
        "includedInd": {
          "description": "When true, this service is included in the room rate.",
          "type": "boolean"
        },
        "availableToAnyGuestInd": {
          "description": "When tre the service is available to all guests at the facility.",
          "type": "boolean"
        },
        "featuredInd": {
          "description": "When true, this is a featured service for the property.",
          "type": "boolean"
        },
        "ExtensionPoint_Shared": {
          "$ref": "#/definitions/ExtensionPoint_Shared"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "ServiceBusiness": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "Service"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Service"
        },
        {
          "properties": {
            "BusinessService": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BusinessService_Enum"
              },
              "maxItems": 100
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "ServiceHotelAmenity": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "Service"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Service"
        },
        {
          "properties": {
            "HotelAmenity": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Code"
              },
              "maxItems": 500
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "ServiceMealPlan": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "Service"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Service"
        },
        {
          "properties": {
            "MealPlan": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MealPlan_Enum"
              },
              "maxItems": 30
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "ServiceMeetingRoom": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "Service"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Service"
        },
        {
          "properties": {
            "MeetingRoomCode_Enum": {
              "description": "Assigned Type: ota2-0400:MeetingRoomCode_Enum",
              "$ref": "#/definitions/MeetingRoomCode_Enum"
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "DescriptiveContentFeatureSecurity": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "DescriptiveContentFeature"
      },
      "allOf": [
        {
          "$ref": "#/definitions/DescriptiveContentFeature"
        },
        {
          "properties": {
            "SecurityFeature_Enum": {
              "description": "Assigned Type: ota2-0400:SecurityFeature_Enum",
              "$ref": "#/definitions/SecurityFeature_Enum"
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "DescriptiveContentFeatureAccessibility": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "DescriptiveContentFeature"
      },
      "allOf": [
        {
          "$ref": "#/definitions/DescriptiveContentFeature"
        },
        {
          "properties": {
            "AccessibilityCode": {
              "description": "Assigned Type: ota2-0400:DisabilityFeature_Enum",
              "$ref": "#/definitions/DisabilityFeature_Enum"
            },
            "UnitOfMeasure_Enum": {
              "description": "Assigned Type: ota2-0400:UnitOfMeasure_Enum",
              "$ref": "#/definitions/UnitOfMeasure_Enum"
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "FacilityInfo": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "FacilityInfo"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "MeetingRooms": {
          "description": "Assigned Type: org-0400:MeetingRooms",
          "$ref": "#/definitions/MeetingRooms"
        },
        "GuestRooms": {
          "description": "Assigned Type: orghs-0400:GuestRooms",
          "$ref": "#/definitions/GuestRooms"
        },
        "Restaurants": {
          "description": "Assigned Type: org-0400:Restaurants",
          "$ref": "#/definitions/Restaurants"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "GuestRooms": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "GuestRooms"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "maxOccupancy": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "GuestRoom": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GuestRoom"
          },
          "maxItems": 1000
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "GuestRoom": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "GuestRoom"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "iD": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "language": {
          "description": "Assigned Type: ota2-0500:LanguageCode",
          "type": "string"
        },
        "sort": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "roomTypeName": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "nonSmokingQuantity": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "maxOccupancy": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "minOccupancy": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "maxAdultOccupancy": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "maxChildOccupancy": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "Proximity": {
          "description": "Assigned Type: ota2-0400:Proximity_Enum",
          "$ref": "#/definitions/Proximity_Enum"
        },
        "RoomTypeCode": {
          "description": "Assigned Type: ota2-0500:Code",
          "$ref": "#/definitions/Code"
        },
        "TypeRoom": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TypeRoom"
          },
          "maxItems": 5
        },
        "DescriptiveContentAmenity": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DescriptiveContentAmenity"
          },
          "maxItems": 1000
        },
        "DescriptiveContentFeatureAccessibility": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DescriptiveContentFeatureAccessibility"
          },
          "maxItems": 1000
        },
        "DescriptiveContentFeatureSecurity": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DescriptiveContentFeatureSecurity"
          },
          "maxItems": 1000
        },
        "MultimediaCollection": {
          "description": "Assigned Type: ota2-0500:MultimediaCollection",
          "$ref": "#/definitions/MultimediaCollection"
        },
        "Description": {
          "description": "Assigned Type: ota2-0500:Description",
          "$ref": "#/definitions/Description"
        },
        "compositeInd": {
          "description": "Indicates that the room type contains multiple rooms sold as a single unit.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "TypeRoom": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "TypeRoom"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "standardBedQuantity": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "standardOccupancy": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "maxRollaways": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "size": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "count": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "name": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "roomTypeCode": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "gDSRoomTypeCode": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "roomID": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "floor": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "inventoryBlockCode": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "configuration": {
          "description": "Assigned Type: ota2-0500:String",
          "type": "string",
          "maxLength": 512
        },
        "sizeMeasurement": {
          "description": "Assigned Type: ota2-0500:String",
          "type": "string",
          "maxLength": 512
        },
        "quantity": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "roomGender": {
          "description": "Used to request or specify a gender assignment for a room. Note: Typically used by Hosteliers.",
          "$ref": "#/definitions/RoomGender_Enum"
        },
        "maxCribs": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "RoomCategory": {
          "description": "Assigned Type: ota2-0400:SegmentCategory_Enum",
          "$ref": "#/definitions/SegmentCategory_Enum"
        },
        "RoomLocationCode": {
          "description": "Assigned Type: ota2-0400:RoomLocation_Enum",
          "$ref": "#/definitions/RoomLocation_Enum"
        },
        "RoomView": {
          "description": "Assigned Type: ota2-0400:RoomViewType_Enum",
          "$ref": "#/definitions/RoomViewType_Enum"
        },
        "BedType": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BedType_Enum"
          },
          "maxItems": 5
        },
        "RoomClassification": {
          "description": "Assigned Type: ota2-0400:GuestRoomInfo_Enum",
          "$ref": "#/definitions/GuestRoomInfo_Enum"
        },
        "RoomArchitecture": {
          "description": "Assigned Type: ota2-0400:ArchitecturalStyle_Enum",
          "$ref": "#/definitions/ArchitecturalStyle_Enum"
        },
        "nonsmokingInd": {
          "description": "When true, this room type is non-smoking.",
          "type": "boolean"
        },
        "compositeInd": {
          "description": "When true, the room (suite) is a composite of smaller units.",
          "type": "boolean"
        },
        "shareRoomInd": {
          "description": "When true, the room requires or has sharing available. Note: Typically used by Hosteliers.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "DescriptiveContentAmenity": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "DescriptiveContentAmenity"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "quantity": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "amenityID": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "RoomAmenity": {
          "description": "Assigned Type: ota2-0500:Code",
          "$ref": "#/definitions/Code"
        },
        "OperationSchedule": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationSchedule"
          },
          "maxItems": 100
        },
        "ContactInformation": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactInformation"
          },
          "maxItems": 10
        },
        "MultimediaCollection": {
          "description": "Assigned Type: ota2-0500:MultimediaCollection",
          "$ref": "#/definitions/MultimediaCollection"
        },
        "Description": {
          "description": "Assigned Type: ota2-0500:Description",
          "$ref": "#/definitions/Description"
        },
        "includedInRateInd": {
          "description": "When true, this indicates that the amenity or service is included in the room rate (i.e., this service or amenity has no additional charge).",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "HotelPolicies": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "HotelPolicies"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "HotelPolicy": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HotelPolicy"
          },
          "maxItems": 100
        },
        "guaranteeRoomTypeViaGDSInd": {
          "description": "When true, indicates that room types can be guaranteed on reservations booked through GDS channels.",
          "type": "boolean"
        },
        "guaranteeRoomTypeViaCRCInd": {
          "description": "When true, indicates that room types can be guaranteed on reservations booked by central reservation centers.",
          "type": "boolean"
        },
        "guaranteeRoomTypeViaPropertyInd": {
          "description": "When true, indicates that room types can be guaranteed on reservations booked by the property.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "HotelPolicy": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "HotelPolicy"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "defaultValidBookingMinOffset": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "code": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "DateTimeSpanWindows": {
          "description": "Assigned Type: ota2-0500:DateTimeSpanWindows",
          "$ref": "#/definitions/DateTimeSpanWindows"
        },
        "DaysOfWeek": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DayOfWeek_Enum"
          },
          "maxItems": 7
        },
        "HotelCancelPolicy": {
          "description": "Assigned Type: orghs-0400:HotelCancelPolicy",
          "$ref": "#/definitions/HotelCancelPolicy"
        },
        "GuaranteesAccepted": {
          "description": "Assigned Type: order-0400:GuaranteesAccepted",
          "$ref": "#/definitions/GuaranteesAccepted"
        },
        "PaymentsAccepted": {
          "description": "Assigned Type: order-0400:PaymentsAccepted",
          "$ref": "#/definitions/PaymentsAccepted"
        },
        "HotelPolicyInformation": {
          "description": "Assigned Type: orghs-0400:HotelPolicyInformation",
          "$ref": "#/definitions/HotelPolicyInformation"
        },
        "TaxPolicies": {
          "description": "Assigned Type: orghs-0400:TaxPolicies",
          "$ref": "#/definitions/TaxPolicies"
        },
        "PetPolicies": {
          "description": "Assigned Type: orghs-0400:PetPolicies",
          "$ref": "#/definitions/PetPolicies"
        },
        "FeePolicies": {
          "description": "Assigned Type: orghs-0400:FeePolicies",
          "$ref": "#/definitions/FeePolicies"
        },
        "RatePolicies": {
          "description": "Assigned Type: orghs-0400:RatePolicies",
          "$ref": "#/definitions/RatePolicies"
        },
        "GroupPolicies": {
          "description": "Assigned Type: orghs-0400:GroupPolicies",
          "$ref": "#/definitions/GroupPolicies"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "HotelCancelPolicy": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "HotelCancelPolicy"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "CancelPenalty": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CancelPenalty"
          },
          "maxItems": 100
        },
        "cancelPolicyInd": {
          "description": "When true, indicates a cancel policy exits. When false, no cancel policy exists. Typically this indicator is used when details are not being sent.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "HotelPolicyInformation": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "HotelPolicyInformation"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "checkInTime": {
          "description": "The usual check-in time for a facility.",
          "type": "string"
        },
        "checkOutTime": {
          "description": "The usual check-out time for the facility.",
          "type": "string"
        },
        "minGuestAge": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "usualStayFreeCutoffAge": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "usualStayFreeChildPerAdult": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "totalGuestCount": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "MaxChildAge": {
          "description": "The maximum age for a child price.",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "Description": {
          "description": "Assigned Type: ota2-0500:Description",
          "$ref": "#/definitions/Description"
        },
        "defaultTaxServiceIncludedInd": {
          "description": "When true, taxes and service charges are included, by default, with this facility\u0027s rates.",
          "type": "boolean"
        },
        "kidsStayFreeInd": {
          "description": "When true, there is no charge for children.",
          "type": "boolean"
        },
        "adultsOnlyInd": {
          "description": "When true, this property only accepts adult guests, children not permitted.",
          "type": "boolean"
        },
        "couplesOnlyInd": {
          "description": "When true, this property only accepts couples.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "TaxPolicies": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "TaxPolicies"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "TaxPolicy": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxPolicy"
          },
          "maxItems": 100
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "TaxPolicy": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "TaxPolicy"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "sequenceNbr": {
          "description": "Assigned Type: ota2-0500:String",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Changed type from {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}nonNegativeInteger.",
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            }
          },
          "type": "string",
          "maxLength": 512
        },
        "nightsForTaxExemptionQuantity": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "taxableNightsQuantity": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "Amount": {
          "description": "Assigned Type: ota2-0500:Amount",
          "$ref": "#/definitions/Amount"
        },
        "EffectiveExpire": {
          "description": "Assigned Type: ota2-0500:DateEffectiveExpire",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: EffectiveExpireOptionalDateGroup"
              ]
            }
          },
          "$ref": "#/definitions/DateEffectiveExpire"
        },
        "TaxType_Enum": {
          "description": "Assigned Type: ota2-0400:TaxType_Enum",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": ""
              }
            ]
          },
          "$ref": "#/definitions/TaxType_Enum"
        },
        "DateTimeSpanWindows": {
          "description": "Assigned Type: ota2-0500:DateTimeSpanWindows",
          "$ref": "#/definitions/DateTimeSpanWindows"
        },
        "Description": {
          "description": "Assigned Type: ota2-0500:Description",
          "$ref": "#/definitions/Description"
        },
        "taxExcludedInd": {
          "description": "When present and true, this tax is excluded.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "PetPolicy": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "PetPolicy"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "maxPetQuantity": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "PetPolicy_Enum": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PetPolicy_Enum"
          },
          "maxItems": 20
        },
        "UnitOfMeasure": {
          "description": "Assigned Type: ota2-0500:UnitOfMeasure",
          "$ref": "#/definitions/UnitOfMeasure"
        },
        "NonRefundableFee": {
          "description": "Assigned Type: ota2-0500:CurrencyAmount",
          "$ref": "#/definitions/CurrencyAmount"
        },
        "ChargeFrequency": {
          "description": "Assigned Type: ota2-0400:ChargeUnit_Enum",
          "$ref": "#/definitions/ChargeUnit_Enum"
        },
        "Description": {
          "description": "Assigned Type: ota2-0500:Description",
          "$ref": "#/definitions/Description"
        },
        "refundableDepositInd": {
          "description": "When true, the pet deposit is refundable.",
          "type": "boolean"
        },
        "restrictionInd": {
          "description": "When true, there is a restriction associated with this pet policy.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "PetPolicies": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "PetPolicies"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "PetsAllowed_Enum": {
          "description": "Assigned Type: ota2-0400:PetsAllowed_Enum",
          "$ref": "#/definitions/PetsAllowed_Enum"
        },
        "PetPolicy": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PetPolicy"
          },
          "maxItems": 100
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "FeePolicy": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "FeePolicy"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "type": {
          "description": "Used to indicate if the amount is inclusive or exclusive of other charges, such as taxes, or is cumulative (amounts have been added to each other).",
          "$ref": "#/definitions/AmountDetermination_Enum"
        },
        "Price": {
          "description": "Assigned Type: ota2-0500:Price",
          "$ref": "#/definitions/Price"
        },
        "FeeType": {
          "description": "Assigned Type: ota2-0400:FeeType_Enum",
          "$ref": "#/definitions/FeeType_Enum"
        },
        "Description": {
          "description": "Assigned Type: ota2-0500:Description",
          "$ref": "#/definitions/Description"
        },
        "FeeDetail": {
          "description": "Assigned Type: ota2-0500:FeeDetail",
          "$ref": "#/definitions/FeeDetail"
        },
        "DateTimeSpanWindows": {
          "description": "Assigned Type: ota2-0500:DateTimeSpanWindows",
          "$ref": "#/definitions/DateTimeSpanWindows"
        },
        "taxExcludedInd": {
          "description": "When true, tax is excluded from the price.",
          "type": "boolean"
        },
        "mandatoryInd": {
          "description": "When true, indicates the fee is mandatory. When false, the fee is not mandatory.",
          "type": "boolean"
        },
        "taxableInd": {
          "description": "When true, this fee is subject to tax.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "FeePolicies": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "FeePolicies"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "FeePolicy": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeePolicy"
          },
          "maxItems": 100
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "RatePolicy": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "RatePolicy"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "minRoomNightCommittment": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "RatePlanType": {
          "description": "Assigned Type: ota2-0400:RatePlanType_Enum",
          "$ref": "#/definitions/RatePlanType_Enum"
        },
        "GuestType": {
          "description": "Assigned Type: ota2-0400:GuestType_Enum",
          "$ref": "#/definitions/GuestType_Enum"
        },
        "RateOfferType": {
          "description": "Assigned Type: ota2-0400:RatePlanType_Enum",
          "$ref": "#/definitions/RatePlanType_Enum"
        },
        "Description": {
          "description": "Assigned Type: ota2-0500:Description",
          "$ref": "#/definitions/Description"
        },
        "subjectToChangeInd": {
          "description": "When true, this rate type is subject to change without notice.",
          "type": "boolean"
        },
        "IdRequiredInd": {
          "description": "When true, ID is required at check-in.",
          "type": "boolean"
        },
        "corporateIdInd": {
          "description": "When true, a corporate ID is required to book a corporate rate.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "RatePolicies": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "RatePolicies"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "RatePolicy": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RatePolicy"
          },
          "maxItems": 100
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "GroupPolicies": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "GroupPolicies"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "maxNumberOfRooms": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "LocalDMCRole": {
          "description": "Assigned Type: orghs-0400:Role_Enum",
          "$ref": "#/definitions/Role_Enum"
        },
        "GroupPolicy": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupPolicy"
          },
          "maxItems": 100
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Role_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "Role_Enum"
      },
      "type": "string",
      "enum": [
        "Required",
        "Suggested"
      ]
    },
    "GroupPolicy": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "GroupPolicy"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "contractLanguage": {
          "description": "The language that the contract is available in.",
          "type": "string"
        },
        "contractCurrency": {
          "description": "Assigned Type: ota2-0500:CurrencyCode_ISO4217",
          "type": "string",
          "pattern": "[a-zA-Z]{3}"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "RecreationFeature": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "RecreationFeature"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "RecreationFeature": {
          "description": "Assigned Type: ota2-0400:RecreationFeatures_Enum",
          "$ref": "#/definitions/RecreationFeatures_Enum"
        },
        "FeatureValue": {
          "description": "Value associated with the RecreationFeature enumeration.",
          "type": "string",
          "maxLength": 128
        },
        "Description": {
          "description": "Assigned Type: ota2-0500:Description",
          "$ref": "#/definitions/Description"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "OtherHotel": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "OtherHotel"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "SegmentCategory": {
          "description": "Assigned Type: ota2-0400:SegmentCategory_Enum",
          "$ref": "#/definitions/SegmentCategory_Enum"
        },
        "BasicPropertyInfo": {
          "description": "Assigned Type: ph-0200:BasicPropertyInfo",
          "$ref": "#/definitions/BasicPropertyInfo"
        },
        "ContactInformation": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactInformation"
          },
          "maxItems": 100
        },
        "ReferencePoint": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReferencePoint"
          },
          "maxItems": 100
        },
        "competitorInd": {
          "description": "When true, indicates this hotel is a competitor.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "DistributionSystem": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "DistributionSystem"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "BasicPropertyInfo": {
          "description": "Assigned Type: ph-0200:BasicPropertyInfo",
          "$ref": "#/definitions/BasicPropertyInfo"
        },
        "CompanyName": {
          "description": "Assigned Type: ota2-0500:CompanyName",
          "$ref": "#/definitions/CompanyName"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Brand": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Brand"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "URL": {
          "description": "Assigned Type: ota2-0500:URL",
          "$ref": "#/definitions/URL"
        },
        "BasicPropertyInfo": {
          "description": "Assigned Type: ph-0200:BasicPropertyInfo",
          "$ref": "#/definitions/BasicPropertyInfo"
        },
        "Marketing": {
          "description": "Name of brand, marketing chain, representation company or other affiliation(s).",
          "type": "string",
          "maxLength": 512
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "PartnerInfo": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "PartnerInfo"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "ContactInformation": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactInformation"
          },
          "maxItems": 10
        },
        "Description": {
          "description": "Assigned Type: ota2-0500:Description",
          "$ref": "#/definitions/Description"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "GDS_Information": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "GDS_Information"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "masterChainCode": {
          "description": "Assigned Type: ota2-0500:StringLength2",
          "type": "string",
          "maxLength": 2,
          "minLength": 2
        },
        "GDS_Codes": {
          "description": "Assigned Type: orghs-0400:GDS_Codes",
          "$ref": "#/definitions/GDS_Codes"
        },
        "GDS_Status": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GDS_Status"
          },
          "maxItems": 100
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "GDS_Codes": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "GDS_Codes"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "GDS_Code": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GDS_Code"
          },
          "maxItems": 100
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "GDS_CodesDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "GDS_Codes"
      },
      "allOf": [
        {
          "$ref": "#/definitions/GDS_Codes"
        },
        {
          "properties": {
            "loadGDSInd": {
              "description": "When true, this indicates rates will be loaded to specified GDSs. This attribute is also under GDS_Code to associate the rate load for an individual GDS. (This may also be used to idicate the willingness to upload rates to GDSs even if not specified in the request message.)",
              "type": "boolean"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "GDS_Code": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "GDS_Code"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "gDS_PropertyCode": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "gDS_Name": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "chainCode": {
          "description": "Assigned Type: ota2-0500:StringLength2",
          "type": "string",
          "maxLength": 2,
          "minLength": 2
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "GDS_CodeDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "GDS_Code"
      },
      "allOf": [
        {
          "$ref": "#/definitions/GDS_Code"
        },
        {
          "properties": {
            "gDS_RoomTypeCode": {
              "description": "Assigned Type: ota2-0500:StringTiny",
              "type": "string",
              "maxLength": 32
            },
            "gDS_PropertyShortName": {
              "description": "Assigned Type: ota2-0500:StringTiny",
              "type": "string",
              "maxLength": 32
            },
            "gDS_PropertyLongName": {
              "description": "Assigned Type: ota2-0500:StringShort",
              "type": "string",
              "maxLength": 128
            },
            "GDS_CodeInfo": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GDS_CodeInfo"
              },
              "maxItems": 100
            },
            "loadGDSInd": {
              "description": "This attribute is used in conjunction with the GDS_Name. When true, this indicates rates will be loaded to the GDS specified by the GDS_Name.",
              "type": "boolean"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "GDS_CodeInfo": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "GDS_CodeInfo"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "pseudoCityCode": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "agencyName": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "GDS_Status": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "GDS_Status"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "code": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "name": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "HotelStatus": {
          "description": "Assigned Type: ota2-0400:HotelStatus_Enum",
          "$ref": "#/definitions/HotelStatus_Enum"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "EffectivePeriod": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "EffectivePeriod"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "DateEffectiveExpire": {
          "description": "Assigned Type: ota2-0500:DateEffectiveExpire",
          "$ref": "#/definitions/DateEffectiveExpire"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "RoomBlockInformation": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "RoomBlockInformation"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "totalRoomQuantity": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "cancelPeriodDays": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "BlackoutDates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BlackoutDates"
          },
          "maxItems": 100
        },
        "availableInd": {
          "description": "When true, room blocks are accepted.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "HotelPropertyInfo": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "HotelPropertyInfo"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "pMSSystem": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "CategoryCodes": {
          "description": "Assigned Type: orghs-0400:CategoryCodes",
          "$ref": "#/definitions/CategoryCodes"
        },
        "ServiceBusiness": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceBusiness"
          },
          "maxItems": 100
        },
        "ServiceHotelAmenity": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceHotelAmenity"
          },
          "maxItems": 1000
        },
        "ServiceMealPlan": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceMealPlan"
          },
          "maxItems": 100
        },
        "ServiceMeetingRoom": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceMeetingRoom"
          },
          "maxItems": 100
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "HotelDescriptiveRequestInfo": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "HotelDescriptiveRequestInfo"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "languageRequested": {
          "description": "The language in which the hotel property information should be returned.",
          "type": "string"
        },
        "BasicPropertyInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BasicPropertyInfo"
          }
        },
        "HotelRequestInfo": {
          "description": "Assigned Type: orghs-0400:HotelRequestInfo",
          "$ref": "#/definitions/HotelRequestInfo"
        },
        "FacilityRequestInfo": {
          "description": "Assigned Type: orghs-0400:FacilityRequestInfo",
          "$ref": "#/definitions/FacilityRequestInfo"
        },
        "PolicyRequestInfo": {
          "description": "Assigned Type: orghs-0400:PolicyInfo",
          "$ref": "#/definitions/PolicyInfo"
        },
        "AreaRequestInfo": {
          "description": "Assigned Type: orghs-0400:AreaInfo",
          "$ref": "#/definitions/AreaInfo"
        },
        "AffiliationRequestInfo": {
          "description": "Assigned Type: orghs-0400:AffiliationInfoRequest",
          "$ref": "#/definitions/AffiliationInfoRequest"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "HotelRequestInfo": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "HotelRequestInfo"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "hotelStatus": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "HotelStatusCode": {
          "description": "Assigned Type: ota2-0400:PropertyStatus_Enum",
          "$ref": "#/definitions/PropertyStatus_Enum"
        },
        "sendDataInd": {
          "description": "When true, send hotel property info data.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "PolicyInfo": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "PolicyInfo"
      },
      "description": "Used to indicate if policy information is being requested.",
      "properties": {
        "sendPoliciesInd": {
          "description": "When true, policy information is being requested.",
          "type": "boolean"
        }
      }
    },
    "FacilityRequestInfo": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "FacilityRequestInfo"
      },
      "properties": {
        "sendMeetingRoomsInd": {
          "description": "When true, send meeting room information.",
          "type": "boolean"
        },
        "sendGuestRoomsInd": {
          "description": "When true, send guest room information.",
          "type": "boolean"
        },
        "sendRestaurantsInd": {
          "description": "When true, send restaurant information.",
          "type": "boolean"
        }
      }
    },
    "AreaInfo": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "AreaInfo"
      },
      "description": "Used to specifiy if area information is being requested.",
      "properties": {
        "sendRefPointsInd": {
          "description": "When true, reference point information is being requested.",
          "type": "boolean"
        },
        "sendAttractionsInd": {
          "description": "When true, attraction information is being requested.",
          "type": "boolean"
        },
        "sendRecreationsInd": {
          "description": "When true, recreation information is being requested.",
          "type": "boolean"
        }
      }
    },
    "AffiliationInfoRequest": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "AffiliationInfoRequest"
      },
      "description": "Used to indicated if affiliation information is being requested.",
      "properties": {
        "sendDistribSystemsInd": {
          "description": "When true, distribution system information is being requested.",
          "type": "boolean"
        },
        "sendBrandInd": {
          "description": "When true Brand information is being rquested.",
          "type": "boolean"
        },
        "sendLoyalProgramsInd": {
          "description": "When true, loyalty program information is being requested.",
          "type": "boolean"
        },
        "sendAwardsInd": {
          "description": "When true, award information is being requested.",
          "type": "boolean"
        }
      }
    },
    "DeadlineDropTime_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "DeadlineDropTime_Enum"
      },
      "description": "An enumerated type indicating when the deadline drop time goes into effect.",
      "type": "string",
      "enum": [
        "BeforeArrival",
        "AfterBooking",
        "AfterConfirmation",
        "AfterArrival",
        "AfterDeparture",
        "BeforeDeparture"
      ]
    },
    "MeetingRoomFormat_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "MeetingRoomFormat_Enum"
      },
      "properties": {
        "value": {
          "$ref": "#/definitions/MeetingRoomFormat_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "MeetingRoomFormat_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "MeetingRoomFormat_Enum"
      },
      "type": "string",
      "enum": [
        "Ballroom",
        "Banquet",
        "Boardroom",
        "Classroom",
        "Classroom - 2 per 6 ft. tables",
        "Classroom - 3 per 6 ft. tables",
        "Classroom - 3 per 8 ft. tables",
        "Classroom - 4 per 8 ft. tables",
        "Classroom (Chevron) - 2 per 6 ft. tables",
        "Classroom (Chevron) - 3 per 6 ft. tables",
        "Classroom (Chevron) - 3 per 8 ft. tables",
        "Classroom (Chevron) - 4 per 8 ft. tables",
        "Cocktail Rounds",
        "Conference",
        "Crescent Rounds",
        "Crescent Rounds of 5",
        "Crescent Rounds of 6",
        "Custom",
        "E-shaped",
        "Existing",
        "Exhibit",
        "8\u0027 x 10\u0027 exhibits",
        "10\u0027 x 10\u0027 exhibits",
        "Rounds for 10",
        "Island exhibit",
        "Tabletop exhibits",
        "Peninsula exhibit",
        "Open square",
        "Perimeter exhibit",
        "Flow (no tables or chairs)",
        "Foyer",
        "Hollow square",
        "Perimeter Seating",
        "Reception",
        "Registration",
        "Round tables",
        "Rounds for 8",
        "Rounds for 12",
        "Royal conference",
        "Talk Show",
        "Theatre",
        "Theater - Chevron",
        "Theater - Semi-circle",
        "T-shaped",
        "U-shaped",
        "Other_"
      ]
    },
    "DocumentType_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "DocumentType_Enum"
      },
      "description": "Defines the specific type of identification or certification document.",
      "properties": {
        "value": {
          "$ref": "#/definitions/DocumentType_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "DocumentType_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "DocumentType_Enum"
      },
      "description": "Defines the specific type of identification or certification document.",
      "type": "string",
      "enum": [
        "NaturalizationCertificate",
        "PassportCard",
        "CrewMemberCertificate",
        "AirNexusCard",
        "MerchantMariner",
        "Non-standard",
        "KnownTravelerNumber",
        "RedressNumber",
        "PermanentResidentCard",
        "PilotsLicense",
        "RefugeeTravelDocument",
        "BorderCrossingCard",
        "VerhicleRegistrationNumber",
        "TaxexEmptionNumber",
        "InsurancePolicyNumber",
        "AlienRegistrationNumber",
        "VaccinationCertificate",
        "NationalIdentityDocument",
        "DriversLicense",
        "MilitaryIdentification",
        "Passport",
        "Visa",
        "Other_"
      ]
    },
    "DurationUnit_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "DurationUnit_Enum"
      },
      "description": "Defines the \u0027Units\u0027 that can be applied to Stay restrictions.",
      "properties": {
        "value": {
          "$ref": "#/definitions/DurationUnit_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "DurationUnit_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "DurationUnit_Enum"
      },
      "description": "Defines the \u0027Units\u0027 that can be applied to Stay restrictions.",
      "type": "string",
      "enum": [
        "SUN",
        "SAT",
        "FRI",
        "THU",
        "WED",
        "TUES",
        "MON",
        "Months",
        "Days",
        "Hours",
        "Minutes",
        "Other_"
      ]
    },
    "BedType_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "BedType_Enum"
      },
      "description": "The type(s) of sleeping option(s) in a guest accommodation.",
      "properties": {
        "value": {
          "$ref": "#/definitions/BedType_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "BedType_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "BedType_Enum"
      },
      "description": "The type(s) of sleeping option(s) in a guest accommodation.",
      "type": "string",
      "enum": [
        "Dorm bed",
        "Double/full",
        "Futon",
        "King",
        "Murphy bed",
        "Queen",
        "Run of the house",
        "Sofa bed",
        "Tatami mats",
        "Twin/single",
        "Water bed",
        "Other_"
      ]
    },
    "GuestType_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "GuestType_Enum"
      },
      "description": "Category of guest.",
      "properties": {
        "value": {
          "$ref": "#/definitions/GuestType_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "GuestType_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "GuestType_Enum"
      },
      "description": "Category of guest.",
      "type": "string",
      "enum": [
        "Contractor",
        "Corporate employee",
        "Corporate transient",
        "Frequent guest",
        "Government",
        "Leisure",
        "Meeting attendee",
        "Retired",
        "Subsidiary",
        "VIP",
        "Other_"
      ]
    },
    "LocationCategory_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "LocationCategory_Enum"
      },
      "properties": {
        "value": {
          "$ref": "#/definitions/LocationCategory_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "LocationCategory_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "LocationCategory_Enum"
      },
      "type": "string",
      "enum": [
        "Airport",
        "Bay",
        "Beach",
        "Beachfront",
        "Buisness district",
        "City",
        "Downtown",
        "Entertainment district",
        "Expressway",
        "Financial district",
        "Gulf",
        "Lake",
        "Marina",
        "Mountain",
        "Oceanfront",
        "Park",
        "Resort",
        "River",
        "Rural",
        "Shopping district",
        "Suburban",
        "Theatre district",
        "Waterfront",
        "Other_"
      ]
    },
    "RoomLocation_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "RoomLocation_Enum"
      },
      "description": "Specifies a hotel room location.",
      "properties": {
        "value": {
          "$ref": "#/definitions/RoomLocation_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "RoomLocation_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "RoomLocation_Enum"
      },
      "description": "Specifies a hotel room location.",
      "type": "string",
      "enum": [
        "Annex room",
        "Away from the elevator",
        "Back of building",
        "Concierge floor",
        "Corner",
        "East",
        "Executive floor",
        "Frequent guest floor",
        "Front of building",
        "Ground floor",
        "Ground floor inside access",
        "Ground floor outside access",
        "High floor",
        "Lobby level",
        "Low floor",
        "Main building",
        "Near stairs",
        "Near the elevator",
        "North",
        "Poolside",
        "Quiet room",
        "South",
        "Top floor",
        "Tower room",
        "West",
        "Wing room",
        "Other_"
      ]
    },
    "BusinessService_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "BusinessService_Enum"
      },
      "description": "Services, equipment, or supplies provided by the hotel that are generally supportive of work-related activities.",
      "properties": {
        "value": {
          "$ref": "#/definitions/BusinessService_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "BusinessService_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "BusinessService_Enum"
      },
      "description": "Services, equipment, or supplies provided by the hotel that are generally supportive of work-related activities.",
      "type": "string",
      "enum": [
        "Audio visual equipment",
        "Blackboard",
        "Business center",
        "Business services",
        "Calling card calls",
        "Cellular phone rental",
        "Computer",
        "Computer rental",
        "Copier",
        "E-mail service",
        "Fax Machine",
        "Fee charged for first page",
        "Fee charged for first page of outgoing fax",
        "Fee per additional page of incoming fax",
        "Fee per additional page of outgoing fax",
        "Flip charts",
        "Free fax receipt page limit",
        "Free fax transmission page limit",
        "High speed internet connection",
        "Hotel folio breakdown available to credit card company",
        "Incoming fax complimentary",
        "Individual folios available via e-mail or web",
        "International direct dialing",
        "Laptop",
        "Laptop rental",
        "LCD/Projector",
        "Local calls",
        "Local faxes",
        "Long distance calls",
        "Meeting facilities",
        "Meeting/board rooms",
        "Mobile/cellular phone available",
        "Network/internet printing available",
        "Notary public",
        "Notepads",
        "Office supplies",
        "Outgoing fax complimentary",
        "Overnight delivery/pickup",
        "Pager rental",
        "Pens",
        "Post/parcel service",
        "Printer",
        "Private offices and business services",
        "Scanner",
        "Secretarial services",
        "Staffed business center",
        "Tape recorder",
        "Toll free calls",
        "VCR/DVD machine rental",
        "Voicemail",
        "Whiteboard",
        "Wired internet connection",
        "Wireless internet connection",
        "Other_"
      ]
    },
    "CuisineType_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "CuisineType_Enum"
      },
      "description": "The type of food for which the establishment is known; the style\\/manner in which the food is prepared and\\/or served.",
      "properties": {
        "value": {
          "$ref": "#/definitions/CuisineType_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "CuisineType_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "CuisineType_Enum"
      },
      "description": "The type of food for which the establishment is known; the style\\/manner in which the food is prepared and\\/or served.",
      "type": "string",
      "enum": [
        "Afghan",
        "American",
        "Argentinean",
        "Asian",
        "Asian-Fusion",
        "Austrian",
        "Barbeque",
        "Bavarian",
        "Brazilian",
        "Cajun",
        "California",
        "Canadian",
        "Caribbean",
        "Chinese",
        "Coffee shop",
        "Continental",
        "Creole",
        "Deli",
        "Eclectic",
        "English",
        "Ethiopian",
        "European",
        "French",
        "German",
        "Greek",
        "Grill",
        "Halal",
        "Hawaiian",
        "High-tea",
        "Indian",
        "Indonesian",
        "International",
        "Iranian",
        "Irish",
        "Italian",
        "Japanese",
        "Jewish",
        "Korean",
        "Kosher",
        "Latin American",
        "Lebanese",
        "Mediterranean",
        "Mexican",
        "Middle Eastern",
        "Mixed - cafeteria",
        "Modern Australian",
        "Modern Azerbaijan",
        "Mongolian",
        "Moroccan",
        "Multiple",
        "Muslim",
        "Pacific rim",
        "Pizza",
        "Polish",
        "Polynesian",
        "Pub",
        "Russian",
        "Sandwiches",
        "Scandinavian",
        "Scottish",
        "Seafood",
        "Soul food",
        "South American",
        "Southern US",
        "Southwest US",
        "Spanish",
        "Steak houses",
        "Swiss",
        "Tapas",
        "TexMex",
        "Thai",
        "Turkish",
        "Vegetarian",
        "Vietnamese",
        "Other_"
      ]
    },
    "DisabilityFeature_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "DisabilityFeature_Enum"
      },
      "description": "Specifies information about a facility, amenity or service that is relevant to people with a disability.",
      "properties": {
        "value": {
          "$ref": "#/definitions/DisabilityFeature_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "DisabilityFeature_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "DisabilityFeature_Enum"
      },
      "description": "Specifies information about a facility, amenity or service that is relevant to people with a disability.",
      "type": "string",
      "enum": [
        "Accessibility to goods and services",
        "Accessible baths",
        "Accessible entrance",
        "Accessible parking",
        "Accessible platform lifts available",
        "Accessible rooms",
        "Accessible self parking available",
        "Accessible van parking",
        "Accommodations have bath in bedroom",
        "Adapted room doors",
        "Adjustable height hand-held shower wand",
        "Americans with Disabilities Act (ADA) compliance",
        "Assistive listening devices for meetings upon request",
        "Audible emergency alarm for sight impaired guest",
        "Bathroom doors in inches",
        "Bathroom doors open outwards",
        "Bathroom vanity in guest rooms for wheelchair user\u0027s height",
        "Bathtub grab bars",
        "Bathtub seat",
        "Bed types of wheelchair accessible rooms",
        "Bedroom wheelchair access",
        "Benches in locker rooms.",
        "Braille signage provided",
        "Braille/large print literature",
        "Business center",
        "Closed caption TV",
        "Closet rods in guest rooms for disabled person height",
        "Complementary accessible transportation with advanced notice",
        "Complies with Local/State/Federal laws for disabled",
        "Concierge desk is wheelchair accessible",
        "Describe in detail how your kitchen is accessible.",
        "Does hotel have accessible parking?",
        "Door width in inches",
        "Drinking fountains accessible",
        "Elevator access to all levels",
        "Elevator near accessible rooms",
        "Elevators equipped for accessibility",
        "Elevators have Braille Instructions",
        "Emergency cord/button system in bathroom",
        "Emergency cord/button system in bedroom",
        "Emergency exit signs in Braille",
        "Emergency info in Braille",
        "Emergency instructions in pictorial form",
        "Emergeny procedures for people with disabilites",
        "Exercise facility is wheelchair accessible",
        "Facilities for people with hearing impairment only",
        "Facilities for people with vision impairment only",
        "Feather free bedding/pillows available",
        "Flashing door knocker available",
        "Flat terrain between parking and entrance",
        "Food service lines accessible",
        "Grab bars in bathroom",
        "Guest rooms and access routes are accessible",
        "Hearing impaired services",
        "Hearing induction loop system installed",
        "Height from ground of deadbolt in guest room",
        "Height from ground of elevator external buttons",
        "Height from ground of elevator internal buttons",
        "Height from ground of elevator internal handrails",
        "Height from ground of guest bed including mattress",
        "Height from ground of thermostat in guest room",
        "Height from ground to light switches in bathroom",
        "Height from ground to light switches in guest room",
        "Height from ground to peephole in guest room door",
        "Height of bathroom basin",
        "Height of bathroom toilet seat",
        "Height of controls at highest operable part for bath",
        "Height of controls at highest operable part for roll-in shower",
        "Height of deadbolt in guest room (in feet)",
        "Height of deadbolt in guest room (in Inches)",
        "Height of light switches in guest rooms (feet)",
        "Height of light switches in guest rooms (inches)",
        "Height of non-slip handrails adjacent to bath",
        "Height of non-slip handrails adjacent to bathroom toilet",
        "Height of non-slip handrails in shower area",
        "Height of peephole in guest room (in feet)",
        "Height of peephole in guest room (in inches)",
        "Height of thermostat in guest room (in feet)",
        "Height of thermostat in guest room (in inches)",
        "Hotel entrance is accessible",
        "Hotel restaurant is wheelchair accessible",
        "Impairment aids available",
        "Length/depth of clear floor space in front of bath",
        "Length/depth of clear floor space in front of guest bathroom toilet",
        "Lever handles on guest room doors",
        "Light switches in guest rooms for wheelchair user\u0027s height",
        "List available room types for disabled persons- 8 fields",
        "Locker rooms accessible",
        "Lower level seating required",
        "Lowered electrical outlets",
        "Lowered night guards on guest room doors",
        "Number of accessible meeting rooms",
        "Number of accessible rooms with standard tub",
        "Number of each room type equipped for disabled persons- 8 fields",
        "Number of roll-in showers available",
        "Number of rooms with Braille",
        "Number of rooms with wheelchair accessible showers",
        "Number of wheelchair accessible rooms",
        "Other services for persons with disabilities",
        "Passenger has meet and assist requirement",
        "Passenger has oxygen equipment",
        "Pool is wheelchair accessible",
        "Portable bathtub seats",
        "Public areas wheelchair accessible",
        "Public telephones accessible",
        "Raised toilet seat with grab bars",
        "Ramp access",
        "Registration desk is wheelchair accessible",
        "Restaurant/bar menus available in 14pt print",
        "Restaurant/bar menus available in Braille",
        "Restroom facilities accessible",
        "Roll-in shower area with bathroom seat",
        "Roll-in shower available",
        "Route from accessible public entrance to business center is accessible",
        "Route from accessible public entrance to exercise facility is accessible",
        "Route from accessible public entrance to meeting rooms is accessible",
        "Route from accessible public entrance to pool is accessible",
        "Route from accessible public entrance to registration area is accessible",
        "Route from accessible public entrance to restaurant is accessible",
        "Route from accessible public entrance to spa is accessible",
        "Safety bars in shower",
        "Sales and service counters accessible",
        "Service animals allowed on property for people with disabilities",
        "Service dogs allowed",
        "Special needs menus",
        "Staff proficient in sign language",
        "Staff trained in service to disabled guests",
        "Steps/staircases have color markings",
        "Steps/staircases have handrails",
        "Subtitles/closed captions available on TV",
        "Tactile/14pt print signage throughout hotel",
        "Telephone for hearing impaired",
        "Television amplifier",
        "Toilet seat in guest rooms for disabled person",
        "TTY/TTD compatible",
        "Valet parking accepts and parks vehicles outfitted for wheelchair users",
        "Van accessible parking in self parking",
        "Viabrating alarm available",
        "Vibrating pillows available",
        "Visual emergency alarm for hearing impaired guest",
        "Walk-in shower",
        "What room types have wheel-in showers? (free form stringbox)",
        "Wheelchair accessible elevators",
        "Wheelchair lift required",
        "Wheelchair, passenger has own chair, buses",
        "Wheelchair, passenger has own chair, trains",
        "Wheelchair, passenger requires station wheelchair",
        "Wheelchairs available",
        "Width/diameter of wheelchair turning space in bedroom",
        "Which floors have accessible rooms",
        "Wide corridors",
        "Wide entrance",
        "Wide restaurant entrance",
        "Width/diameter of clear floor space at main hotel entrance",
        "Width/diameter of clear floor space at main restaurant entrance",
        "Width/diameter of clear floor space in front of bath",
        "Width/diameter of clear floor space in front of guest bathroom toilet",
        "Width/diameter of clear opening space at bathroom door",
        "Width/diameter of clear opening space at bedroom door",
        "Width/diameter of elevator clear door opening space",
        "Width/diameter of main corridors",
        "Width/diameter of wheelchair turning space in bathroom",
        "Width/diameter of wheelchair turning space in lobby/reception area",
        "Other_"
      ]
    },
    "RecreationService_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "RecreationService_Enum"
      },
      "description": "Describes the recreational activities available to a guest which may or may not be operated by or located at the hotel.",
      "properties": {
        "value": {
          "$ref": "#/definitions/RecreationService_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "RecreationService_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "RecreationService_Enum"
      },
      "description": "Describes the recreational activities available to a guest which may or may not be operated by or located at the hotel.",
      "type": "string",
      "enum": [
        "Animal watching",
        "Antique shopping",
        "Archery",
        "Badminton court",
        "Baseball diamond",
        "Basketball court",
        "Beach",
        "Bike rental",
        "Bike trail",
        "Billiards",
        "Bird watching",
        "Boat tours",
        "Boating",
        "Bocce court",
        "Bowling alley",
        "Boxing",
        "Camping",
        "Canoeing",
        "Children\u0027s pool",
        "Children\u0027s program",
        "Children\u0027s program, onsite",
        "Cricket pitch",
        "Cross country skiing",
        "Dancing",
        "Dart board",
        "Direct access to a beach",
        "Diving",
        "Dog racing",
        "Downhill skiing",
        "Driving range",
        "Extensive health club",
        "Fishing",
        "Fitness center",
        "Fly fishing",
        "Football field",
        "Gambling",
        "Garden",
        "Golf",
        "Golf location (onsite/nearby)",
        "Health club",
        "Helicopter/airplane sightseeing",
        "Hiking trail",
        "Horse racing",
        "Horseback riding",
        "Hot tub",
        "Hunting",
        "Ice skating",
        "Indoor pool",
        "Indoor tennis courts",
        "Indoor/outdoor connecting pool",
        "Jet-ski",
        "Jogging trail",
        "Karaoke",
        "Kayaking",
        "Kids beach club",
        "Kids equestrian club",
        "Kids golf academy",
        "Lake",
        "Limited health club",
        "Massage services",
        "Miniature golf",
        "Mountain biking trail",
        "Mountain climbing",
        "Museum/gallery",
        "Nature preserve trail",
        "Nightclub",
        "Ocean",
        "Outdoor pool",
        "Outdoor tennis courts",
        "Outlet shopping",
        "Paddle court",
        "Parasailing",
        "Playground",
        "Polo",
        "Pool",
        "Putt putt golf",
        "Racquetball court",
        "River",
        "River rafting",
        "Rock climbing",
        "Safari",
        "Sailing",
        "Sauna",
        "Scuba diving",
        "Shopping",
        "Sightseeing tours",
        "Skating rink",
        "Skeet shooting",
        "Ski in/out facilities",
        "Skydiving",
        "Snorkeling",
        "Snow boarding",
        "Snow mobiling",
        "Snow skiing",
        "Soccer field",
        "Solarium",
        "Spa facility",
        "Sports court",
        "Sports events",
        "Squash court",
        "Steam bath",
        "Sun tanning bed",
        "Sunbathing",
        "Surfing",
        "Table tennis",
        "Teen programs",
        "Tennis court",
        "Tennis professional",
        "Theatre",
        "Tubing",
        "Upscale shopping",
        "Velodrome",
        "Volleyball",
        "Walking track",
        "Water activities",
        "Water-skiing",
        "Weightlifting",
        "Whirlpool",
        "Windsurfing",
        "Wine tasting",
        "Winter sports",
        "Wrestling",
        "Other_"
      ]
    },
    "SecurityFeature_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "SecurityFeature_Enum"
      },
      "description": "Identifies security features of the services, meeting rooms, guest rooms, and restaurants of a property.",
      "properties": {
        "value": {
          "$ref": "#/definitions/SecurityFeature_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "SecurityFeature_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "SecurityFeature_Enum"
      },
      "description": "Identifies security features of the services, meeting rooms, guest rooms, and restaurants of a property.",
      "type": "string",
      "enum": [
        "2nd lock on guest doors",
        "Audible alarm smoke detectors in guest rooms",
        "Audible alarms in hallways",
        "Audible alarms in public areas",
        "Auto link to fire station",
        "Automated External Defibrillator (AED) on-site",
        "Building meets all current local, state and country building codes",
        "Carbon monoxide detector",
        "Complies with Local/State/Federal fire laws",
        "Connecting doors have deadbolts",
        "Dead bolts on guest room doors",
        "Electronic room key",
        "Elevator auto recall",
        "Emergency back-up generators",
        "Emergency evacuation plan",
        "Emergency exits on each floor",
        "Emergency info in room",
        "Emergency lighting",
        "Evacuation drills",
        "Exterior doors (except lobby entrance) require key access at night",
        "FEMA approved",
        "Fire extinguishers",
        "Fire extinguishers in hallways",
        "Fire extinguishers in public areas",
        "First aid available",
        "Guest room doors self-closing",
        "Hard wired smoke detectors",
        "Health club facilities (pool/gym) require key access for entrance",
        "Hours security",
        "If no 24 hour security, what are the hours?",
        "Lighted parking area",
        "Multiple exits on each floor",
        "Patrolled parking area",
        "Private security available",
        "Property has elevators",
        "Public address system",
        "Room access through exterior corridor",
        "Room access through interior corridor",
        "Room accessible through balcony sliding glass doors",
        "Room windows open",
        "Safety chains on guest doors",
        "Secondary locks on room windows",
        "Secondary locks on sliding glass doors",
        "Secured floors",
        "Security",
        "Security 24 hours/day",
        "Security escorts available on request",
        "Smoke detector in guest rooms",
        "Smoke detector in hallways",
        "Smoke detector in public areas",
        "Sprinklers in guest rooms",
        "Sprinklers in hallways",
        "Sprinklers in public areas",
        "Staff Red Cross certified in CPR",
        "Staff trained in Automated External Defibrillator (AED) usage",
        "Staff trained in CPR",
        "Staff trained in duplicate key issue",
        "Staff trained in first aid",
        "Swingbolt lock",
        "Ventilated stair wells",
        "Video cameras at entrance",
        "Video cameras in public areas",
        "Video surveillance monitored 24 hrs a day",
        "Video surveillance of parking",
        "Video surveillance recorded 24 hrs a day",
        "Viewports in guest room doors",
        "VIP Security",
        "Visual alarm in guest rooms",
        "Visual alarms in hallways",
        "Visual alarms in public areas",
        "Other_"
      ]
    },
    "Status_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "Status_Enum"
      },
      "description": "The status condition.",
      "properties": {
        "value": {
          "$ref": "#/definitions/Status_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "Status_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "Status_Enum"
      },
      "description": "The status condition.",
      "type": "string",
      "enum": [
        "Complete",
        "Incomplete",
        "Not processed",
        "Unknown",
        "Other_"
      ]
    },
    "ErrorWarningType_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "ErrorWarningType_Enum"
      },
      "description": "Tthe category of error or warning.",
      "properties": {
        "value": {
          "$ref": "#/definitions/ErrorWarningType_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "ErrorWarningType_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "ErrorWarningType_Enum"
      },
      "description": "Tthe category of error or warning.",
      "type": "string",
      "enum": [
        "Advisory",
        "Application error",
        "Authentication",
        "Authentication timeout",
        "Authorization",
        "Business rule",
        "No implementation",
        "Processing exception",
        "Protocol violation",
        "Required field missing",
        "Unknown",
        "Other_"
      ]
    },
    "PhoneLocation_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "PhoneLocation_Enum"
      },
      "description": "Where the phone is located.",
      "properties": {
        "value": {
          "$ref": "#/definitions/PhoneLocation_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "PhoneLocation_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "PhoneLocation_Enum"
      },
      "description": "Where the phone is located.",
      "type": "string",
      "enum": [
        "Brand reservations office",
        "Central reservations office",
        "Home",
        "Managing company",
        "Mobile",
        "Office",
        "Property direct",
        "Property reservation Office",
        "Sales office",
        "Other_"
      ]
    },
    "PhoneUseType_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "PhoneUseType_Enum"
      },
      "properties": {
        "value": {
          "$ref": "#/definitions/PhoneUseType_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "PhoneUseType_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "PhoneUseType_Enum"
      },
      "type": "string",
      "enum": [
        "Contact",
        "Daytime contact",
        "Emergency contact",
        "Evening contact",
        "Guest use",
        "Mobile",
        "Pickup contact",
        "Toll free number",
        "Travel arranger",
        "Other_"
      ]
    },
    "PhoneTechType_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "PhoneTechType_Enum"
      },
      "description": "Defines the technology associated with this phone number.",
      "properties": {
        "value": {
          "$ref": "#/definitions/PhoneTechType_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "PhoneTechType_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "PhoneTechType_Enum"
      },
      "description": "Defines the technology associated with this phone number.",
      "type": "string",
      "enum": [
        "Voice",
        "Fax",
        "Pager",
        "TTY",
        "Other_"
      ]
    },
    "TimeUnit_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "TimeUnit_Enum"
      },
      "type": "string",
      "enum": [
        "Day",
        "Full duration",
        "Hour",
        "Minute",
        "Month",
        "Second",
        "Week",
        "Year"
      ]
    },
    "FeeType_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "FeeType_Enum"
      },
      "description": "Describes the type of fee or tax.",
      "properties": {
        "value": {
          "$ref": "#/definitions/FeeType_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "FeeType_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "FeeType_Enum"
      },
      "description": "Describes the type of fee or tax.",
      "type": "string",
      "enum": [
        "Adult rollaway fee",
        "Application Fee",
        "Banquet service fee",
        "Beverage with alcohol",
        "Beverage without alcohol",
        "Child rollaway charge",
        "City hotel fee",
        "Crib fee",
        "Destination amenity fee",
        "Early checkout fee",
        "Exempt",
        "Express Handling Fee",
        "Extra child charge",
        "Extra person charge",
        "Food",
        "Local fee",
        "Maintenance fee",
        "Miscellaneous",
        "Package fee",
        "Pet sanitation fee",
        "Resort fee",
        "Rollaway fee",
        "Room service fee",
        "Service charge",
        "Standard",
        "Standard food and beverage gratuity",
        "State cost recovery fee",
        "Surcharge",
        "Tobacco",
        "Total surcharges",
        "Other_"
      ]
    },
    "TravelSector_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "TravelSector_Enum"
      },
      "description": "Specifies the travel sector.",
      "properties": {
        "value": {
          "$ref": "#/definitions/TravelSector_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "TravelSector_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "TravelSector_Enum"
      },
      "description": "Specifies the travel sector.",
      "type": "string",
      "enum": [
        "Air",
        "Car",
        "Cruise",
        "Excursion",
        "Ferry",
        "Golf",
        "Hotel",
        "Insurance",
        "Package option",
        "Rail",
        "Tour",
        "Other_"
      ]
    },
    "PaymentCardCode_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "PaymentCardCode_Enum"
      },
      "description": "The 2 digit code that identifies the credit card.",
      "properties": {
        "value": {
          "$ref": "#/definitions/PaymentCardCode_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "PaymentCardCode_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "PaymentCardCode_Enum"
      },
      "description": "The 2 digit code that identifies the credit card.",
      "type": "string",
      "enum": [
        "VI",
        "UP",
        "TP",
        "MC",
        "MA",
        "JC",
        "EC",
        "DS",
        "DN",
        "CB",
        "BL",
        "BC",
        "AX",
        "Other_"
      ]
    },
    "PaymentType_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "PaymentType_Enum"
      },
      "description": "Specifies a type of payment.",
      "properties": {
        "value": {
          "$ref": "#/definitions/PaymentType_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "PaymentType_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "PaymentType_Enum"
      },
      "description": "Specifies a type of payment.",
      "type": "string",
      "enum": [
        "Air travel card",
        "Airline payment card",
        "Barter",
        "Business account",
        "Business check",
        "Cash",
        "Certified check",
        "Check",
        "Company name/address",
        "Corporate ID/CD number",
        "Coupon",
        "Credit card",
        "Debit card",
        "Deposit",
        "Direct bill",
        "Frequent guest number",
        "Frequent traveler number",
        "Guarantee to property",
        "Guest name/address",
        "Miscellaneous",
        "Miscellaneous charge order",
        "Mobile payment",
        "Money order",
        "None",
        "Online payment",
        "Override guarantee information",
        "Pay by EFT (Electronic Funds Transfer)",
        "Pay by points",
        "Payment manager",
        "Payment service",
        "Personal check",
        "Pre-pay",
        "Traveler\u0027s check",
        "Redemption",
        "Special industry program",
        "Ticket",
        "Tour order",
        "Travel agency IATA number",
        "Travel agency name/address",
        "Virtual card",
        "Voucher",
        "Wire payment",
        "Other_"
      ]
    },
    "CommunicationLocation_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "CommunicationLocation_Enum"
      },
      "description": "Specifies a location for communication.",
      "properties": {
        "value": {
          "$ref": "#/definitions/CommunicationLocation_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "CommunicationLocation_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "CommunicationLocation_Enum"
      },
      "description": "Specifies a location for communication.",
      "type": "string",
      "enum": [
        "Business",
        "Destination",
        "Home",
        "Other_"
      ]
    },
    "AddressUse_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "AddressUse_Enum"
      },
      "description": "Describes how an address is to be used.",
      "properties": {
        "value": {
          "$ref": "#/definitions/AddressUse_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "AddressUse_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "AddressUse_Enum"
      },
      "description": "Describes how an address is to be used.",
      "type": "string",
      "enum": [
        "Billing",
        "Chain",
        "Contact",
        "Credit card",
        "Delivery",
        "Deposit",
        "Mailing",
        "Physical",
        "Pre-opening office",
        "Other_"
      ]
    },
    "UnitOfMeasure_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "UnitOfMeasure_Enum"
      },
      "description": "The unit of measure in a code format. Refer to OpenTravel Code List Unit of Measure Code (UOM).",
      "type": "string",
      "enum": [
        "Miles",
        "Kilometers",
        "Meters",
        "Millimeters",
        "Centimeters",
        "Yards",
        "Feet",
        "Inches",
        "Pixels",
        "Block",
        "Megabytes",
        "Gigabytes",
        "Square feet",
        "Square meters",
        "Pounds",
        "Kilograms",
        "Square inch",
        "Square yard",
        "Acre",
        "Square millimeter",
        "Square centimeter",
        "Hectare",
        "Ounce",
        "Gram",
        "Gallons",
        "Liters",
        "Kilowatts",
        "Cubic meters"
      ]
    },
    "EmailAddressType_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "EmailAddressType_Enum"
      },
      "description": "Specifies a type of email address.",
      "properties": {
        "value": {
          "$ref": "#/definitions/EmailAddressType_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "EmailAddressType_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "EmailAddressType_Enum"
      },
      "description": "Specifies a type of email address.",
      "type": "string",
      "enum": [
        "Business",
        "Listserve",
        "Managing company",
        "Personal",
        "Property",
        "Reservation office",
        "Sales office",
        "Other_"
      ]
    },
    "PositionAccuracy_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "PositionAccuracy_Enum"
      },
      "description": "Specifies the level of accuracy for the positon.",
      "type": "string",
      "enum": [
        "Zip9Code",
        "Zip7Code",
        "Zip5Code",
        "Street",
        "State",
        "Property",
        "Intersection",
        "Exact",
        "County",
        "Country",
        "City",
        "Block"
      ]
    },
    "DayOfWeek_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "DayOfWeek_Enum"
      },
      "description": "Day of the Week types.",
      "type": "string",
      "enum": [
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday",
        "Sunday"
      ]
    },
    "AgeQualifyingCode_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "AgeQualifyingCode_Enum"
      },
      "description": "A code representing a business rule that determines the charges for a guest based upon age range (e.g. Adult, Child, Senior, Child With Adult, Child Without Adult). This attribute allows for an increase in rate by occupant class.\\nPerson age categories.\\nNote: Age categories  are typically used to qualify pricing and\\/or eligibility.",
      "properties": {
        "value": {
          "$ref": "#/definitions/AgeQualifyingCode_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "AgeQualifyingCode_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "AgeQualifyingCode_Enum"
      },
      "description": "A code representing a business rule that determines the charges for a guest based upon age range (e.g. Adult, Child, Senior, Child With Adult, Child Without Adult). This attribute allows for an increase in rate by occupant class.\\nPerson age categories.\\nNote: Age categories  are typically used to qualify pricing and\\/or eligibility.",
      "type": "string",
      "enum": [
        "Junior",
        "Under 10",
        "Younger driver",
        "Young driver",
        "Free adult",
        "Free child",
        "Additional occupant without adult",
        "Additional occupant with adult",
        "Senior",
        "Adult",
        "Teenager",
        "Child",
        "Infant",
        "Under 21",
        "Under 17",
        "Under 12",
        "Under 2",
        "Over 65",
        "Over 21",
        "Other_"
      ]
    },
    "Transportation_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "Transportation_Enum"
      },
      "description": "Type of tranportation: Air, Rail, Bus, Boat, Private Auto, Other.",
      "properties": {
        "value": {
          "$ref": "#/definitions/Transportation_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "Transportation_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "Transportation_Enum"
      },
      "description": "Type of tranportation: Air, Rail, Bus, Boat, Private Auto, Other.",
      "type": "string",
      "enum": [
        "Bicycle",
        "Boat",
        "Bus",
        "Cable car",
        "Car",
        "Carriage",
        "Courtesy car",
        "Helicopter",
        "Limousine",
        "Metro",
        "Monorail",
        "Motorbike",
        "Pack animal",
        "Plane",
        "Rental car",
        "Rickshaw",
        "Shuttle",
        "Subway",
        "Sedan chair",
        "Taxi",
        "Train",
        "Trolley",
        "Tube",
        "Walk",
        "Water taxi",
        "Express train",
        "Public",
        "Ferry",
        "Other_"
      ]
    },
    "ToFrom_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "ToFrom_Enum"
      },
      "description": "Used to indicate whether the context is to a facility or from a facility.",
      "type": "string",
      "enum": [
        "ToFacility",
        "FromFacility"
      ]
    },
    "TaxType_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "TaxType_Enum"
      },
      "description": "Describes the type of fee or tax.",
      "properties": {
        "value": {
          "$ref": "#/definitions/TaxType_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "TaxType_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "TaxType_Enum"
      },
      "description": "Describes the type of fee or tax.",
      "type": "string",
      "enum": [
        "Assessment/license tax",
        "Bed tax",
        "City tax",
        "Convention tax",
        "Country tax",
        "County tax",
        "Energy tax",
        "Federal tax",
        "Food \u0026 beverage tax",
        "Goods and services tax (GST)",
        "Insurance Premium Tax",
        "Lodging tax",
        "National government tax",
        "Occupancy tax",
        "Room Tax",
        "Sales tax",
        "State tax",
        "Surplus Lines Tax",
        "Total tax",
        "Tourism tax",
        "Value Added Tax (VAT)",
        "Other_"
      ]
    },
    "ChargeUnit_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "ChargeUnit_Enum"
      },
      "description": "Source: Charge Type (CHG) OpenTravel codelist.",
      "properties": {
        "value": {
          "$ref": "#/definitions/ChargeUnit_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "ChargeUnit_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "ChargeUnit_Enum"
      },
      "description": "Source: Charge Type (CHG) OpenTravel codelist.",
      "type": "string",
      "enum": [
        "Per unit",
        "Per order",
        "Per tray",
        "Per dozen",
        "Per gallon",
        "Round trip",
        "Per room",
        "Per item",
        "Per rental",
        "Per person per night",
        "Per person per stay",
        "Per room per night",
        "Per room per stay",
        "Weekly",
        "Per occurance",
        "Half day",
        "Hourly",
        "Daily",
        "Per function",
        "Per minute",
        "First use",
        "Per person",
        "Unit",
        "Tray",
        "Stay",
        "Room",
        "Reservation/Booking",
        "Rental",
        "OverMinuteCharge",
        "Order",
        "OneWay",
        "OneTimeUse",
        "MinimumCharge",
        "MaximumCharge",
        "Item",
        "Gallon",
        "Complimentary",
        "AdditionsPerStay",
        "Other_"
      ]
    },
    "SegmentCategory_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "SegmentCategory_Enum"
      },
      "description": "Describes the segment type.",
      "properties": {
        "value": {
          "$ref": "#/definitions/SegmentCategory_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "SegmentCategory_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "SegmentCategory_Enum"
      },
      "description": "Describes the segment type.",
      "type": "string",
      "enum": [
        "Budget",
        "Deluxe",
        "Economy",
        "First Class",
        "Luxury",
        "Moderate",
        "Tourist",
        "Upscale",
        "Standard",
        "Midscale",
        "Quality",
        "Midscale without F\u0026B",
        "Upper upscale",
        "Other_"
      ]
    },
    "ReferencePoint_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "ReferencePoint_Enum"
      },
      "description": "Specifies a point of reference.",
      "properties": {
        "value": {
          "$ref": "#/definitions/ReferencePoint_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "ReferencePoint_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "ReferencePoint_Enum"
      },
      "description": "Specifies a point of reference.",
      "type": "string",
      "enum": [
        "Airport",
        "Amusement park",
        "Arena",
        "Bar",
        "Bay",
        "Beach",
        "Bus station",
        "City center",
        "Church",
        "Corporation",
        "Educational Institution",
        "Ferry station",
        "Financial district",
        "Financial institution",
        "Lake",
        "Landmark",
        "Library",
        "Marina",
        "Market",
        "Medical facility",
        "Metro/subway station",
        "Monument",
        "Museum",
        "Park",
        "Racetrack",
        "Restaurant",
        "River",
        "Shopping center",
        "Sports facility",
        "Synagogue",
        "Train station",
        "Zoo",
        "Other_"
      ]
    },
    "MealPlan_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "MealPlan_Enum"
      },
      "description": "Different meal plans",
      "properties": {
        "value": {
          "$ref": "#/definitions/MealPlan_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "MealPlan_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "MealPlan_Enum"
      },
      "description": "Different meal plans",
      "type": "string",
      "enum": [
        "Breakfast \u0026 lunch",
        "Dinner",
        "Lunch",
        "Modified",
        "Breakfast",
        "Family American",
        "Dinner bed and breakfast plan",
        "Bermuda",
        "Self catering",
        "Room only/European plan",
        "As brochured",
        "Half board/modified American plan",
        "Full breakfast",
        "Full board",
        "Family plan",
        "European plan",
        "English breakfast",
        "Continental breakfast",
        "Caribbean breakfast",
        "Buffet breakfast",
        "Bed \u0026 breakfast",
        "American/full board",
        "All inclusive",
        "Other_"
      ]
    },
    "AdditionalDetailType_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "AdditionalDetailType_Enum"
      },
      "description": "Identifies the type of detail being sent.",
      "properties": {
        "value": {
          "$ref": "#/definitions/AdditionalDetailType_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "AdditionalDetailType_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "AdditionalDetailType_Enum"
      },
      "description": "Identifies the type of detail being sent.",
      "type": "string",
      "enum": [
        "Advanced booking information",
        "Amenity information",
        "Areas served",
        "Booking guidelines",
        "Cancellation information",
        "Catering description",
        "Check in check out information",
        "Check-in policy",
        "Check-out policy",
        "Children information",
        "Commission information",
        "Contract/negotiated booking information",
        "Corporate booking information",
        "Cuisine description",
        "Customs information for material",
        "Deposit information",
        "Deposit policy for master account",
        "Deposit policy for reservations",
        "Driving directions",
        "Driving directions from the east",
        "Driving directions from the north",
        "Driving directions from the south",
        "Driving directions from the west",
        "Early checkout description",
        "Express check-in policy",
        "Express check-out policy",
        "Extended stay information",
        "Extra charge information",
        "Extra person information",
        "Facility restrictions",
        "Family plan description",
        "Food and beverage minimums for groups",
        "General meeting planning information",
        "Government booking policy",
        "Group booking information",
        "Group meeting planning information",
        "Guarantee information",
        "Inclusion information",
        "Last room availability description",
        "Late arrival information",
        "Late departure information",
        "Maximum stay information",
        "Meal plan description",
        "Meeting room description",
        "Minimum stay information",
        "Miscellaneous information",
        "Offsite facilities information",
        "Offsite recreational activities information",
        "Offsite services information",
        "Onsite facilities information",
        "Onsite recreational activities information",
        "Onsite services information",
        "Oversold policy description",
        "Package information",
        "Pet policy description",
        "Promotional information",
        "Property description",
        "Property location",
        "Rate description",
        "Rate disclaimer information",
        "Restaurant services",
        "Room decor description",
        "Room information",
        "Room type upgrade description",
        "Seasons",
        "Security information",
        "Service charge information",
        "Special events",
        "Special offers description",
        "Surcharge information",
        "Tax information",
        "Travel industry booking information",
        "Visa/travel requirement information",
        "Other_"
      ]
    },
    "InformationType_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "InformationType_Enum"
      },
      "description": "Identifies the type of information being sent.",
      "properties": {
        "value": {
          "$ref": "#/definitions/InformationType_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "InformationType_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "InformationType_Enum"
      },
      "description": "Identifies the type of information being sent.",
      "type": "string",
      "enum": [
        "Address",
        "Advisory",
        "Alias name",
        "Amenities",
        "Attractions",
        "Awards",
        "Contact",
        "Corporate locations",
        "Description",
        "Descriptive content",
        "Dining",
        "Driving directions",
        "Facilities",
        "Geocodes",
        "Location",
        "Long name",
        "Marketing",
        "Pictures",
        "Policy",
        "Recreation",
        "Safety",
        "Services",
        "Short description",
        "Special instructions",
        "Transportation",
        "Other_"
      ]
    },
    "PictureCategory_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "PictureCategory_Enum"
      },
      "description": "Specifies the category of the mulitmedia item.",
      "properties": {
        "value": {
          "$ref": "#/definitions/PictureCategory_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "PictureCategory_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "PictureCategory_Enum"
      },
      "description": "Specifies the category of the mulitmedia item.",
      "type": "string",
      "enum": [
        "Ballroom",
        "Bar/Lounge",
        "Basics",
        "Beach",
        "Business center",
        "Exterior view",
        "Golf course",
        "Guest room",
        "Guest room amenity",
        "Health club",
        "Hot news",
        "Lobby view",
        "Logo",
        "Map",
        "Meeting room",
        "Miscellaneous",
        "Pool view",
        "Promotional",
        "Property amenity",
        "Recreational facility",
        "Restaurant",
        "Spa",
        "Suite",
        "Other_"
      ]
    },
    "BasisType": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "BasisType"
      },
      "description": "Provides basis for how an amount was calculated.",
      "properties": {
        "value": {
          "$ref": "#/definitions/BasisType_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "BasisType_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "BasisType"
      },
      "description": "Provides basis for how an amount was calculated.",
      "type": "string",
      "enum": [
        "Days",
        "Entire",
        "First",
        "First and last",
        "Last",
        "Nights",
        "Other_"
      ]
    },
    "RoomGender_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "RoomGender_Enum"
      },
      "type": "string",
      "enum": [
        "Male",
        "Female",
        "MaleAndFemale",
        "Unknown"
      ]
    },
    "Frequency_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "Frequency_Enum"
      },
      "description": "Source: Charge Type (CHG) OpenTravel codelist.",
      "properties": {
        "value": {
          "$ref": "#/definitions/Frequency_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "Frequency_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "Frequency_Enum"
      },
      "description": "Source: Charge Type (CHG) OpenTravel codelist.",
      "type": "string",
      "enum": [
        "Weekly",
        "Stay",
        "PerDozen",
        "Occurrence",
        "Minute",
        "Night",
        "Hourly",
        "HalfDay",
        "FirstUse",
        "Daily",
        "Other_"
      ]
    },
    "RatePlanType_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "RatePlanType_Enum"
      },
      "description": "Note: Typically used for rate plans that may be published, e.g. have no qualifying criteria, or may be restricted or negotiated, e.g. has qualifying criteria for eligibility and\\/or has been negotiated between parties.",
      "properties": {
        "value": {
          "$ref": "#/definitions/RatePlanType_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "RatePlanType_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "RatePlanType_Enum"
      },
      "description": "Note: Typically used for rate plans that may be published, e.g. have no qualifying criteria, or may be restricted or negotiated, e.g. has qualifying criteria for eligibility and\\/or has been negotiated between parties.",
      "type": "string",
      "enum": [
        "Other_",
        "Weekly",
        "Weekend",
        "TravelIndustry",
        "TourWholesale",
        "SeniorCitizen",
        "RegularRack",
        "Published",
        "PromotionalPackageTour",
        "Promotional",
        "Package",
        "NonLastRoomAvailable",
        "Net",
        "Negotiated",
        "Multi-DayPackage",
        "Monthly",
        "Military",
        "LastRoomAvailable",
        "Group",
        "Government",
        "FamilyPlan",
        "DistressedInventory",
        "DayRate",
        "Corporate",
        "Convention",
        "Contract",
        "Consortia",
        "ClubConcierge",
        "Association",
        "Other_"
      ]
    },
    "GuestRoomInfo_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "GuestRoomInfo_Enum"
      },
      "description": "Identifies a property\u0027s accommodation\\/inventory types for which it is useful to specify a property-level count or availability status.",
      "properties": {
        "value": {
          "$ref": "#/definitions/GuestRoomInfo_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "GuestRoomInfo_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "GuestRoomInfo_Enum"
      },
      "description": "Identifies a property\u0027s accommodation\\/inventory types for which it is useful to specify a property-level count or availability status.",
      "type": "string",
      "enum": [
        "1 room cabin",
        "Accessible rooms",
        "Accommodations with balcony",
        "Adjoining rooms or suites",
        "Apartments",
        "Available rooms",
        "Available suites",
        "Buildings",
        "Bungalow",
        "Business class",
        "Business plan",
        "Cabin",
        "Classic",
        "Club levels",
        "Comfort",
        "Concierge levels",
        "Condos",
        "Connecting rooms or suites",
        "Cottage",
        "Deluxe",
        "Deluxe suite",
        "Double bedrooms",
        "Double double bedrooms",
        "Drive up rooms",
        "Economy",
        "Effeciency",
        "Executive floor",
        "Family/oversized accommodations",
        "First floor rooms",
        "Floors",
        "Jacuzzi Suite",
        "Junior suite",
        "King bedrooms",
        "King king bedrooms",
        "Lanai",
        "Large suite",
        "Loft",
        "Luxury",
        "Nonsmoking rooms",
        "Parlour",
        "Penthouses",
        "Premier",
        "Queen bedrooms",
        "Queen queen bedrooms",
        "Room",
        "Run of the house",
        "Separate floors for women",
        "Smoking rooms",
        "Standard",
        "Studios",
        "Suites",
        "Superior",
        "Total available rooms and suites",
        "Total rooms",
        "Twin bedrooms",
        "Twin twin bedrooms",
        "Villa",
        "Other_"
      ]
    },
    "RoomViewType_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "RoomViewType_Enum"
      },
      "description": "Describes room view types",
      "properties": {
        "value": {
          "$ref": "#/definitions/RoomViewType_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "RoomViewType_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "RoomViewType_Enum"
      },
      "description": "Describes room view types",
      "type": "string",
      "enum": [
        "Annex room",
        "Ground floor outside access",
        "Ground floor inside access",
        "Executive floor",
        "Near stairs",
        "Main building",
        "Wing room",
        "Tower room",
        "Quiet room",
        "Poolside",
        "Other_"
      ]
    },
    "PropertyStatus_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "PropertyStatus_Enum"
      },
      "properties": {
        "value": {
          "$ref": "#/definitions/PropertyStatus_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "PropertyStatus_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "PropertyStatus_Enum"
      },
      "type": "string",
      "enum": [
        "Closed",
        "Deflagged",
        "Deleted",
        "Inactive",
        "Locked",
        "Open",
        "Pre-opening",
        "Reactivated",
        "Test",
        "Unlocked",
        "Other_"
      ]
    },
    "PropertyClassType_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "PropertyClassType_Enum"
      },
      "description": "Used to specify the hotel property class or type.",
      "properties": {
        "value": {
          "$ref": "#/definitions/PropertyClassType_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "PropertyClassType_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "PropertyClassType_Enum"
      },
      "description": "Used to specify the hotel property class or type.",
      "type": "string",
      "enum": [
        "All suite",
        "All-Inclusive Resort",
        "Apartment",
        "Bed and breakfast",
        "Boutique",
        "Cabin or bungalow",
        "Castle",
        "Campground",
        "Chalet",
        "Conference center",
        "Convention network property",
        "Corporate business transient",
        "Extended stay",
        "Full Service",
        "Golf",
        "Guest farm",
        "Guest house limited service",
        "Historical",
        "Hostel",
        "Hotel",
        "Inn",
        "Limited service",
        "Lodge",
        "Meeting/Convention",
        "Mobile-home",
        "Monastery",
        "Motel",
        "Pension",
        "Ranch",
        "Recreation vehicle park",
        "Resort",
        "Ski",
        "Spa",
        "Time share",
        "Vacation rental",
        "Villa",
        "Other_"
      ]
    },
    "ArchitecturalStyle_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "ArchitecturalStyle_Enum"
      },
      "description": "Describes the architectural style of the building or room.",
      "properties": {
        "value": {
          "$ref": "#/definitions/ArchitecturalStyle_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "ArchitecturalStyle_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "ArchitecturalStyle_Enum"
      },
      "description": "Describes the architectural style of the building or room.",
      "type": "string",
      "enum": [
        "Art deco",
        "Contemporary",
        "Historic",
        "Mediterranean",
        "Modern",
        "Southwest",
        "Traditional",
        "Victorian",
        "Themed",
        "Other_"
      ]
    },
    "Proximity_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "Proximity_Enum"
      },
      "description": "Specifies if the item in question is onsite, offsite, nearby, etc.",
      "properties": {
        "value": {
          "$ref": "#/definitions/Proximity_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "Proximity_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "Proximity_Enum"
      },
      "description": "Specifies if the item in question is onsite, offsite, nearby, etc.",
      "type": "string",
      "enum": [
        "Onsite",
        "Offsite",
        "Nearby",
        "Information not available",
        "Onsite and offsite",
        "Other_"
      ]
    },
    "MeetingRoomCode_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "MeetingRoomCode_Enum"
      },
      "description": "Supplies, facilities, materials, equipment available specifically for meetings and events.",
      "properties": {
        "value": {
          "$ref": "#/definitions/MeetingRoomCode_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "MeetingRoomCode_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "MeetingRoomCode_Enum"
      },
      "description": "Supplies, facilities, materials, equipment available specifically for meetings and events.",
      "type": "string",
      "enum": [
        "AV Equipment",
        "AV Technician",
        "Blackboards",
        "Bulletin boards",
        "Carpenter",
        "Catered breakfast",
        "Catered dinner",
        "Catered lunch",
        "Copier",
        "Decorator",
        "Direction signs",
        "Electrician",
        "Flip chart and markers",
        "High speed internet access",
        "LCD Projector",
        "Microphone",
        "Name cards/holders",
        "PA system",
        "Pens/Pencils/Pads",
        "Photographer",
        "Podium",
        "Polling devices",
        "Portable stages",
        "Printing services",
        "Projector",
        "Registration services",
        "Security guards",
        "Separate entrance",
        "Separate registration area",
        "Spotlights",
        "Stack chairs",
        "Stenographer",
        "Tables available",
        "Tours",
        "TV",
        "TV production service provider",
        "VCR rental",
        "Video camera",
        "Video conferencing",
        "Video conferencing service provider",
        "Walkie talkies - radio",
        "Walkie talkies - service provider",
        "Wall charts",
        "Whiteboards",
        "Dedicated exhibit space",
        "PC fee",
        "Guest PC fee",
        "Guest PC lead time",
        "Help desk phone number",
        "Beer bottle fee",
        "Call brand cocktail average fee",
        "Coffee/Soda average fee",
        "Per person coffee break fee",
        "Continental breakfast fee",
        "Full breakfast fee",
        "Lunch deli buffet free",
        "Premium cocktails fee",
        "Largest room",
        "Max seating capacity",
        "Number breakout rooms",
        "Meeting package attendee range",
        "Meeting package fee",
        "Meeting package inclusions",
        "Meeting package name",
        "Meeting room contact",
        "Meeting room names",
        "Meeting room rental packages",
        "Meeting room fee",
        "Meeting support service codes",
        "Three package minimum",
        "Meeting floors",
        "Number of meeting rooms",
        "Other equipment and facilities",
        "Screen fee",
        "Second largest room",
        "Suggestions and info",
        "Teleconference service provider",
        "Portable wall rooms",
        "Nonportable wall rooms",
        "Total meeting space",
        "Number of floors containing meeting space",
        "Projector screen rental charge per day",
        "Catering",
        "Number of meeting service personnel on site",
        "Host social function",
        "Lobby bulletin board",
        "PA system installed",
        "PA system portable",
        "Access to meeting areas",
        "Exhibition space on property",
        "Certified wedding planner",
        "Event lighting services",
        "Event planning services",
        "Onsite convention services",
        "Equipment rental",
        "Exhibit services",
        "Heating/cooling controls",
        "Lectern",
        "T1 lines",
        "Teleconferencing",
        "Platform",
        "Voltage available",
        "Wireless internet connectivity",
        "Natural daylight",
        "Group meeting discounts/packages available",
        "Meeting support services",
        "Audio recording",
        "Background music",
        "Closed circuit video",
        "Video recording",
        "Dry erase board with eraser and markers",
        "DVD player",
        "Laser pointer",
        "Monitor cart",
        "Powered speaker",
        "Projection stand",
        "Screen",
        "VHS player",
        "Group meeting discounts",
        "Meeting packages available",
        "Meeting planner",
        "In-house AV department",
        "Outside vendor for AV equipment",
        "Personal AV equipment permitted",
        "Lighting controls",
        "Wireless microphones",
        "Monitors",
        "Chandelier",
        "Perimeter seating",
        "Talk show",
        "Head table",
        "Riser",
        "Dance floor",
        "Data projector",
        "Laptop computer",
        "Easel",
        "Blackboard with eraser and chalk",
        "Lectern (standing)",
        "Lectern (table)",
        "Personal computer - desktop",
        "Personal computer - laptop",
        "Personal computer - Mac",
        "Video monitor",
        "LCD TV",
        "Plasma TV",
        "Outdoor function space",
        "Fixed stage",
        "Banquet service",
        "Total exhibit space",
        "Technical support",
        "Meeting room direct bill",
        "Meeting room direct bill - min",
        "Meeting room direct bill - max",
        "Funds held on credit card",
        "Max amount group charge on credit card",
        "Minimum seating",
        "Wedding location",
        "Simultaneous translation",
        "Broadcasting room",
        "Furniture rental",
        "Linen rental",
        "Portable transformers available",
        "Sound equipment",
        "Flower arrangements",
        "Telephone",
        "Other_"
      ]
    },
    "DiscountsAvailable_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "DiscountsAvailable_Enum"
      },
      "description": "This is used for discounts that may be applied.",
      "properties": {
        "value": {
          "$ref": "#/definitions/DiscountsAvailable_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "DiscountsAvailable_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "DiscountsAvailable_Enum"
      },
      "description": "This is used for discounts that may be applied.",
      "type": "string",
      "enum": [
        "AAA",
        "AARP",
        "Convention",
        "Corporate",
        "Family",
        "Government",
        "Group",
        "Military",
        "Promotional",
        "Senior citizen",
        "Tour",
        "Weekday",
        "Weekend",
        "Full price",
        "Free of charge",
        "Home visiting proof",
        "Red tour",
        "Single bed for child",
        "Child sharing seat",
        "Anniversay",
        "Adventure package",
        "Bed and breakfast package",
        "Dinner",
        "Fishing package",
        "Golf package",
        "Getaway",
        "Holiday package",
        "Honeymoon package",
        "Internet package",
        "Park and fly package",
        "Park",
        "Romance",
        "Recreation package",
        "Shopping package",
        "Ski package",
        "Spa package",
        "Travel agent rates",
        "Theater package",
        "Tennis package",
        "Travel",
        "Other_"
      ]
    },
    "TemperatureUnit": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "TemperatureUnit"
      },
      "type": "string",
      "enum": [
        "Celsuis",
        "Fahrenheit"
      ]
    },
    "RestaurantService_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "RestaurantService_Enum"
      },
      "description": "Type of service(s) offered by the restaurant.",
      "properties": {
        "value": {
          "$ref": "#/definitions/RestaurantService_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "RestaurantService_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "RestaurantService_Enum"
      },
      "description": "Type of service(s) offered by the restaurant.",
      "type": "string",
      "enum": [
        "Accommodates diabetic/sugar free requirements",
        "Accommodates gluten free requirements",
        "Accommodates high fiber requirements",
        "Accommodates lactose free requirements",
        "Accommodates low fat requirements",
        "Accommodates low potassium requirements",
        "Accommodates low sodium requirements",
        "Buffet",
        "Catering",
        "Children\u0027s menu available",
        "Cooked to order",
        "Dedicated non-smoking section",
        "Delivery service to property available",
        "Full service",
        "Room service",
        "Self service",
        "Smoking section available",
        "Special meal services",
        "Take out",
        "Other_"
      ]
    },
    "Beverage_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "Beverage_Enum"
      },
      "description": "Specifies beverage types.",
      "properties": {
        "value": {
          "$ref": "#/definitions/Beverage_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "Beverage_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "Beverage_Enum"
      },
      "description": "Specifies beverage types.",
      "type": "string",
      "enum": [
        "Bourbon",
        "Bordeaux",
        "Brandy",
        "Cabernet Sauvignon",
        "Chardonnay",
        "Chianti",
        "Coffee",
        "Hot tea",
        "Iced tea",
        "Merlot",
        "Pinot Grigio",
        "Pinot Noir",
        "Red wine",
        "Red Zinfandel",
        "Rose",
        "Sake",
        "Shiraz",
        "Soda/pop",
        "Vodka",
        "Water",
        "Whiskey",
        "White wine",
        "White Zinfandel",
        "Gin",
        "Rum",
        "Tequila",
        "Other_"
      ]
    },
    "AvailableMealCategory_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "AvailableMealCategory_Enum"
      },
      "description": "The high level types of meal options available at a dining facility.",
      "properties": {
        "value": {
          "$ref": "#/definitions/AvailableMealCategory_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "AvailableMealCategory_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "AvailableMealCategory_Enum"
      },
      "description": "The high level types of meal options available at a dining facility.",
      "type": "string",
      "enum": [
        "Breakfast",
        "Brunch",
        "Dinner",
        "Happy hour",
        "Lunch",
        "Snack",
        "Afternoon tea",
        "Reception",
        "Other_"
      ]
    },
    "RestaurantBarCategory_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "RestaurantBarCategory_Enum"
      },
      "description": "The type of facility in which food and\\/or drink is served.",
      "properties": {
        "value": {
          "$ref": "#/definitions/RestaurantBarCategory_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "RestaurantBarCategory_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "RestaurantBarCategory_Enum"
      },
      "description": "The type of facility in which food and\\/or drink is served.",
      "type": "string",
      "enum": [
        "Beverage",
        "Buffet",
        "Cafe",
        "Cafeteria",
        "Casual",
        "Family",
        "Fast food",
        "Fine dining",
        "Kiosk",
        "Take out",
        "Bar/lounge",
        "Brasserie",
        "Coffee bar",
        "Snack bar",
        "Full service",
        "Pub",
        "Deli",
        "Private dining",
        "Sports bar",
        "Piano bar",
        "Outdoor bar/cafe",
        "Beer garden",
        "Beach bar",
        "Tapas bar",
        "Other_"
      ]
    },
    "RestaurantPolicy_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "RestaurantPolicy_Enum"
      },
      "description": "Identifies rules regarding making reservations for a restaurant.",
      "properties": {
        "value": {
          "$ref": "#/definitions/RestaurantPolicy_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "RestaurantPolicy_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "RestaurantPolicy_Enum"
      },
      "description": "Identifies rules regarding making reservations for a restaurant.",
      "type": "string",
      "enum": [
        "Accepted only for large groups",
        "Not accepted",
        "Recommended",
        "Required",
        "Required for large groups",
        "Other_"
      ]
    },
    "RatingSymbol": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "RatingSymbol"
      },
      "description": "Used to identify a symbol used in a rating (i.e. Diamonds, Stars).",
      "type": "string",
      "enum": [
        "Diamond",
        "Star"
      ]
    },
    "PetsAllowed_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "PetsAllowed_Enum"
      },
      "description": "Specifies if pets are allowed at a facility and at a high level the type of pets allowed.",
      "properties": {
        "value": {
          "$ref": "#/definitions/PetsAllowed_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "PetsAllowed_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "PetsAllowed_Enum"
      },
      "description": "Specifies if pets are allowed at a facility and at a high level the type of pets allowed.",
      "type": "string",
      "enum": [
        "Pets allowed",
        "Pets not allowed",
        "Assistive animals only",
        "Pets by arrangement",
        "Other_"
      ]
    },
    "PetPolicy_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "PetPolicy_Enum"
      },
      "description": "Specifies the types of animals allowed.",
      "properties": {
        "value": {
          "$ref": "#/definitions/PetPolicy_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "PetPolicy_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "PetPolicy_Enum"
      },
      "description": "Specifies the types of animals allowed.",
      "type": "string",
      "enum": [
        "All pets allowed",
        "Cats only",
        "Dogs only",
        "Domestic pets",
        "Large domestic animals",
        "Midsize domestic animals",
        "Service animals",
        "Service animals only",
        "Small domestic animals",
        "Small domestic animals only",
        "Other_"
      ]
    },
    "AmountDetermination_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "AmountDetermination_Enum"
      },
      "description": "Used to indicate if an amount is inclusive or exclusive of other charges, such as taxes, or is cumulative (amounts have been added to each other).",
      "type": "string",
      "enum": [
        "Inclusive",
        "Exclusive",
        "Cumulative"
      ]
    },
    "AttractionCategory_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "AttractionCategory_Enum"
      },
      "description": "Specifies a type of attraction.",
      "properties": {
        "value": {
          "$ref": "#/definitions/AttractionCategory_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "AttractionCategory_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "AttractionCategory_Enum"
      },
      "description": "Specifies a type of attraction.",
      "type": "string",
      "enum": [
        "Agricultural",
        "Airport",
        "Amusement park",
        "Aquarium",
        "Archeological",
        "Arena",
        "Auditorium",
        "Bar",
        "Bay",
        "Beach",
        "Botanical garden",
        "Bowling",
        "Bridge",
        "Bus station",
        "Cable cars",
        "Canal",
        "Car rental location",
        "Casino",
        "Cathedral",
        "Cemetery",
        "Church",
        "City center",
        "College",
        "Commercial district",
        "Company",
        "Concert hall",
        "Conference center",
        "Convention and visitors bureau",
        "Convention center",
        "Cultural center",
        "Educational institution",
        "Entertainment district",
        "Equestrian center",
        "Event",
        "Factory",
        "Factory/business tour",
        "Fairground",
        "Farm",
        "Festival",
        "Financial district",
        "Financial institution",
        "Gallery",
        "Handicraft center",
        "Historic building",
        "Hospital",
        "Lake",
        "Landmark",
        "Library",
        "Live theatre",
        "Local bus stop",
        "Marina",
        "Market",
        "Medical facility",
        "Military base",
        "Monument",
        "Mosque",
        "Mountain",
        "Museum",
        "Natural attraction",
        "Nightlife",
        "Non-comercial airport",
        "Ocean",
        "Orchard",
        "Palace",
        "Park",
        "Performing art center",
        "Pier",
        "Planetarium/science center",
        "Port",
        "Race track",
        "Recreation center",
        "Resort",
        "Restaurant",
        "River",
        "School",
        "Shopping",
        "Shopping mall",
        "Ski area",
        "Sports",
        "Stadium",
        "State/national Park",
        "Store",
        "Studio",
        "Suburb",
        "Subway station",
        "Synagogue",
        "Theater/cinema",
        "Tour",
        "Tourist site",
        "Tournament",
        "Trolley stationain station",
        "University",
        "Water park",
        "Waterfront",
        "Winery",
        "Zoo",
        "Other_"
      ]
    },
    "RecreationFeatures_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "RecreationFeatures_Enum"
      },
      "description": "Provides further information on a recreation.",
      "properties": {
        "value": {
          "$ref": "#/definitions/RecreationFeatures_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "RecreationFeatures_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "RecreationFeatures_Enum"
      },
      "description": "Provides further information on a recreation.",
      "type": "string",
      "enum": [
        "Driving range",
        "Golf course total yardage",
        "Number of holes",
        "Par for course",
        "Putting green",
        "Available equipment",
        "Cardiovascular equipment",
        "Free weights",
        "Separate mens and womens lockers",
        "Separate mens and womens steam rooms",
        "Boot warmers",
        "Ski lockers",
        "Snow boarding",
        "Snow mobiling",
        "Body scrub",
        "Body wrap",
        "Facials",
        "Fitness counseling",
        "Foot bath",
        "Lap pool",
        "Manicures/pedicures",
        "Massages",
        "Massage lessons",
        "Paraffin hand treatment",
        "Plunge pools",
        "Spa restaurant",
        "Steam room",
        "Therapy baths",
        "Waxing",
        "Heated pool",
        "Lifeguard on duty",
        "Pool depth",
        "Whirlpool open year round",
        "Appointment required",
        "Classes available",
        "Facility type",
        "Guest priveleges available",
        "Lessons available",
        "Rental information",
        "Restricted age for children without adult supervision",
        "Services available",
        "Teen programs",
        "Towels available",
        "Children\u0027s program",
        "Fitness center equipment replacement date",
        "Private",
        "Public",
        "Slope",
        "Rowing machine",
        "Stair stepper",
        "Stationary bike",
        "Treadmill",
        "Green fees",
        "Ellipticals",
        "Complimenary water available",
        "Fresh whole fruit available",
        "Strength equipment",
        "Weight machine",
        "Core/stability training equipment",
        "Sauna room",
        "Spa treatment rooms",
        "Golf school instruction",
        "Clubhouse",
        "Clubhouse restaurant",
        "Golf shop",
        "Men\u0027s services",
        "Scalp and hair treatments",
        "Eye treatments",
        "Lip treatments",
        "Ayurvedic treatments",
        "Makeup services",
        "Separate men\u0027s and women\u0027s lounges",
        "In-suite massage",
        "Couple\u0027s massage",
        "Children\u0027s services",
        "Tennis clinic",
        "Tennis ball machine rental",
        "Tennis racquet rental",
        "Beach umbrella",
        "Beach cabanas",
        "Hiking routes",
        "Diving center",
        "Beauty cabin",
        "Body treatments",
        "Medical cabin",
        "Pedicure",
        "Respitory thearapy area",
        "Showers",
        "Shop",
        "Swimming pool",
        "Whirlpool",
        "Locker room",
        "Fitness classes",
        "Sports trainer",
        "Thalassotherapy",
        "Other_"
      ]
    },
    "ContactLocation_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "ContactLocation_Enum"
      },
      "description": "Specifies where the contact is located.",
      "properties": {
        "value": {
          "$ref": "#/definitions/ContactLocation_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "ContactLocation_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "ContactLocation_Enum"
      },
      "description": "Specifies where the contact is located.",
      "type": "string",
      "enum": [
        "Central reservation office",
        "Corporate headquarters",
        "Corporate office",
        "Divisional office",
        "Global sales office",
        "Hotel direct",
        "Local reservation office",
        "Sales office",
        "Franchise company",
        "Management company",
        "Ownership company",
        "Customer service office",
        "Home/residence",
        "Regional sales office",
        "Technical support office",
        "Other_"
      ]
    },
    "HotelStatus_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "HotelStatus_Enum"
      },
      "description": "Describes the legal status\\/operating status of a given hotel in relation to the contracting company.  It may also be used to describe the system record status.",
      "properties": {
        "value": {
          "$ref": "#/definitions/HotelStatus_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "HotelStatus_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "HotelStatus_Enum"
      },
      "description": "Describes the legal status\\/operating status of a given hotel in relation to the contracting company.  It may also be used to describe the system record status.",
      "type": "string",
      "enum": [
        "Closed",
        "Deflagged",
        "Deleted",
        "Inactive",
        "Locked",
        "Open",
        "Pre-opening",
        "Reactivated",
        "Test",
        "Unlocked",
        "Other_"
      ]
    },
    "PowerType_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "PowerType_Enum"
      },
      "description": "Types of power.",
      "properties": {
        "value": {
          "$ref": "#/definitions/PowerType_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "PowerType_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "PowerType_Enum"
      },
      "description": "Types of power.",
      "type": "string",
      "enum": [
        "Diesel",
        "Electric",
        "Gas",
        "Oil",
        "Solar",
        "Wind",
        "Other_"
      ]
    },
    "RecycledProducts_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "RecycledProducts_Enum"
      },
      "description": "Specifies products that are recycled.",
      "properties": {
        "value": {
          "$ref": "#/definitions/RecycledProducts_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "RecycledProducts_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "RecycledProducts_Enum"
      },
      "description": "Specifies products that are recycled.",
      "type": "string",
      "enum": [
        "Aluminum",
        "Batteries",
        "Computer parts",
        "Glass",
        "Lightbulbs",
        "Paper",
        "Plastic",
        "Other_"
      ]
    },
    "RecyclingLocations_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "RecyclingLocations_Enum"
      },
      "description": "Specifies areas where recycling is implemented.",
      "properties": {
        "value": {
          "$ref": "#/definitions/RecyclingLocations_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "RecyclingLocations_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "RecyclingLocations_Enum"
      },
      "description": "Specifies areas where recycling is implemented.",
      "type": "string",
      "enum": [
        "Common areas",
        "Garage",
        "Guest room",
        "Meeting room",
        "Restaurant",
        "Staff area",
        "Other_"
      ]
    },
    "DescriptiveContentID": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "DescriptiveContent"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "objID": {
          "description": "A unique identifier within this document for this object.",
          "type": "string"
        },
        "DescriptiveContentRef": {
          "description": "Refers to the obj ID on an object defined elsewhere in the current document.",
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: ota2-0500:Identifier",
          "$ref": "#/definitions/Identifier"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "DescriptiveContent": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "DescriptiveContent"
      },
      "allOf": [
        {
          "$ref": "#/definitions/DescriptiveContentID"
        },
        {
          "properties": {
            "language": {
              "description": "Assigned Type: ota2-0500:LanguageCode",
              "type": "string"
            },
            "CurrencyCode": {
              "description": "Assigned Type: ota2-0500:CurrencyCode",
              "$ref": "#/definitions/CurrencyCode"
            },
            "DistanceUnitOfMeasure": {
              "description": "Assigned Type: ota2-0400:UnitOfMeasure_Enum",
              "$ref": "#/definitions/UnitOfMeasure_Enum"
            },
            "AreaUnitOfMeasure": {
              "description": "Assigned Type: ota2-0400:UnitOfMeasure_Enum",
              "$ref": "#/definitions/UnitOfMeasure_Enum"
            },
            "WeightUnitOfMeasure": {
              "description": "Assigned Type: ota2-0400:UnitOfMeasure_Enum",
              "$ref": "#/definitions/UnitOfMeasure_Enum"
            },
            "TimeZone": {
              "description": "Describes the local time zone in which the hotel is located. This could include additional information regarding time zones (e.g., Daylight Saving Time observed), a proprietary code, the difference between the local time and GMT.",
              "type": "string",
              "maxLength": 128
            },
            "DateTimeSpanWindows": {
              "description": "Assigned Type: ota2-0500:DateTimeSpanWindows",
              "$ref": "#/definitions/DateTimeSpanWindows"
            },
            "DestinationSystemCode": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 32
              },
              "maxItems": 100
            },
            "WeatherInfo": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WeatherInfo"
              },
              "maxItems": 100
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "BlackoutDates": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "BlackoutDates"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "name": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "DateTimeSpanWindows": {
          "description": "Assigned Type: ota2-0500:DateTimeSpanWindows",
          "$ref": "#/definitions/DateTimeSpanWindows"
        },
        "TextParagraph": {
          "description": "Assigned Type: ota2-0500:TextParagraph",
          "$ref": "#/definitions/TextParagraph"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "DescriptiveContentFeature": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "DescriptiveContentFeature"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "codeDetail": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "quantity": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "Proximity": {
          "description": "Assigned Type: ota2-0400:Proximity_Enum",
          "$ref": "#/definitions/Proximity_Enum"
        },
        "Amount": {
          "description": "Assigned Type: ota2-0500:CurrencyAmount",
          "$ref": "#/definitions/CurrencyAmount"
        },
        "MultimediaCollection": {
          "description": "Assigned Type: ota2-0500:MultimediaCollection",
          "$ref": "#/definitions/MultimediaCollection"
        },
        "Description": {
          "description": "Assigned Type: ota2-0500:Description",
          "$ref": "#/definitions/Description"
        },
        "ExtensionPoint_Shared": {
          "$ref": "#/definitions/ExtensionPoint_Shared"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "MeetingRoom": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "MeetingRoom"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "propertySystemName": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "roomName": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "sort": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "meetingRoomCapacity": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "access": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "meetingRoomLevel": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "Proximity": {
          "description": "Assigned Type: ota2-0400:Proximity_Enum",
          "$ref": "#/definitions/Proximity_Enum"
        },
        "MeetingRoomType": {
          "description": "Assigned Type: ota2-0400:MeetingRoomFormat_Enum",
          "$ref": "#/definitions/MeetingRoomFormat_Enum"
        },
        "MeetingRoomAccessory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MeetingRoomAccessory"
          },
          "maxItems": 1000
        },
        "MultimediaCollection": {
          "description": "Assigned Type: ota2-0500:MultimediaCollection",
          "$ref": "#/definitions/MultimediaCollection"
        },
        "DescriptiveContentFeatureAccessibility": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DescriptiveContentFeatureAccessibility"
          },
          "maxItems": 100
        },
        "DescriptiveContentFeatureSecurity": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DescriptiveContentFeatureSecurity"
          },
          "maxItems": 100
        },
        "Dimensions": {
          "description": "Assigned Type: ota2-0500:Dimensions",
          "$ref": "#/definitions/Dimensions"
        },
        "AvailableCapacities": {
          "description": "Assigned Type: org-0400:AvailableCapacities",
          "$ref": "#/definitions/AvailableCapacities"
        },
        "irregularInd": {
          "description": "When true, the meeting room is an irregular shape, not the traditional rectangle or square.",
          "type": "boolean"
        },
        "dedicatedInd": {
          "description": "When true, the room is used for a single purpose as indicated by the MeetingRoomType element.",
          "type": "boolean"
        },
        "featuredInd": {
          "description": "When true, this is a featured meeting room for the property.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "MeetingRoomAccessory": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "MeetingRoomAccessory"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "codeDetail": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "quantity": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "MeetingRoomCode_Enum": {
          "description": "Assigned Type: ota2-0400:MeetingRoomCode_Enum",
          "$ref": "#/definitions/MeetingRoomCode_Enum"
        },
        "DiscountsAvailable": {
          "description": "Assigned Type: ota2-0400:DiscountsAvailable_Enum",
          "$ref": "#/definitions/DiscountsAvailable_Enum"
        },
        "MultimediaCollection": {
          "description": "Assigned Type: ota2-0500:MultimediaCollection",
          "$ref": "#/definitions/MultimediaCollection"
        },
        "Charge": {
          "description": "Assigned Type: ota2-0500:Charge",
          "$ref": "#/definitions/Charge"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "MeetingRoomCapacity": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "MeetingRoomCapacity"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "MeetingRoomFormat": {
          "description": "Assigned Type: ota2-0400:MeetingRoomFormat_Enum",
          "$ref": "#/definitions/MeetingRoomFormat_Enum"
        },
        "Occupancy": {
          "description": "Assigned Type: ota2-0500:Occupancy",
          "$ref": "#/definitions/Occupancy"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "MeetingRooms": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "MeetingRooms"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "meetingRoomCount": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "smallestRoomSpace": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "largestRoomSpace": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "totalRoomSpace": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "largestSeatingCapacity": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "secondLargestSeatingCapacity": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "smallestSeatingCapacity": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "totalSeatingCapacity": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "largestRoomHeight": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "totalExhibitSpace": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "MeetingRoom": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MeetingRoom"
          },
          "maxItems": 1000
        },
        "UnitOfMeasure": {
          "description": "Assigned Type: ota2-0400:UnitOfMeasure_Enum",
          "$ref": "#/definitions/UnitOfMeasure_Enum"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "AvailableCapacities": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "AvailableCapacities"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "MeetingRoomCapacity": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MeetingRoomCapacity"
          },
          "maxItems": 100
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Restaurants": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Restaurants"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "quantity": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "Restaurant": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Restaurant"
          },
          "maxItems": 100
        },
        "RestaurantService": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RestaurantService_Enum"
          },
          "maxItems": 100
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Restaurant": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Restaurant"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "restaurantName": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "maxSeatingCapacity": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "maxSingleParty": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "invCode": {
          "description": "Assigned Type: ota2-0500:String",
          "type": "string",
          "maxLength": 512
        },
        "sort": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "Proximity": {
          "description": "Assigned Type: ota2-0400:Proximity_Enum",
          "$ref": "#/definitions/Proximity_Enum"
        },
        "MealsOffered": {
          "description": "Assigned Type: org-0400:MealsOffered",
          "$ref": "#/definitions/MealsOffered"
        },
        "MultimediaCollection": {
          "description": "Assigned Type: ota2-0500:MultimediaCollection",
          "$ref": "#/definitions/MultimediaCollection"
        },
        "RelativePosition": {
          "description": "Assigned Type: ota2-0500:RelativePosition",
          "$ref": "#/definitions/RelativePosition"
        },
        "OperationSchedule": {
          "description": "Assigned Type: ota2-0500:OperationSchedule",
          "$ref": "#/definitions/OperationSchedule"
        },
        "RestaurantInformation": {
          "description": "Assigned Type: org-0400:RestaurantInformation",
          "$ref": "#/definitions/RestaurantInformation"
        },
        "Description": {
          "description": "Assigned Type: ota2-0500:Description",
          "$ref": "#/definitions/Description"
        },
        "DescriptiveContentFeatureAccessibility": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DescriptiveContentFeatureAccessibility"
          },
          "maxItems": 100
        },
        "DescriptiveContentFeatureSecurity": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DescriptiveContentFeatureSecurity"
          },
          "maxItems": 100
        },
        "ContactInformation": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactInformation"
          },
          "maxItems": 100
        },
        "Award": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rating"
          },
          "maxItems": 100
        },
        "reservationRequiredInd": {
          "description": "When true, a reservation must be made to dine in the restaurant.",
          "type": "boolean"
        },
        "featuredInd": {
          "description": "When true, this is a featured restaurant for the property.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "MealsOffered": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "MealsOffered"
      },
      "description": "Indicates the meals offered at a restaurant.",
      "properties": {
        "breakfastOfferedInd": {
          "description": "When true, breakfast is served.",
          "type": "boolean"
        },
        "lunchOfferedInd": {
          "description": "When true, lunch is served.",
          "type": "boolean"
        },
        "brunchOfferedInd": {
          "description": "When true, brunc is served.",
          "type": "boolean"
        },
        "dinnerOfferedInd": {
          "description": "When true, dinner is served.",
          "type": "boolean"
        }
      }
    },
    "RestaurantInformation": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "RestaurantInformation"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "ExtensionPoint_Shared": {
          "$ref": "#/definitions/ExtensionPoint_Shared"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "RestaurantInformationBeverage": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "RestaurantInformation"
      },
      "allOf": [
        {
          "$ref": "#/definitions/RestaurantInformation"
        },
        {
          "properties": {
            "Beverage": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Beverage_Enum"
              },
              "maxItems": 100
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "RestaurantInformationService": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "RestaurantInformation"
      },
      "allOf": [
        {
          "$ref": "#/definitions/RestaurantInformation"
        },
        {
          "properties": {
            "RestaurantService": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RestaurantService_Enum"
              },
              "maxItems": 100
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "RestaurantInformationAvailableMealCategory": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "RestaurantInformation"
      },
      "allOf": [
        {
          "$ref": "#/definitions/RestaurantInformation"
        },
        {
          "properties": {
            "AvailableMealCategory": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AvailableMealCategory_Enum"
              },
              "maxItems": 100
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "RestaurantInformationCategory": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "RestaurantInformation"
      },
      "allOf": [
        {
          "$ref": "#/definitions/RestaurantInformation"
        },
        {
          "properties": {
            "RestaurantBarCategory": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RestaurantBarCategory_Enum"
              },
              "maxItems": 10
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "RestaurantInformationPolicy": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "RestaurantInformation"
      },
      "allOf": [
        {
          "$ref": "#/definitions/RestaurantInformation"
        },
        {
          "properties": {
            "RestaurantPolicy": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RestaurantPolicy_Enum"
              },
              "maxItems": 10
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "RestaurantInformationCuisine": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "RestaurantInformation"
      },
      "allOf": [
        {
          "$ref": "#/definitions/RestaurantInformation"
        },
        {
          "properties": {
            "CuisineType": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CuisineType_Enum"
              },
              "maxItems": 100
            },
            "mainInd": {
              "description": "When true, this is the primary cuisine type offered at the dining facility.",
              "type": "boolean"
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "Attraction": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Attraction"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "name": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "sort": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "fee": {
          "description": "A fee associated with an attraction.  This may be primarily used for attractions that are directly associated with the property.",
          "type": "number",
          "format": "float"
        },
        "Proximity": {
          "description": "Assigned Type: ota2-0400:Proximity_Enum",
          "$ref": "#/definitions/Proximity_Enum"
        },
        "ChargeType": {
          "description": "Assigned Type: ota2-0400:ChargeUnit_Enum",
          "$ref": "#/definitions/ChargeUnit_Enum"
        },
        "AttractionType": {
          "description": "Assigned Type: ota2-0400:AttractionCategory_Enum",
          "$ref": "#/definitions/AttractionCategory_Enum"
        },
        "DateTimeSpanWindows": {
          "description": "Assigned Type: ota2-0500:DateTimeSpanWindows",
          "$ref": "#/definitions/DateTimeSpanWindows"
        },
        "Code": {
          "description": "Assigned Type: ota2-0500:Code",
          "$ref": "#/definitions/Code"
        },
        "MinAgeAppropriate": {
          "description": "Assigned Type: ota2-0400:AgeQualifyingCode_Enum",
          "$ref": "#/definitions/AgeQualifyingCode_Enum"
        },
        "OperationSchedule": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationSchedule"
          },
          "maxItems": 100
        },
        "MultimediaCollection": {
          "description": "Assigned Type: ota2-0500:MultimediaCollection",
          "$ref": "#/definitions/MultimediaCollection"
        },
        "ReferencePoint": {
          "description": "Assigned Type: ota2-0500:ReferencePoint",
          "$ref": "#/definitions/ReferencePoint"
        },
        "Description": {
          "description": "Assigned Type: ota2-0500:Description",
          "$ref": "#/definitions/Description"
        },
        "ContactInformation": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactInformation"
          },
          "maxItems": 10
        },
        "courtesyPhoneInd": {
          "description": "When true, a courtesy phone is available.  This signifies whether or not a courtesy phone for contacting the hotel is available at the attraction (e.g. often times these are availabe in airports).",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "AreaInformation": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "AreaInformation"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "ReferencePoint": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReferencePoint"
          },
          "maxItems": 100
        },
        "Attraction": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attraction"
          },
          "maxItems": 100
        },
        "Recreation": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Recreation"
          },
          "maxItems": 100
        },
        "OtherHotel": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OtherHotel"
          },
          "maxItems": 100
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "LoyaltyProgramInformation": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "LoyaltyProgramInformation"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "programName": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "secondaryName": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "affiliateProgramName": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "hotelLevel": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "programCode": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "TravelSector": {
          "description": "Assigned Type: ota2-0400:TravelSector_Enum",
          "$ref": "#/definitions/TravelSector_Enum"
        },
        "Description": {
          "description": "Assigned Type: ota2-0500:Description",
          "$ref": "#/definitions/Description"
        },
        "Restriction": {
          "description": "Assigned Type: ota2-0500:Restriction",
          "$ref": "#/definitions/Restriction"
        },
        "BlackoutDates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BlackoutDates"
          },
          "maxItems": 100
        },
        "primaryProgramInd": {
          "description": "When true, identifies the primary loyalty program.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "AffiliationInfo": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "AffiliationInfo"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "DistributionSystem": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DistributionSystem"
          },
          "maxItems": 10
        },
        "Brand": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brand"
          },
          "maxItems": 1000
        },
        "LoyaltyProgramInformation": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoyaltyProgramInformation"
          },
          "maxItems": 100
        },
        "Award": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rating"
          },
          "maxItems": 100
        },
        "PartnerInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PartnerInfo"
          },
          "maxItems": 100
        },
        "Description": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Description"
          },
          "maxItems": 100
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "NameType": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "NameType"
      },
      "description": "OTA Code list: Name Type\\tNAM\\t\\n\\t1\\tFormer\\n\\t2\\tNickname\\n\\t3\\tAlternate\\n\\t4\\tMaiden",
      "type": "string",
      "enum": [
        "Alternate",
        "Former",
        "Maiden",
        "Nickname"
      ]
    },
    "OptInStatus_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "OptInStatus_Enum"
      },
      "type": "string",
      "enum": [
        "OptedIn",
        "OptedOut",
        "Unknown"
      ]
    },
    "TextFormatType": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "TextFormatType"
      },
      "type": "string",
      "enum": [
        "PlainText",
        "HTML"
      ]
    },
    "YesNoInherit_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "YesNoInherit_Enum"
      },
      "type": "string",
      "enum": [
        "Yes",
        "No",
        "Inherit"
      ]
    },
    "AddressBldgRoom": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "AddressBldgRoom"
      },
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 512
        },
        "buldingInd": {
          "description": "When true, the information is a building name.",
          "type": "boolean"
        }
      }
    },
    "AddressStreetNumber": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "AddressStreetNumber"
      },
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Extension: StreetNmbrType"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 128
        },
        "streetNmbrSuffix": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to8"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "StreetNmbrSuffix"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "B"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "streetDirection": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to8"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "StreetDirection"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "NNW"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "ruralRouteNmbr": {
          "description": "Assigned Type: ota2-0500:RuralRouteNumber",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}NumericStringLength1to5"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "RuralRouteNmbr"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "88"
              }
            ]
          },
          "type": "string",
          "pattern": "[0-9]{1,5}"
        },
        "pO_Box": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": "98567499"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        }
      }
    },
    "AmountPercent": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "AmountPercent"
      },
      "properties": {
        "amount": {
          "description": "Specifies the amount.",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": "5000"
              }
            ]
          },
          "type": "number",
          "format": "float"
        },
        "percent": {
          "description": "Assigned Type: ota2-0500:Percent",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": "5"
              }
            ]
          },
          "type": "number",
          "format": "float",
          "maximum": 100.0,
          "exclusiveMaximum": false,
          "minimum": 0.0,
          "exclusiveMinimum": false
        },
        "currencyCode": {
          "description": "Assigned Type: ota2-0500:CurrencyCode_ISO4217",
          "type": "string",
          "pattern": "[a-zA-Z]{3}"
        },
        "decimalPlaces": {
          "description": "Assigned Type: ota2-0500:String",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": "2"
              }
            ]
          },
          "type": "string",
          "maxLength": 512
        }
      }
    },
    "CompanyName": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "CompanyName"
      },
      "description": "Identifies a company by name.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength0to128"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 512
        },
        "division": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Division"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "Travel Division"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "department": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Department"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "Adventure department"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "shortName": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CompanyShortName"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "Adventure Inc"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "code": {
          "description": "Assigned Type: ota2-0500:Code",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Code"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "AI"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "codeContext": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "description": {
          "description": "Assigned Type: ota2-0500:String",
          "type": "string",
          "maxLength": 512
        },
        "quantity": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "listURI": {
          "description": "Assigned Type: ota2-0500:String",
          "type": "string",
          "maxLength": 512
        }
      }
    },
    "Country": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Country"
      },
      "description": "ISO 3166 code for a country.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}ISO3166"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "pattern": "[a-zA-Z]{2}"
        },
        "name": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength0to64"
              ]
            },
            "examples": [
              {
                "context": "Common",
                "value": "Ireland"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        }
      }
    },
    "CurrencyCode": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "CurrencyCode"
      },
      "description": "An ISO 4217 (3) alpha character code that specifies a monetary unit.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}AlphaLength3"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "pattern": "[a-zA-Z]{3}"
        },
        "decimalPlaces": {
          "description": "The ISO 4217 standard \\\"minor unit\\\" is typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces\u003d\\\"2\\\" to represent $85).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Changed type from {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}nonNegativeInteger.",
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "DecimalPlaces"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "2"
              }
            ]
          },
          "type": "string"
        }
      }
    },
    "CurrencyAmount": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "CurrencyAmount"
      },
      "description": "A monetary amount.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Money"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "number",
          "format": "float"
        },
        "currencyCode": {
          "description": "Assigned Type: ota2-0500:CurrencyCode_ISO4217",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}AlphaLength3"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CurrencyCode"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "USD"
              }
            ]
          },
          "type": "string",
          "pattern": "[a-zA-Z]{3}"
        },
        "minorUnit": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Changed type from {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}nonNegativeInteger.",
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "DecimalPlaces"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "2"
              }
            ]
          },
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        }
      }
    },
    "DateTimeStamp": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "DateTimeStamp"
      },
      "description": "Time stamp of the creation.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}dateTime"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "format": "date-time"
        },
        "create": {
          "description": "Time stamp of the creation.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}dateTime"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CreateDateTime"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        },
        "creatorID": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CreatorID"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "c123456789"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "lastModify": {
          "description": "Time stamp of last modification.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}dateTime"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "LastModifyDateTime"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        },
        "lastModifierID": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "LastModifierID"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "m987654321"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "purge": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}date"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "PurgeDate"
              }
            ]
          },
          "type": "string",
          "format": "date"
        }
      }
    },
    "DateEffectiveExpire": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "DateEffectiveExpire"
      },
      "description": "Used to identify the effective date and\\/or expiration date.",
      "properties": {
        "effective": {
          "description": "Indicates the starting date.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}date"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "EffectiveDate"
              }
            ]
          },
          "type": "string",
          "format": "date"
        },
        "expire": {
          "description": "Indicates the ending date.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}date"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ExpireDate"
              }
            ]
          },
          "type": "string",
          "format": "date"
        },
        "expireDateExclusiveInd": {
          "description": "When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15  the last date of the period is Oct 14).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}boolean"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ExpireDateExclusiveInd"
              }
            ]
          },
          "type": "boolean"
        }
      }
    },
    "Identifier": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Identifier"
      },
      "description": "Identifier provides the ability to create a globally unique identifier.   This could be GUID a UUID or any other string that an organization that distinctly identifies the specific object.\\n\\nIdeally, for the identifier to be globally unique it must have a system provided identifier and the system must be identified using a global naming authority. System identification uses the domain naming system (DNS) to assure they are globally unique and should be an URL. The system provided ID will typically be a primary or surrogate key in a database.\\n\\nThe URL, system and company attributes can be omitted only when the system context can be implied by a parent or ancestor element.",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 128
        },
        "url": {
          "description": "Uri of the creating system. The URI should be an URL and be globally unique. Should only be omitted when the context is clearly implied for the containing document.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Identifier provides the ability to create a globally unique identifier. For the identifier to be globally unique it must have a system provided identifier and the system must be identified using a global naming authority. System identification uses the domain naming system (DNS) to assure they are globally unique and should be an URL. The system provided ID will typically be a primary or surrogate key in a database."
              ]
            }
          },
          "type": "string"
        },
        "system": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": "sysABC3344"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "organization": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": "Acme"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        }
      }
    },
    "PersonName": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "PersonName"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Prefix": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 32
          },
          "maxItems": 3
        },
        "Given": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 128
          },
          "maxItems": 5
        },
        "Middle": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 128
          },
          "maxItems": 5
        },
        "Surname": {
          "description": "Family name, last name. \\nNote: Simple form of person name should be used for the full name.\\nMay also be used for full name if the sending system does not have the ability to separate a full name into its parts, e.g. the surname element may be used to pass the full name.",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": "Smith"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "Surname"
      ],
      "discriminator": "@type"
    },
    "RelatedTraveler_Simple_Person_Name": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "PersonName"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Prefix": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 32
          },
          "maxItems": 3
        },
        "Given": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 128
          },
          "maxItems": 5
        },
        "Middle": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 128
          },
          "maxItems": 5
        },
        "Surname": {
          "description": "Family name, last name. \\nNote: Simple form of person name should be used for the full name.\\nMay also be used for full name if the sending system does not have the ability to separate a full name into its parts, e.g. the surname element may be used to pass the full name.",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": "Smith"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "Surname"
      ],
      "discriminator": "@type"
    },
    "PersonNameDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "PersonName"
      },
      "allOf": [
        {
          "$ref": "#/definitions/PersonName"
        },
        {
          "properties": {
            "type": {
              "description": "Type of name of the individual, such as former, nickname, alternate or alias name. Refer to OpenTravel Code List Name Type (NAM).",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "NameType"
                  }
                ]
              },
              "$ref": "#/definitions/NameType"
            },
            "language": {
              "description": "The language the name is represented in, e.g. an Eastern name versus a Western name.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}language"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Language"
                  }
                ],
                "examples": [
                  {
                    "context": "Common",
                    "value": "en"
                  }
                ]
              },
              "type": "string"
            },
            "SurnamePrefix": {
              "description": "The surname prefix, e.g \\\"van der\\\", \\\"von\\\", \\\"de\\\".",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "SurnamePrefix"
                  }
                ]
              },
              "type": "string",
              "maxLength": 32
            },
            "Suffix": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 32
              },
              "maxItems": 3
            },
            "Title": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 32
              },
              "maxItems": 3
            },
            "PersonDocument": {
              "description": "Assigned Type: ota2-0500:PersonDocument",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Document"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Document"
                  }
                ]
              },
              "$ref": "#/definitions/PersonDocument"
            },
            "Privacy": {
              "description": "Assigned Type: ota2-0500:Privacy",
              "$ref": "#/definitions/Privacy"
            },
            "defaultInd": {
              "description": "If true, this is the default or primary name within a collection of names.",
              "type": "boolean"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "RelatedTraveler_Simple_Person_NameDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "PersonName"
      },
      "allOf": [
        {
          "$ref": "#/definitions/RelatedTraveler_Simple_Person_Name"
        },
        {
          "properties": {
            "type": {
              "description": "Type of name of the individual, such as former, nickname, alternate or alias name. Refer to OpenTravel Code List Name Type (NAM).",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "NameType"
                  }
                ]
              },
              "$ref": "#/definitions/NameType"
            },
            "language": {
              "description": "The language the name is represented in, e.g. an Eastern name versus a Western name.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}language"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Language"
                  }
                ],
                "examples": [
                  {
                    "context": "Common",
                    "value": "en"
                  }
                ]
              },
              "type": "string"
            },
            "SurnamePrefix": {
              "description": "The surname prefix, e.g \\\"van der\\\", \\\"von\\\", \\\"de\\\".",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "SurnamePrefix"
                  }
                ]
              },
              "type": "string",
              "maxLength": 32
            },
            "Suffix": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 32
              },
              "maxItems": 3
            },
            "Title": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 32
              },
              "maxItems": 3
            },
            "PersonDocument": {
              "description": "Assigned Type: ota2-0500:PersonDocument",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Document"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Document"
                  }
                ]
              },
              "$ref": "#/definitions/PersonDocument"
            },
            "Privacy": {
              "description": "Assigned Type: ota2-0500:Privacy",
              "$ref": "#/definitions/Privacy"
            },
            "defaultInd": {
              "description": "If true, this is the default or primary name within a collection of names.",
              "type": "boolean"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "Privacy": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Privacy"
      },
      "description": "Allows for control of the sharing of data between parties.",
      "properties": {
        "shareMarketInd": {
          "description": "Permission for sharing data for marketing purposes.",
          "$ref": "#/definitions/YesNoInherit_Enum"
        },
        "shareSyncInd": {
          "description": "Permission for sharing data for synchronization of information held by other travel service providers.",
          "$ref": "#/definitions/YesNoInherit_Enum"
        },
        "optInStatus": {
          "description": "If present and set to opt out, a customer has explicitly opted out of marketing communication. When set to opt out it overrides the ShareMarketInd.",
          "$ref": "#/definitions/OptInStatus_Enum"
        },
        "optInDate": {
          "description": "The date and time of opt in.",
          "type": "string",
          "format": "date-time"
        },
        "optOutDate": {
          "description": "The date and time of opt out.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "StateProv": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "StateProv"
      },
      "description": "The standard code or abbreviation for the state, province, or region.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StateProvCodeType"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 8,
          "minLength": 2
        },
        "name": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength0to64"
              ]
            },
            "examples": [
              {
                "context": "Common",
                "value": "Texas"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        }
      }
    },
    "Telephone": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Telephone"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "countryAccessCode": {
          "description": "Assigned Type: ota2-0500:TelephoneCountryAccessCode",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}NumericStringLength1to3"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CountryAccessCode"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "01"
              }
            ]
          },
          "type": "string",
          "pattern": "[0-9]{1,3}"
        },
        "areaCityCode": {
          "description": "Assigned Type: ota2-0500:TelephoneAreaCityCode",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}NumericStringLength1to8"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "AreaCityCode"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "202"
              }
            ]
          },
          "type": "string",
          "pattern": "[0-9]{1,8}"
        },
        "phoneNumber": {
          "description": "Assigned Type: ota2-0500:TelephoneNumber",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "PhoneNumber"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "5555555"
              }
            ]
          },
          "type": "string",
          "pattern": "[0-9]{7,20}"
        },
        "extension": {
          "description": "Assigned Type: ota2-0500:TelephoneExtension",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}NumericStringLength1to5"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Extension"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "237"
              }
            ]
          },
          "type": "string",
          "pattern": "[0-9]{1,5}"
        },
        "id": {
          "description": "Used elsewhere in the message to reference a specific telephone number (including faxes).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}RPH_Type"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "RPH"
              }
            ]
          },
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/Enum_TelephoneRole"
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "phoneNumber"
      ],
      "discriminator": "@type"
    },
    "TelephoneDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Telephone"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Telephone"
        },
        {
          "properties": {
            "pIN": {
              "description": "Assigned Type: ota2-0500:StringTiny",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to8"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "PIN"
                  }
                ],
                "examples": [
                  {
                    "context": "Common",
                    "value": "1234"
                  }
                ]
              },
              "type": "string",
              "maxLength": 32
            },
            "remark": {
              "description": "Assigned Type: ota2-0500:StringText",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to128"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Remark"
                  }
                ],
                "examples": [
                  {
                    "context": "Common",
                    "value": "Don\u0027t call after 10:00PM"
                  }
                ]
              },
              "type": "string",
              "maxLength": 4096
            },
            "Privacy": {
              "description": "Assigned Type: ota2-0500:Privacy",
              "$ref": "#/definitions/Privacy"
            },
            "PhoneLocationType": {
              "description": "Assigned Type: ota2-0400:PhoneLocation_Enum",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "PhoneLocationType"
                  }
                ]
              },
              "$ref": "#/definitions/PhoneLocation_Enum"
            },
            "PhoneTechType": {
              "description": "Assigned Type: ota2-0400:PhoneTechType_Enum",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "PhoneTechType"
                  }
                ]
              },
              "$ref": "#/definitions/PhoneTechType_Enum"
            },
            "PhoneUseType": {
              "description": "Assigned Type: ota2-0400:PhoneUseType_Enum",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "PhoneUseType"
                  }
                ]
              },
              "$ref": "#/definitions/PhoneUseType_Enum"
            },
            "defaultInd": {
              "description": "When true, indicates a default value should be used.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}boolean"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "DefaultInd"
                  }
                ]
              },
              "type": "boolean"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "Enum_TelephoneRole": {
      "properties": {
        "value": {
          "$ref": "#/definitions/Enum_TelephoneRole_Open"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "Enum_TelephoneRole_Base": {
      "type": "string",
      "enum": [
        "Home",
        "Office",
        "Mobile",
        "Other"
      ]
    },
    "Enum_TelephoneRole_Open": {
      "type": "string",
      "enum": [
        "Home",
        "Office",
        "Mobile",
        "Other",
        "Other_"
      ]
    },
    "Text": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Text"
      },
      "description": "Provides text and indicates whether it is formatted or not.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 4096
        },
        "language": {
          "description": "The language in which the text is provided.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: LanguageGroup"
              ]
            },
            "examples": [
              {
                "context": "Common",
                "value": "en"
              }
            ]
          },
          "type": "string"
        },
        "textFormat": {
          "description": "Indicates the format of text used in the description e.g. unformatted  or html.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: FormattedTextTextType_TextFormat"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "TextFormat"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "Sample Formatted text"
              }
            ]
          },
          "$ref": "#/definitions/TextFormatType"
        }
      }
    },
    "TextParagraph": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "TextParagraph"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "name": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Name"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "paragraph name"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "number": {
          "description": "The sequence number for the paragraph.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Changed type from {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}nonNegativeInteger.",
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ParagraphNumber"
              }
            ]
          },
          "type": "integer",
          "format": "int32"
        },
        "Text": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Text"
          },
          "maxItems": 1000
        },
        "Image": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageID"
          },
          "maxItems": 1000
        },
        "URL": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 1000
        },
        "ParagraphListItem": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParagraphListItem"
          },
          "maxItems": 1000
        },
        "DateTimeStamp": {
          "description": "Assigned Type: ota2-0500:DateTimeStamp",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: DateTimeStampGroup"
              ]
            }
          },
          "$ref": "#/definitions/DateTimeStamp"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Comment": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "TextParagraph"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "name": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Name"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "paragraph name"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "number": {
          "description": "The sequence number for the paragraph.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Changed type from {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}nonNegativeInteger.",
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ParagraphNumber"
              }
            ]
          },
          "type": "integer",
          "format": "int32"
        },
        "Text": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Text"
          },
          "maxItems": 1000
        },
        "Image": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageID"
          },
          "maxItems": 1000
        },
        "URL": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 1000
        },
        "ParagraphListItem": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParagraphListItem"
          },
          "maxItems": 1000
        },
        "DateTimeStamp": {
          "description": "Assigned Type: ota2-0500:DateTimeStamp",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: DateTimeStampGroup"
              ]
            }
          },
          "$ref": "#/definitions/DateTimeStamp"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Description": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "TextParagraph"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "name": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Name"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "paragraph name"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "number": {
          "description": "The sequence number for the paragraph.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Changed type from {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}nonNegativeInteger.",
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ParagraphNumber"
              }
            ]
          },
          "type": "integer",
          "format": "int32"
        },
        "Text": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Text"
          },
          "maxItems": 1000
        },
        "Image": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageID"
          },
          "maxItems": 1000
        },
        "URL": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 1000
        },
        "ParagraphListItem": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParagraphListItem"
          },
          "maxItems": 1000
        },
        "DateTimeStamp": {
          "description": "Assigned Type: ota2-0500:DateTimeStamp",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: DateTimeStampGroup"
              ]
            }
          },
          "$ref": "#/definitions/DateTimeStamp"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Restriction": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "TextParagraph"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "name": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Name"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "paragraph name"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "number": {
          "description": "The sequence number for the paragraph.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Changed type from {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}nonNegativeInteger.",
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ParagraphNumber"
              }
            ]
          },
          "type": "integer",
          "format": "int32"
        },
        "Text": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Text"
          },
          "maxItems": 1000
        },
        "Image": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageID"
          },
          "maxItems": 1000
        },
        "URL": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 1000
        },
        "ParagraphListItem": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParagraphListItem"
          },
          "maxItems": 1000
        },
        "DateTimeStamp": {
          "description": "Assigned Type: ota2-0500:DateTimeStamp",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: DateTimeStampGroup"
              ]
            }
          },
          "$ref": "#/definitions/DateTimeStamp"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "TimeSpan": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "TimeSpan"
      },
      "description": "Specifies the arrival date and departure date which covers the whole Reservation.",
      "properties": {
        "start": {
          "description": "Assigned Type: ota2-0500:DateTime",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": "2016-08-22T19:32:52Z"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        },
        "end": {
          "description": "Assigned Type: ota2-0500:DateTime",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": "2016-08-28T04:32:52Z"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "start",
        "end"
      ]
    },
    "URL": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "URL"
      },
      "description": "Web site address, in IETF specified format.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}anyURI"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string"
        },
        "type": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Type"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "defaultInd": {
          "description": "Indicates whether or not this is the default URL.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: DefaultIndGroup"
              ]
            }
          },
          "type": "boolean"
        }
      }
    },
    "ParagraphListItem": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "ParagraphListItem"
      },
      "properties": {
        "listItem": {
          "description": "The item or sequence number.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}integer"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ListItem"
              }
            ]
          },
          "type": "integer",
          "format": "int32"
        },
        "text2": {
          "description": "Assigned Type: ota2-0500:Text",
          "type": "string",
          "maxLength": 4096
        },
        "language": {
          "description": "The language in which the text is provided.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: LanguageGroup"
              ]
            },
            "examples": [
              {
                "context": "Common",
                "value": "en"
              }
            ]
          },
          "type": "string"
        },
        "textFormat": {
          "description": "Indicates the format of text used in the description e.g. unformatted  or html.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: FormattedTextTextType_TextFormat"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "TextFormat"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "Sample Formatted text"
              }
            ]
          },
          "$ref": "#/definitions/TextFormatType"
        }
      }
    },
    "DateTimeSpanWindows": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "DateTimeSpanWindows"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "TimeSpan": {
          "description": "Assigned Type: ota2-0500:TimeSpan",
          "$ref": "#/definitions/TimeSpan"
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "StayRestrictions": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "DateTimeSpanWindows"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "TimeSpan": {
          "description": "Assigned Type: ota2-0500:TimeSpan",
          "$ref": "#/definitions/TimeSpan"
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "DateTimeSpanWindowsDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "DateTimeSpanWindows"
      },
      "allOf": [
        {
          "$ref": "#/definitions/DateTimeSpanWindows"
        },
        {
          "properties": {
            "StartWindow": {
              "description": "Assigned Type: ota2-0500:TimeSpan",
              "$ref": "#/definitions/TimeSpan"
            },
            "EndWindow": {
              "description": "Assigned Type: ota2-0500:TimeSpan",
              "$ref": "#/definitions/TimeSpan"
            },
            "Duration": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 100
            },
            "DurationUnit": {
              "description": "Assigned Type: ota2-0400:DurationUnit_Enum",
              "$ref": "#/definitions/DurationUnit_Enum"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "StayRestrictionsDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "DateTimeSpanWindows"
      },
      "allOf": [
        {
          "$ref": "#/definitions/StayRestrictions"
        },
        {
          "properties": {
            "StartWindow": {
              "description": "Assigned Type: ota2-0500:TimeSpan",
              "$ref": "#/definitions/TimeSpan"
            },
            "EndWindow": {
              "description": "Assigned Type: ota2-0500:TimeSpan",
              "$ref": "#/definitions/TimeSpan"
            },
            "Duration": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 100
            },
            "DurationUnit": {
              "description": "Assigned Type: ota2-0400:DurationUnit_Enum",
              "$ref": "#/definitions/DurationUnit_Enum"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "Code": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Code"
      },
      "description": "Any code used to specify an item, for example, type of traveler, service code, room amenity, etc.  May be used to reference the OpenTravel RMA Codelist.",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 32
        },
        "codeContext": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "description": {
          "description": "Assigned Type: ota2-0500:String",
          "type": "string",
          "maxLength": 512
        },
        "quantity": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "listURI": {
          "description": "Assigned Type: ota2-0500:String",
          "type": "string",
          "maxLength": 512
        }
      }
    },
    "PersonDocument": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "PersonDocument"
      },
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
          ]
        }
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "DocType": {
          "description": "Assigned Type: ota2-0400:DocumentType_Enum",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "DocType"
              }
            ]
          },
          "$ref": "#/definitions/DocumentType_Enum"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "PayloadStdAttributes": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "PayloadStdAttributes"
      },
      "description": "The standard attributes that appear on the root element for all OpenTravel messages.",
      "properties": {
        "echoToken": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to128"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "EchoToken"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "timeStamp": {
          "description": "YYYY-MM-DDThh:mm:ssZ with time values using the 24 hour clock:\\n20 November 2003, 1:59:38 pm UTC becomes 2003-11-20T13:59:38Z",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}dateTime"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "TimeStamp"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        },
        "target": {
          "description": "Test or Production target system indicator.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: OTA_PayloadStdAttributes_Target"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Target"
              }
            ]
          },
          "$ref": "#/definitions/TargetEnvironment_Enum"
        },
        "targetName": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "TargetName"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "version": {
          "description": "The OpenTravel message version indicated by a decimal value.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}decimal"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Version"
              }
            ]
          },
          "type": "number",
          "format": "float"
        },
        "transactionIdentifier": {
          "description": "Unique identifier to relate all messages within a transaction (e.g. this would be sent in all request and response messages that are part of an on-going transaction).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "TransactionIdentifier"
              }
            ]
          },
          "type": "string"
        },
        "sequenceNmbr": {
          "description": "Implementer: Message resynchronization typically is required if a system has been off-line and needs to retrieve messages that were missed.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Changed type from {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}nonNegativeInteger.",
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "SequenceNmbr"
              }
            ]
          },
          "type": "string"
        },
        "transactionStatusCode": {
          "description": "This indicates where this message falls within a sequence of messages.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: OTA_PayloadStdAttributes_TransactionStatusCode"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "TransactionStatusCode"
              }
            ]
          },
          "$ref": "#/definitions/TransactionStatusCode_Enum"
        },
        "correlationID": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CorrelationID"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "primaryLangID": {
          "description": "ISO 639 (3) character language codes: http:\\/\\/en.wikipedia.org\\/wiki\\/Lists_of_ISO_639_codes",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}language"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "PrimaryLangID"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "en"
              }
            ]
          },
          "type": "string"
        },
        "altLangID": {
          "description": "ISO 639 (3) character language codes: http:\\/\\/en.wikipedia.org\\/wiki\\/Lists_of_ISO_639_codes",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}language"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "AltLangID"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "es"
              }
            ]
          },
          "type": "string"
        },
        "retransmissionIndicatorInd": {
          "description": "Implementer: It is recommended that this attribute is used (i.e., set to TRUE) only when a message is retransmitted.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}boolean"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "RetransmissionIndicator"
              }
            ]
          },
          "type": "boolean"
        }
      },
      "required": [
        "version"
      ]
    },
    "TargetEnvironment_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "TargetEnvironment_Enum"
      },
      "type": "string",
      "enum": [
        "Test",
        "Production"
      ]
    },
    "TransactionStatusCode_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "TransactionStatusCode_Enum"
      },
      "type": "string",
      "enum": [
        "Start",
        "End",
        "Rollback",
        "InSeries",
        "Continuation",
        "Subsequent"
      ]
    },
    "ErrorWarning": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "ErrorWarning"
      },
      "description": "The error in textual format.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to64"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 512
        },
        "language": {
          "description": "Assigned Type: ota2-0500:LanguageCode",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/ErrorWarningType_Enum_Base"
        },
        "typeExtension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        },
        "shortText": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "code": {
          "description": "Assigned Type: ota2-0500:OTA_Code",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}OTA_CodeType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Code"
              }
            ]
          },
          "type": "string",
          "pattern": "[0-9A-Z]{1,4}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}anyURI"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "DocURL"
              }
            ]
          },
          "type": "string"
        },
        "tag": {
          "description": "Assigned Type: ota2-0500:String",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Tag"
              }
            ]
          },
          "type": "string",
          "maxLength": 512
        },
        "recordID": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "RecordID"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "nodeList": {
          "description": "Assigned Type: ota2-0500:String",
          "type": "string",
          "maxLength": 512
        },
        "status": {
          "$ref": "#/definitions/Status_Enum_Base"
        },
        "statusExtension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "Geolocation": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Geolocation"
      },
      "description": "Used to specify the geographic coordinates of a location.",
      "properties": {
        "latitude": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to16"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Latitude"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "longitude": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to16"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Longitude"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "altitude": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to16"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Altitude"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "altitudeUnitOfMeasure_Enum": {
          "description": "Provides the unit of measure for the altitude (e.g., feet, meters, miles, kilometers). Refer to OpenTravel Code List Unit of Measure Code (UOM).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}OTA_CodeType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "AltitudeUnitOfMeasureCode"
              }
            ]
          },
          "$ref": "#/definitions/UnitOfMeasure_Enum"
        },
        "mapURL": {
          "description": "The URL of a map image.",
          "type": "string"
        },
        "formatURL": {
          "description": "The URL to the format for the latitude and longitude for this location.",
          "type": "string"
        }
      }
    },
    "Result": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Result"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorWarning"
          },
          "maxItems": 50
        },
        "Warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorWarning"
          },
          "maxItems": 50
        },
        "Status": {
          "description": "Assigned Type: ota2-0400:Status_Enum",
          "$ref": "#/definitions/Status_Enum"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Address": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Address"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "AddressLine": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 128
          },
          "maxItems": 4
        },
        "BldgRoom": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddressBldgRoom"
          },
          "maxItems": 2
        },
        "Number": {
          "description": "Assigned Type: ota2-0500:AddressStreetNumber",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StreetNmbr"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "StreetNmbr"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "111"
              }
            ]
          },
          "$ref": "#/definitions/AddressStreetNumber"
        },
        "Street": {
          "description": "May contain the street number when the Street number element is missing.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to255"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "AddressLine"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "Travers Street"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "City": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CityName"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "Dublin"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "County": {
          "description": "County or Region Name (e.g., Fairfax).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "County"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "Fairfax"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "StateProv": {
          "description": "Assigned Type: ota2-0500:StateProv",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StateProvType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "StateProv"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "Texas"
              }
            ]
          },
          "$ref": "#/definitions/StateProv"
        },
        "Country": {
          "description": "Assigned Type: ota2-0500:Country",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}CountryNameType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CountryName"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "IE"
              }
            ]
          },
          "$ref": "#/definitions/Country"
        },
        "PostalCode": {
          "description": "Post Office Code number.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "PostalCode"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "32165-9999"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "role": {
          "$ref": "#/definitions/Enum_AddressRole"
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "AddressDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Address"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Address"
        },
        {
          "properties": {
            "language": {
              "description": "Example: en",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}language"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Language"
                  }
                ],
                "examples": [
                  {
                    "context": "Common",
                    "value": "en"
                  }
                ]
              },
              "type": "string"
            },
            "Remark": {
              "description": "A remark associated with this address.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to128"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Remark"
                  }
                ],
                "examples": [
                  {
                    "context": "Common",
                    "value": "This address should be used for all official correspondences."
                  }
                ]
              },
              "type": "string",
              "maxLength": 4096
            },
            "Privacy": {
              "description": "Assigned Type: ota2-0500:Privacy",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "AttributeGroup: PrivacyGroup"
                  ]
                }
              },
              "$ref": "#/definitions/Privacy"
            },
            "Type": {
              "description": "Assigned Type: ota2-0400:CommunicationLocation_Enum",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Type"
                  }
                ],
                "examples": [
                  {
                    "context": "Common",
                    "value": "CLT"
                  }
                ]
              },
              "$ref": "#/definitions/CommunicationLocation_Enum"
            },
            "Use": {
              "description": "Assigned Type: ota2-0400:AddressUse_Enum",
              "x-otm-annotations": {
                "examples": [
                  {
                    "context": "Common",
                    "value": "AUT"
                  }
                ]
              },
              "$ref": "#/definitions/AddressUse_Enum"
            },
            "validInd": {
              "description": "If true, this is a valid and complete mailing address that has been verified through an address verification service or previously mailed materials have not been returned.",
              "type": "boolean"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "Enum_AddressRole": {
      "properties": {
        "value": {
          "$ref": "#/definitions/Enum_AddressRole_Open"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "Enum_AddressRole_Base": {
      "type": "string",
      "enum": [
        "Home",
        "Business",
        "Destination",
        "Other"
      ]
    },
    "Enum_AddressRole_Open": {
      "type": "string",
      "enum": [
        "Home",
        "Business",
        "Destination",
        "Other",
        "Other_"
      ]
    },
    "Location": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Location"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Address": {
          "description": "Assigned Type: ota2-0500:Address",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}AddressInfoType"
              ]
            }
          },
          "$ref": "#/definitions/Address"
        },
        "Position": {
          "description": "Assigned Type: ota2-0500:Geolocation",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Position"
              ]
            }
          },
          "$ref": "#/definitions/Geolocation"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "Address"
      ],
      "discriminator": "@type"
    },
    "IndexPointCode_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "IndexPointCode_Enum"
      },
      "description": "Indicates the type of location being referenced (e.g., Airport, Hotel).",
      "type": "string",
      "enum": [
        "Cross street",
        "Intersection",
        "Highway",
        "Highway exit",
        "City",
        "Airport",
        "Rail station",
        "Subway station",
        "Geo location",
        "Bus/coach station",
        "Hotel",
        "Nearest major city",
        "Surrounding city",
        "Heliport",
        "Regional express train station",
        "Attraction",
        "Business location",
        "Car rental location",
        "Convention center",
        "Educational",
        "Event",
        "Ground transport",
        "Military bases",
        "Park/recreational area",
        "Port",
        "Resort/ski area",
        "Shopping center",
        "Sports",
        "Transportation points",
        "Neighbouring state",
        "Metro area",
        "District",
        "Local landmark"
      ]
    },
    "Email": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Email"
      },
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to128"
          ]
        }
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "remark": {
          "description": "Assigned Type: ota2-0500:StringText",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to128"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Remark"
              }
            ]
          },
          "type": "string",
          "maxLength": 4096
        },
        "textFormat": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: EmailType_TextFormat"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "TextFormat"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "Address": {
          "description": "The email address.  IETF RFC 2821",
          "type": "string",
          "maxLength": 512
        },
        "Type": {
          "description": "Assigned Type: ota2-0400:EmailAddressType_Enum",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "EmailType"
              }
            ]
          },
          "$ref": "#/definitions/EmailAddressType_Enum"
        },
        "Privacy": {
          "description": "Assigned Type: ota2-0500:Privacy",
          "$ref": "#/definitions/Privacy"
        },
        "validInd": {
          "description": "If true, this is a valid email address that has been system verified via a successful email transmission.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}boolean"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ValidInd"
              }
            ]
          },
          "type": "boolean"
        },
        "defaultInd": {
          "description": "If true, this identifies this is the default email address.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: DefaultIndGroup"
              ]
            }
          },
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "Address"
      ],
      "discriminator": "@type"
    },
    "MultimediaCollection": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "MultimediaCollection"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "lastUpdated": {
          "description": "The date and time when the collection of multimedia information was last updated.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}dateTime"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "LastUpdated"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        },
        "Multimedia": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Multimedia"
          },
          "minItems": 1
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "Multimedia"
      ],
      "discriminator": "@type"
    },
    "VideoCategoryID": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "VideoCategory"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "objID": {
          "description": "A unique identifier within this document for this object.",
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: ota2-0500:Identifier",
          "$ref": "#/definitions/Identifier"
        },
        "VideoCategoryRef": {
          "description": "Refers to the obj ID on an object defined elsewhere in the current document.",
          "type": "string"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "VideoCategory": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "VideoCategory"
      },
      "allOf": [
        {
          "$ref": "#/definitions/VideoCategoryID"
        },
        {
          "properties": {
            "category": {
              "description": "Assigned Type: ota2-0500:OTA_Code",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Category"
                  }
                ]
              },
              "type": "string",
              "pattern": "[0-9A-Z]{1,4}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
            },
            "language": {
              "description": "The language associated with the caption for the category.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}language"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Language"
                  }
                ],
                "examples": [
                  {
                    "context": "Common",
                    "value": "en"
                  }
                ]
              },
              "type": "string"
            },
            "caption": {
              "description": "Assigned Type: ota2-0500:StringShort",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to128"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Caption"
                  }
                ]
              },
              "type": "string",
              "maxLength": 128
            },
            "Video": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VideoID"
              }
            },
            "removalInd": {
              "description": "If true, this item is obsolete and should be removed from the receiving system.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "AttributeGroup: RemovalGroup"
                  ]
                }
              },
              "type": "boolean"
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "MultimediaDescription": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "MultimediaDescription"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "title": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
              ]
            }
          },
          "type": "string",
          "maxLength": 128
        },
        "language": {
          "description": "The language in which the content is provided.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}language"
              ]
            },
            "examples": [
              {
                "context": "Common",
                "value": "en"
              }
            ]
          },
          "type": "string"
        },
        "caption": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to128",
                "Example value: ca1 \u003d The Empire State Building at sunset.",
                "Example value: tns \u003d The Empire State Building at sunset."
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Caption"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "The Empire State Building at sunset."
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "FormattedTextSubSection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormattedTextSubSection"
          },
          "maxItems": 99,
          "minItems": 1
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "FormattedTextSubSection"
      ],
      "discriminator": "@type"
    },
    "MultimediaDetails": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "MultimediaDetails"
      },
      "description": "Warning:  To be redesigned in the next release. The title of the multimedia object.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to64"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 128
        },
        "author": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Author"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "copyrightNotice": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CopyrightNotice"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "copyrightOwner": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CopyrightOwner"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "copyrightStart": {
          "description": "Assigned Type: ota2-0500:DateTime",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}DateOrDateTimeType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CopyrightStart"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        },
        "copyrightEnd": {
          "description": "Assigned Type: ota2-0500:DateTime",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}DateOrDateTimeType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CopyrightEnd"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        },
        "effectiveStart": {
          "description": "Assigned Type: ota2-0500:DateTime",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}DateOrDateTimeType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "EffectiveStart"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        },
        "effectiveEnd": {
          "description": "Assigned Type: ota2-0500:DateTime",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}DateOrDateTimeType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "EffectiveEnd"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        },
        "applicableStart": {
          "description": "Start month and day or date for which the multimedia content is relevent (e.g. the start of a season or the start of an event). When a year is not used (i.e. only the month and day) it signifies a recurring event.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}DateOrMonthDay"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ApplicableStart"
              }
            ]
          },
          "type": "string",
          "format": "date"
        },
        "applicableEnd": {
          "description": "End month and day or date for which the multimedia content is relevent (e.g. the end of a season or the start of an event). When a year is not used (i.e. only the month and day) it signifies a recurring event.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}DateOrMonthDay"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ApplicableEnd"
              }
            ]
          },
          "type": "string",
          "format": "date"
        }
      }
    },
    "VideoID": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Video"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "objID": {
          "description": "A unique identifier within this document for this object.",
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: ota2-0500:Identifier",
          "$ref": "#/definitions/Identifier"
        },
        "VideoRef": {
          "description": "Refers to the obj ID on an object defined elsewhere in the current document.",
          "type": "string"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Video": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Video"
      },
      "allOf": [
        {
          "$ref": "#/definitions/VideoID"
        },
        {
          "properties": {
            "unitOfMeasureCode": {
              "description": "Assigned Type: ota2-0500:OTA_Code",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "UnitOfMeasureCode"
                  }
                ]
              },
              "type": "string",
              "pattern": "[0-9A-Z]{1,4}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
            },
            "width": {
              "description": "The width of the video item (unit specified by unit of measure).",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}positiveInteger"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Width"
                  }
                ]
              },
              "type": "integer",
              "format": "int32"
            },
            "height": {
              "description": "The height of the video item (unit specified by unit of measure).",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}positiveInteger"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Height"
                  }
                ]
              },
              "type": "integer",
              "format": "int32"
            },
            "bitRate": {
              "description": "The bit rate of the video item.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}positiveInteger"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "BitRate"
                  }
                ]
              },
              "type": "integer",
              "format": "int32"
            },
            "length": {
              "description": "The length of the video item (unit specified by unit of measure).",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}positiveInteger"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Length"
                  }
                ]
              },
              "type": "integer",
              "format": "int32"
            },
            "version": {
              "description": "The version of the video item.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Version"
                  }
                ]
              },
              "type": "string"
            },
            "format": {
              "description": "Assigned Type: ota2-0500:OTA_Code",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}OTA_CodeType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Format"
                  }
                ]
              },
              "type": "string",
              "pattern": "[0-9A-Z]{1,4}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
            },
            "fileSize": {
              "description": "The size of the multimedia file in bytes.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}positiveInteger"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "FileSize"
                  }
                ]
              },
              "type": "integer",
              "format": "int32"
            },
            "fileName": {
              "description": "Assigned Type: ota2-0500:StringShort",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to64"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "FileName"
                  }
                ]
              },
              "type": "string",
              "maxLength": 128
            },
            "streamingSource": {
              "description": "Example: YouTube",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "StreamingSource"
                  }
                ]
              },
              "type": "string"
            },
            "URL": {
              "description": "URL of the multimedia item for a specific format.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}anyURI"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "URL"
                  }
                ]
              },
              "type": "string"
            },
            "Details": {
              "description": "Assigned Type: ota2-0500:MultimediaDetails",
              "$ref": "#/definitions/MultimediaDetails"
            },
            "MultimediaDescription": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MultimediaDescription"
              }
            },
            "DateTimeStamp": {
              "description": "Assigned Type: ota2-0500:DateTimeStamp",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "AttributeGroup: DateTimeStampGroup"
                  ]
                }
              },
              "$ref": "#/definitions/DateTimeStamp"
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "Rating": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Rating"
      },
      "description": "The actual award or rating received by the facility.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string"
        },
        "provider": {
          "description": "The name of the award or ratings provider.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Provider"
              }
            ]
          },
          "type": "string"
        },
        "description": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "ratingSymbol": {
          "description": "A symbol that a rating provider uses to rate a facility (e.g. Diamonds, Stars).",
          "$ref": "#/definitions/RatingSymbol"
        },
        "rating": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "date": {
          "description": "The date the award was received.",
          "type": "string",
          "format": "date"
        },
        "officialAppointmentInd": {
          "description": "When true, indicates the property has received official permission from the award provider to use the rating in publications and marketing materials; when false this permission has not been granted.",
          "type": "boolean"
        }
      }
    },
    "ProcessingInfo": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "ProcessingInfo"
      },
      "description": "Transaction processing directives, including display currency overrides. If no display currency information is provided, the display and pricing currency will default to the value in POS\\/Source\\/@ISOCurrency.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "(Developer Notes) An agreement should be in place with your trading partners that specifies what information is summary versus detail."
          ]
        }
      },
      "properties": {
        "displayCurrency": {
          "description": "Assigned Type: ota2-0500:CurrencyCode_ISO4217",
          "x-otm-annotations": {
            "documentation": {
              "references": [
                "http:\\/\\/www.opentraveldevelopersnetwork.com\\/Supported_ISO_Standards.php"
              ],
              "more-info": [
                "http:\\/\\/www.opentraveldevelopersnetwork.com\\/2012A_SchemaDoc\\/DisplayCurrency"
              ]
            }
          },
          "type": "string",
          "pattern": "[a-zA-Z]{3}"
        },
        "maxResponses": {
          "description": "The maximum quantity of search results in the response.",
          "type": "integer",
          "format": "int32"
        },
        "summaryResultsInd": {
          "description": "If true, summary information is requested in the search results.",
          "type": "boolean"
        }
      }
    },
    "OperationSchedule": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "OperationSchedule"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "daysOfWeek": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DayOfWeek_Enum"
          }
        },
        "additionalOperationInfoCode": {
          "description": "Assigned Type: ota2-0500:OTA_Code",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            }
          },
          "type": "string",
          "pattern": "[0-9A-Z]{1,4}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
        },
        "frequency": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
              ]
            }
          },
          "type": "string",
          "maxLength": 128
        },
        "text": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength0to64"
              ]
            }
          },
          "type": "string",
          "maxLength": 128
        },
        "name": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "DateTimeSpanWindows": {
          "description": "Assigned Type: ota2-0500:DateTimeSpanWindows",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: DateTimeSpanGroup"
              ]
            }
          },
          "$ref": "#/definitions/DateTimeSpanWindows"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "RateRange": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "RateRange"
      },
      "description": "A range of monetary values within which the cost of the available products are requested.",
      "properties": {
        "minRate": {
          "description": "Assigned Type: ota2-0500:Money",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}Money"
              ]
            }
          },
          "type": "number",
          "format": "float"
        },
        "maxRate": {
          "description": "Assigned Type: ota2-0500:Money",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}Money"
              ]
            }
          },
          "type": "number",
          "format": "float"
        },
        "fixedRate": {
          "description": "Assigned Type: ota2-0500:Money",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}Money"
              ]
            }
          },
          "type": "number",
          "format": "float"
        },
        "rateTimeUnit": {
          "description": "Used to specify the period of time to which the rates apply.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}TimeUnitType"
              ]
            }
          },
          "$ref": "#/definitions/TimeUnit_Enum"
        },
        "currencyCode": {
          "description": "Assigned Type: ota2-0500:CurrencyCode_ISO4217",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}AlphaLength3"
              ]
            }
          },
          "type": "string",
          "pattern": "[a-zA-Z]{3}"
        }
      }
    },
    "LocationCode": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "LocationCode"
      },
      "description": "Location code is city, stateProvence, or country code",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 32
        },
        "city": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to8"
              ]
            },
            "examples": [
              {
                "context": "Common",
                "value": "Lancaster"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "stateProvince": {
          "description": "Assigned Type: ota2-0500:StateProvCode",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to8"
              ]
            }
          },
          "type": "string",
          "maxLength": 8,
          "minLength": 2
        },
        "country": {
          "description": "Assigned Type: ota2-0500:CountryCode_ISO3166",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}ISO3166"
              ]
            },
            "examples": [
              {
                "context": "Common",
                "value": "US"
              }
            ]
          },
          "type": "string",
          "pattern": "[a-zA-Z]{2}"
        },
        "codeContext": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "type": "string",
          "maxLength": 32
        }
      }
    },
    "ImageID": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Image"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "objID": {
          "description": "A unique identifier within this document for this object.",
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: ota2-0500:Identifier",
          "$ref": "#/definitions/Identifier"
        },
        "ImageRef": {
          "description": "Refers to the obj ID on an object defined elsewhere in the current document.",
          "type": "string"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Image": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Image"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ImageID"
        },
        {
          "properties": {
            "version": {
              "description": "The version of the video item.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
                  ]
                }
              },
              "type": "string"
            },
            "format": {
              "description": "Assigned Type: ota2-0500:OTA_Code",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}OTA_CodeType"
                  ]
                }
              },
              "type": "string",
              "pattern": "[0-9A-Z]{1,4}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
            },
            "dimensionCategory": {
              "description": "Assigned Type: ota2-0500:StringTiny",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16",
                    "Example value: ca1 \u003d 100x100",
                    "Example value: tns \u003d 100x100"
                  ]
                }
              },
              "type": "string",
              "maxLength": 32
            },
            "sort": {
              "description": "Example: 1",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}positiveInteger",
                    "Example value: ca1 \u003d !",
                    "Example value: tns \u003d !"
                  ]
                }
              },
              "type": "integer",
              "format": "int32"
            },
            "resolution": {
              "description": "Example: 600",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}positiveInteger",
                    "Example value: ca1 \u003d 600",
                    "Example value: tns \u003d 600"
                  ]
                }
              },
              "type": "integer",
              "format": "int32"
            },
            "colorSpace": {
              "description": "Assigned Type: ota2-0500:StringShort",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
                  ]
                }
              },
              "type": "string",
              "maxLength": 128
            },
            "URL": {
              "description": "URL of the multimedia item for a specific format.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}anyURI"
                  ]
                }
              },
              "type": "string"
            },
            "Details": {
              "description": "Assigned Type: ota2-0500:MultimediaDetails",
              "$ref": "#/definitions/MultimediaDetails"
            },
            "MultimediaDescription": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MultimediaDescription"
              }
            },
            "DateTimeStamp": {
              "description": "Assigned Type: ota2-0500:DateTimeStamp",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "AttributeGroup: DateTimeStampGroup"
                  ]
                }
              },
              "$ref": "#/definitions/DateTimeStamp"
            },
            "Email": {
              "description": "Assigned Type: ota2-0500:Email",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string",
                    "Example value: ca1 \u003d John@company.com",
                    "Example value: tns \u003d John@company.com"
                  ]
                }
              },
              "$ref": "#/definitions/Email"
            },
            "Dimensions": {
              "description": "Assigned Type: ota2-0500:Dimensions",
              "$ref": "#/definitions/Dimensions"
            },
            "File": {
              "description": "Assigned Type: ota2-0500:File",
              "$ref": "#/definitions/File"
            },
            "Geolocation": {
              "description": "Assigned Type: ota2-0500:Geolocation",
              "$ref": "#/definitions/Geolocation"
            },
            "originalIndicatorInd": {
              "description": "When true, the image is the original file and format. When false, the image is not the original file and format.",
              "type": "boolean"
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "ImageCategory": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "ImageCategory"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "category": {
          "description": "Assigned Type: ota2-0500:OTA_Code",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            }
          },
          "type": "string",
          "pattern": "[0-9A-Z]{1,4}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
        },
        "language": {
          "description": "The language associated with the caption for the category.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}language"
              ]
            },
            "examples": [
              {
                "context": "Common",
                "value": "en"
              }
            ]
          },
          "type": "string"
        },
        "caption": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to128"
              ]
            }
          },
          "type": "string",
          "maxLength": 128
        },
        "Image": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageID"
          },
          "maxItems": 100
        },
        "removalInd": {
          "description": "If true, this item is obsolete and should be removed from the receiving system.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: RemovalGroup"
              ]
            }
          },
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "RelativePosition": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "RelativePosition"
      },
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Extension: TransportationsType"
          ]
        }
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "direction": {
          "description": "Defines the cardinal direction (e.g., north, south, southwest).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            }
          },
          "type": "string"
        },
        "distance": {
          "description": "Defines the distance between two points.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            }
          },
          "type": "string"
        },
        "unitOfMeasureCode": {
          "description": "The unit of measure in a code format. Refer to OpenTravel Code List Unit of Measure Code (UOM).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}OTA_CodeType"
              ]
            }
          },
          "$ref": "#/definitions/UnitOfMeasure_Enum"
        },
        "indexPointCode": {
          "description": "This is the object referred to by the relative position (e.g. cross street, airport). Refer to OpenTravel Code List Index Point Code (IPC).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            }
          },
          "$ref": "#/definitions/IndexPointCode_Enum"
        },
        "name": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength0to64"
              ]
            }
          },
          "type": "string",
          "maxLength": 128
        },
        "toFrom": {
          "description": "Used to indicate whether the context is to a facility or from a facility.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: RelativePositionType_ToFrom"
              ]
            }
          },
          "$ref": "#/definitions/ToFrom_Enum"
        },
        "positionAccuracy": {
          "description": "Indicates the accuracy of the property\u0027s geo-coding, since the property\u0027s longitude and latitude may not always be exact. Refer to OpenTravel Code List Position Accuracy Code (PAC).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            }
          },
          "$ref": "#/definitions/PositionAccuracy_Enum"
        },
        "Transportations": {
          "description": "Assigned Type: ota2-0500:Transportations",
          "$ref": "#/definitions/Transportations"
        },
        "Description": {
          "description": "Assigned Type: ota2-0500:Description",
          "$ref": "#/definitions/Description"
        },
        "nearestInd": {
          "description": "The indicator for whether this location is nearest.",
          "type": "boolean"
        },
        "primaryInd": {
          "description": "Indicates whether the reference point is considered the main reference point for the specific type of IndexPointCode (e.g., in Dallas, where IndexPointCode\u003dairport Dallas\\/Fort Worth airport would be the primary airport even if another airport such as Love Field is closer).",
          "type": "boolean"
        },
        "approximateDistanceInd": {
          "description": "When true, the distance information is approximate.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Directions": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "RelativePosition"
      },
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Extension: TransportationsType"
          ]
        }
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "direction": {
          "description": "Defines the cardinal direction (e.g., north, south, southwest).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            }
          },
          "type": "string"
        },
        "distance": {
          "description": "Defines the distance between two points.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            }
          },
          "type": "string"
        },
        "unitOfMeasureCode": {
          "description": "The unit of measure in a code format. Refer to OpenTravel Code List Unit of Measure Code (UOM).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}OTA_CodeType"
              ]
            }
          },
          "$ref": "#/definitions/UnitOfMeasure_Enum"
        },
        "indexPointCode": {
          "description": "This is the object referred to by the relative position (e.g. cross street, airport). Refer to OpenTravel Code List Index Point Code (IPC).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            }
          },
          "$ref": "#/definitions/IndexPointCode_Enum"
        },
        "name": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength0to64"
              ]
            }
          },
          "type": "string",
          "maxLength": 128
        },
        "toFrom": {
          "description": "Used to indicate whether the context is to a facility or from a facility.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: RelativePositionType_ToFrom"
              ]
            }
          },
          "$ref": "#/definitions/ToFrom_Enum"
        },
        "positionAccuracy": {
          "description": "Indicates the accuracy of the property\u0027s geo-coding, since the property\u0027s longitude and latitude may not always be exact. Refer to OpenTravel Code List Position Accuracy Code (PAC).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            }
          },
          "$ref": "#/definitions/PositionAccuracy_Enum"
        },
        "Transportations": {
          "description": "Assigned Type: ota2-0500:Transportations",
          "$ref": "#/definitions/Transportations"
        },
        "Description": {
          "description": "Assigned Type: ota2-0500:Description",
          "$ref": "#/definitions/Description"
        },
        "nearestInd": {
          "description": "The indicator for whether this location is nearest.",
          "type": "boolean"
        },
        "primaryInd": {
          "description": "Indicates whether the reference point is considered the main reference point for the specific type of IndexPointCode (e.g., in Dallas, where IndexPointCode\u003dairport Dallas\\/Fort Worth airport would be the primary airport even if another airport such as Love Field is closer).",
          "type": "boolean"
        },
        "approximateDistanceInd": {
          "description": "When true, the distance information is approximate.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "TransportationID": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Transportation"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "objID": {
          "description": "A unique identifier within this document for this object.",
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: ota2-0500:Identifier",
          "$ref": "#/definitions/Identifier"
        },
        "TransportationRef": {
          "description": "Refers to the obj ID on an object defined elsewhere in the current document.",
          "type": "string"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Transportation": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Transportation"
      },
      "allOf": [
        {
          "$ref": "#/definitions/TransportationID"
        },
        {
          "properties": {
            "notificationRequired": {
              "description": "Assigned Type: ota2-0500:StringShort",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
                  ]
                }
              },
              "type": "string",
              "maxLength": 128
            },
            "typicalTravelTime": {
              "description": "The normal (average) travel time required to get to or from the location, measured in minutes.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
                  ]
                }
              },
              "type": "string"
            },
            "Type": {
              "description": "Assigned Type: ota2-0400:Transportation_Enum",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                }
              },
              "$ref": "#/definitions/Transportation_Enum"
            },
            "MultimediaCollection": {
              "description": "Assigned Type: ota2-0500:MultimediaCollection",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}MultimediaDescriptionsType"
                  ]
                }
              },
              "$ref": "#/definitions/MultimediaCollection"
            },
            "OperationSchedule": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OperationSchedule"
              },
              "maxItems": 30
            },
            "Description": {
              "description": "Assigned Type: ota2-0500:Description",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
                  ]
                }
              },
              "$ref": "#/definitions/Description"
            },
            "ChargeUnit": {
              "description": "Assigned Type: ota2-0400:ChargeUnit_Enum",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                }
              },
              "$ref": "#/definitions/ChargeUnit_Enum"
            },
            "CurrencyAmount": {
              "description": "Assigned Type: ota2-0500:CurrencyAmount",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "AttributeGroup: CurrencyAmountGroup"
                  ]
                }
              },
              "$ref": "#/definitions/CurrencyAmount"
            },
            "Address": {
              "description": "Assigned Type: ota2-0500:Address",
              "$ref": "#/definitions/Address"
            },
            "LocationCode": {
              "description": "Assigned Type: ota2-0500:LocationCode",
              "$ref": "#/definitions/LocationCode"
            },
            "includedInd": {
              "description": "When true there is no additional charge for transportation.",
              "type": "boolean"
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "Transportations": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Transportations"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Transportation": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransportationID"
          }
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "ArrivalTransport": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Transportations"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Transportation": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransportationID"
          }
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "DepartureTransport": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Transportations"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Transportation": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransportationID"
          }
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "TextCategory": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "TextCategory"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "category": {
          "description": "Assigned Type: ota2-0500:OTA_Code",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Category"
              }
            ]
          },
          "type": "string",
          "pattern": "[0-9A-Z]{1,4}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
        },
        "caption": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to128"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Caption"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "Text": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Text"
          }
        },
        "removalInd": {
          "description": "If true, this item is obsolete and should be removed from the receiving system.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: RemovalGroup"
              ]
            }
          },
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "FormattedTextSubSection": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "FormattedTextSubSection"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "subTitle": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
              ]
            }
          },
          "type": "string",
          "maxLength": 128
        },
        "subCode": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to8"
              ]
            }
          },
          "type": "string",
          "maxLength": 32
        },
        "subSectionNumber": {
          "description": "This attribute may be used when there is a need to number all of the sub-sections of information that is to be presented.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Numeric1to999"
              ]
            }
          },
          "type": "integer",
          "format": "int32"
        },
        "TextParagraph": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TextParagraph"
          },
          "maxItems": 99,
          "minItems": 1
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "TextParagraph"
      ],
      "discriminator": "@type"
    },
    "Amount": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Amount"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "unitPrice": {
          "description": "Assigned Type: ota2-0500:Money",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Money"
              ]
            }
          },
          "type": "number",
          "format": "float"
        },
        "unitName": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            }
          },
          "type": "string",
          "maxLength": 32
        },
        "quantity": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Numeric1to99"
              ]
            }
          },
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "percentage": {
          "description": "Assigned Type: ota2-0500:Percent",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Percentage"
              ]
            },
            "examples": [
              {
                "context": "Common",
                "value": "10"
              }
            ]
          },
          "type": "number",
          "format": "float",
          "maximum": 100.0,
          "exclusiveMaximum": false,
          "minimum": 0.0,
          "exclusiveMinimum": false
        },
        "description": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "Total": {
          "description": "Assigned Type: ota2-0500:CurrencyAmount",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Money"
              ]
            }
          },
          "$ref": "#/definitions/CurrencyAmount"
        },
        "ChargeUnit": {
          "description": "Assigned Type: ota2-0400:ChargeUnit_Enum",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: TeeTimeType_Applicability"
              ]
            }
          },
          "$ref": "#/definitions/ChargeUnit_Enum"
        },
        "ChargeFrequency": {
          "description": "Assigned Type: ota2-0400:ChargeUnit_Enum",
          "$ref": "#/definitions/ChargeUnit_Enum"
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Price": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Amount"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "unitPrice": {
          "description": "Assigned Type: ota2-0500:Money",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Money"
              ]
            }
          },
          "type": "number",
          "format": "float"
        },
        "unitName": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            }
          },
          "type": "string",
          "maxLength": 32
        },
        "quantity": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Numeric1to99"
              ]
            }
          },
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "percentage": {
          "description": "Assigned Type: ota2-0500:Percent",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Percentage"
              ]
            },
            "examples": [
              {
                "context": "Common",
                "value": "10"
              }
            ]
          },
          "type": "number",
          "format": "float",
          "maximum": 100.0,
          "exclusiveMaximum": false,
          "minimum": 0.0,
          "exclusiveMinimum": false
        },
        "description": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "Total": {
          "description": "Assigned Type: ota2-0500:CurrencyAmount",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Money"
              ]
            }
          },
          "$ref": "#/definitions/CurrencyAmount"
        },
        "ChargeUnit": {
          "description": "Assigned Type: ota2-0400:ChargeUnit_Enum",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: TeeTimeType_Applicability"
              ]
            }
          },
          "$ref": "#/definitions/ChargeUnit_Enum"
        },
        "ChargeFrequency": {
          "description": "Assigned Type: ota2-0400:ChargeUnit_Enum",
          "$ref": "#/definitions/ChargeUnit_Enum"
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "AmountDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Amount"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Amount"
        },
        {
          "properties": {
            "maxQuantity": {
              "description": "Assigned Type: ota2-0500:NonNegativeInteger",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Numeric1to999"
                  ]
                }
              },
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "chargeUnitExempt": {
              "description": "Assigned Type: ota2-0500:NonNegativeInteger",
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "chargeFrequencyExempt": {
              "description": "Assigned Type: ota2-0500:NonNegativeInteger",
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "maxChargeUnitApplies": {
              "description": "Assigned Type: ota2-0500:NonNegativeInteger",
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "maxChargeFrequencyApplies": {
              "description": "Assigned Type: ota2-0500:NonNegativeInteger",
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "PriceDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Amount"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Price"
        },
        {
          "properties": {
            "maxQuantity": {
              "description": "Assigned Type: ota2-0500:NonNegativeInteger",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Numeric1to999"
                  ]
                }
              },
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "chargeUnitExempt": {
              "description": "Assigned Type: ota2-0500:NonNegativeInteger",
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "chargeFrequencyExempt": {
              "description": "Assigned Type: ota2-0500:NonNegativeInteger",
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "maxChargeUnitApplies": {
              "description": "Assigned Type: ota2-0500:NonNegativeInteger",
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "maxChargeFrequencyApplies": {
              "description": "Assigned Type: ota2-0500:NonNegativeInteger",
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "ReferencePoint": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "ReferencePoint"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "name": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "Code": {
          "description": "Assigned Type: ota2-0500:Code",
          "$ref": "#/definitions/Code"
        },
        "Type": {
          "description": "Assigned Type: ota2-0400:ReferencePoint_Enum",
          "$ref": "#/definitions/ReferencePoint_Enum"
        },
        "Location": {
          "description": "Assigned Type: ota2-0500:Location",
          "$ref": "#/definitions/Location"
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "ReferencePointDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "ReferencePoint"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ReferencePoint"
        },
        {
          "properties": {
            "RelativePosition": {
              "description": "Assigned Type: ota2-0500:RelativePosition",
              "$ref": "#/definitions/RelativePosition"
            },
            "MultimediaCollection": {
              "description": "Assigned Type: ota2-0500:MultimediaCollection",
              "$ref": "#/definitions/MultimediaCollection"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "Dimensions": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Dimensions"
      },
      "description": "Defines the dimensions of an object.",
      "properties": {
        "unitOfMeasureCode": {
          "description": "Assigned Type: ota2-0500:OTA_Code",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            }
          },
          "type": "string",
          "pattern": "[0-9A-Z]{1,4}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
        },
        "width": {
          "description": "The width of the item (unit specified by unit of measure).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}positiveInteger"
              ]
            }
          },
          "type": "integer",
          "format": "int32"
        },
        "height": {
          "description": "The height of the item (unit specified by unit of measure).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}positiveInteger"
              ]
            }
          },
          "type": "integer",
          "format": "int32"
        },
        "area": {
          "description": "The area of the item, such as the area of a meeting room (unit specified by unit of measure).",
          "type": "integer",
          "format": "int32"
        },
        "length": {
          "description": "The length of the item (unit specified by unit of measure).",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "File": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "File"
      },
      "description": "Properties of a file.",
      "properties": {
        "name": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to64"
              ]
            }
          },
          "type": "string",
          "maxLength": 128
        },
        "size": {
          "description": "The size of the multimedia file in bytes.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}positiveInteger"
              ]
            }
          },
          "type": "integer",
          "format": "int32"
        },
        "originalName": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64",
                "Example value: ca1 \u003d 394820",
                "Example value: tns \u003d 394820"
              ]
            }
          },
          "type": "string",
          "maxLength": 128
        }
      }
    },
    "Multimedia": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "Multimedia"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "objID": {
          "description": "A unique identifier within this document for this object.",
          "type": "string"
        },
        "lastUpdated": {
          "description": "The date and time when the multimedia information was last updated.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}dateTime"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "LastUpdated"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        },
        "version": {
          "description": "The version of the content, typically in the form of \\\"1\\\" or \\\"2.3.\\\"",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Version"
              }
            ]
          },
          "type": "string"
        },
        "language": {
          "description": "The language associated with the caption for the category.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}language"
              ]
            },
            "examples": [
              {
                "context": "Common",
                "value": "en"
              }
            ]
          },
          "type": "string"
        },
        "caption": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to128"
              ]
            }
          },
          "type": "string",
          "maxLength": 128
        },
        "Category": {
          "description": "Assigned Type: ota2-0400:PictureCategory_Enum",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            }
          },
          "$ref": "#/definitions/PictureCategory_Enum"
        },
        "AdditionalDetailType": {
          "description": "Assigned Type: ota2-0400:AdditionalDetailType_Enum",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "AdditionalDetailCode"
              }
            ]
          },
          "$ref": "#/definitions/AdditionalDetailType_Enum"
        },
        "InfoType": {
          "description": "Assigned Type: ota2-0400:InformationType_Enum",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "InfoCode"
              }
            ]
          },
          "$ref": "#/definitions/InformationType_Enum"
        },
        "ExtensionPoint_Shared": {
          "$ref": "#/definitions/ExtensionPoint_Shared"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "MultimediaImage": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "Multimedia"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Multimedia"
        },
        {
          "properties": {
            "ImageCategory": {
              "description": "Assigned Type: ota2-0500:ImageCategory",
              "$ref": "#/definitions/ImageCategory"
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "MultimediaText": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "Multimedia"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Multimedia"
        },
        {
          "properties": {
            "TextCategory": {
              "description": "Assigned Type: ota2-0500:TextCategory",
              "$ref": "#/definitions/TextCategory"
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "MultimediaVideo": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "Multimedia"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Multimedia"
        },
        {
          "properties": {
            "VideoCategory": {
              "description": "Assigned Type: ota2-0500:VideoCategory",
              "$ref": "#/definitions/VideoCategoryID"
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "Tax": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Tax"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "sequenceNbr": {
          "description": "Assigned Type: ota2-0500:String",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Changed type from {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}nonNegativeInteger.",
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            }
          },
          "type": "string",
          "maxLength": 512
        },
        "Amount": {
          "description": "Assigned Type: ota2-0500:Amount",
          "$ref": "#/definitions/Amount"
        },
        "EffectiveExpire": {
          "description": "Assigned Type: ota2-0500:DateEffectiveExpire",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: EffectiveExpireOptionalDateGroup"
              ]
            }
          },
          "$ref": "#/definitions/DateEffectiveExpire"
        },
        "TaxType_Enum": {
          "description": "Assigned Type: ota2-0400:TaxType_Enum",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": ""
              }
            ]
          },
          "$ref": "#/definitions/TaxType_Enum"
        },
        "taxExcludedInd": {
          "description": "When present and true, this tax is excluded.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Taxes": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Taxes"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Total": {
          "description": "Assigned Type: ota2-0500:CurrencyAmount",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: CurrencyAmountGroup"
              ]
            }
          },
          "$ref": "#/definitions/CurrencyAmount"
        },
        "Tax": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tax"
          },
          "maxItems": 99
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "Total"
      ],
      "discriminator": "@type"
    },
    "BaseResponse": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "BaseResponse"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "PayloadStdAttributes": {
          "description": "Assigned Type: ota2-0500:PayloadStdAttributes",
          "$ref": "#/definitions/PayloadStdAttributes"
        },
        "Result": {
          "description": "Assigned Type: ota2-0500:Result",
          "$ref": "#/definitions/Result"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "FeeDetail": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "FeeDetail"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "ExtensionPoint_Shared": {
          "$ref": "#/definitions/ExtensionPoint_Shared"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "FeeDetailAdditionalPerson": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "FeeDetail"
      },
      "allOf": [
        {
          "$ref": "#/definitions/FeeDetail"
        },
        {
          "properties": {
            "minAge": {
              "description": "The min age for which this fee applies.",
              "type": "integer",
              "format": "int32"
            },
            "maxAge": {
              "description": "The max age for which the fee applies.",
              "type": "integer",
              "format": "int32"
            },
            "maxNumberAdditional": {
              "description": "The maximum number of additional people allowed.",
              "type": "integer",
              "format": "int32"
            },
            "feeAppliesAfter": {
              "description": "The number of people included in the price, before additional person charges apply.  The additonal person fee is applied after this number of people.  (E.G If feeAppliesAfter is 2 then the additional person fee begins with the 3 person.)",
              "type": "integer",
              "format": "int32"
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "RateRangeInfo": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "RateRangeInfo"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "RateRange": {
          "description": "Assigned Type: ota2-0500:RateRange",
          "$ref": "#/definitions/RateRange"
        },
        "DateTimeSpanWindows": {
          "description": "Assigned Type: ota2-0500:DateTimeSpanWindows",
          "$ref": "#/definitions/DateTimeSpanWindows"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Charge": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Charge"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "chargeUnitExempt": {
          "description": "Number of units permitted before charges are applied.",
          "type": "integer",
          "format": "int32"
        },
        "chargeFrequencyExempt": {
          "description": "Charge frequency exemptions before charges are applied.",
          "type": "integer",
          "format": "int32"
        },
        "maxChargeUnitApplies": {
          "description": "Maximum number of Units for which the charge will be applied.",
          "type": "integer",
          "format": "int32"
        },
        "maxChargeFrequencyApplies": {
          "description": "Maximum number of times the charge will be applied.",
          "type": "integer",
          "format": "int32"
        },
        "minAge": {
          "description": "Minimum age of applicability.",
          "type": "integer",
          "format": "int32"
        },
        "maxAge": {
          "description": "Maximum age of applicability.",
          "type": "integer",
          "format": "int32"
        },
        "ChargeFrequency": {
          "description": "Assigned Type: ota2-0400:Frequency_Enum",
          "$ref": "#/definitions/Frequency_Enum"
        },
        "ChargeUnit": {
          "description": "Assigned Type: ota2-0400:ChargeUnit_Enum",
          "$ref": "#/definitions/ChargeUnit_Enum"
        },
        "CurrencyAmount": {
          "description": "Assigned Type: ota2-0500:CurrencyAmount",
          "$ref": "#/definitions/CurrencyAmount"
        },
        "Taxes": {
          "description": "Assigned Type: ota2-0500:Taxes",
          "$ref": "#/definitions/Taxes"
        },
        "Description": {
          "description": "Assigned Type: ota2-0500:Description",
          "$ref": "#/definitions/Description"
        },
        "taxInclusiveInd": {
          "description": "When true, taxes are included when figuring the fees.",
          "type": "boolean"
        },
        "mandatoryInd": {
          "description": "When true, indicates the fee is mandatory.",
          "type": "boolean"
        },
        "taxableInd": {
          "description": "When true, indicates that the fee is subject to tax.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Occupancy": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Occupancy"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "RoomOccupancy": {
          "description": "Assigned Type: ph-0200:RoomOccupancy",
          "$ref": "#/definitions/RoomOccupancy"
        },
        "Charge": {
          "description": "Assigned Type: ota2-0500:Charge",
          "$ref": "#/definitions/Charge"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "WeatherInfo": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "WeatherInfo"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "period": {
          "description": "Assigned Type: ota2-0500:String",
          "type": "string",
          "maxLength": 512
        },
        "Precipitation": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Precipitation"
          },
          "maxItems": 2
        },
        "Temperature": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Temperature"
          },
          "maxItems": 2
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Precipitation": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Precipitation"
      },
      "description": "Provides average precipitation and the unit in which it is measured for a Period.",
      "properties": {
        "averagePrecipitation": {
          "description": "Defines the average precipitation for the time as designated in Period and is qualified by the UnitOfMeasure.",
          "type": "number",
          "format": "float"
        },
        "unitOfMeasure": {
          "description": "Defines the average precipitation for the time as designated in Period and is qualified by the UnitOfMeasure.",
          "$ref": "#/definitions/UnitOfMeasure_Enum"
        }
      }
    },
    "Temperature": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Temperature"
      },
      "properties": {
        "averageHighTemp": {
          "description": "Defines the average high tempature for the time as designated in Period and is qualified by the TempUnit.",
          "type": "integer",
          "format": "int32"
        },
        "averageLowTemp": {
          "description": "Defines the average low tempature for the time as designated in Period and is qualified by the TempUnit.",
          "type": "integer",
          "format": "int32"
        },
        "temperatureUnit": {
          "description": "Provides the units in which the AverageHighTemp and AverageLowTemp are defined (i.e. Celsius or Fahrenheit).",
          "$ref": "#/definitions/TemperatureUnit"
        }
      }
    },
    "CancelPenalty": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "CancelPenalty"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "numberOfNights": {
          "description": "Used in conjunction with the basis type when Nights is selected.",
          "type": "integer",
          "format": "int32"
        },
        "BasisType": {
          "description": "Assigned Type: ota2-0400:BasisType",
          "$ref": "#/definitions/BasisType"
        },
        "Deadline": {
          "description": "Assigned Type: order-0400:Deadline",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Deadline"
              ]
            }
          },
          "$ref": "#/definitions/Deadline"
        },
        "AmountPercent": {
          "description": "Assigned Type: ota2-0500:AmountPercent",
          "$ref": "#/definitions/AmountPercent"
        },
        "Description": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Description"
          },
          "maxItems": 9
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "CancelPenaltyDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "CancelPenalty"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CancelPenalty"
        },
        {
          "properties": {
            "policyId": {
              "description": "Assigned Type: ota2-0500:StringTiny",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16"
                  ]
                }
              },
              "type": "string",
              "maxLength": 32
            },
            "DayOfWeek": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DayOfWeek_Enum"
              },
              "maxItems": 7
            },
            "DateTimeSpanWindows": {
              "description": "Assigned Type: ota2-0500:DateTimeSpanWindows",
              "$ref": "#/definitions/DateTimeSpanWindows"
            },
            "RoomType": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 32
              },
              "maxItems": 100
            },
            "RatePlan": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 32
              },
              "maxItems": 100
            },
            "nonRefundableInd": {
              "description": "Indicates that any prepayment for the reservation is non refundable, therefore a 100% penalty on the prepayment is applied, irrespective of deadline.",
              "type": "boolean"
            },
            "noCancelInd": {
              "description": "Note: This will typically be set to false indicating that a reservation may be cancelled.",
              "type": "boolean"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "UnitOfMeasure": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "UnitOfMeasure"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "quantity": {
          "description": "The numeric value associated with the measurement.",
          "type": "number",
          "format": "float"
        },
        "UnitOfMeasure_Enum": {
          "description": "Assigned Type: ota2-0400:UnitOfMeasure_Enum",
          "$ref": "#/definitions/UnitOfMeasure_Enum"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "ContactInformation": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "ContactInformation"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "PersonName": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonName"
          },
          "maxItems": 100
        },
        "ContactLocation": {
          "description": "Assigned Type: ota2-0400:ContactLocation_Enum",
          "$ref": "#/definitions/ContactLocation_Enum"
        },
        "Address": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          },
          "maxItems": 100
        },
        "Telephone": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Telephone"
          },
          "maxItems": 100
        },
        "Email": {
          "description": "Assigned Type: ota2-0500:Email",
          "$ref": "#/definitions/Email"
        },
        "URL": {
          "description": "Assigned Type: ota2-0500:URL",
          "$ref": "#/definitions/URL"
        },
        "CompanyName": {
          "description": "Assigned Type: ota2-0500:CompanyName",
          "$ref": "#/definitions/CompanyName"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "EnvironmentalImpact": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "EnvironmentalImpact"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "CarbonFootprint": {
          "description": "Assigned Type: ota2-0500:CarbonFootprint",
          "$ref": "#/definitions/CarbonFootprint"
        },
        "Water": {
          "description": "Assigned Type: ota2-0500:Water",
          "$ref": "#/definitions/Water"
        },
        "Energy": {
          "description": "Assigned Type: ota2-0500:Energy",
          "$ref": "#/definitions/Energy"
        },
        "Recycling": {
          "description": "Assigned Type: ota2-0500:Recycling",
          "$ref": "#/definitions/Recycling"
        },
        "Description": {
          "description": "Assigned Type: ota2-0500:Description",
          "$ref": "#/definitions/Description"
        },
        "Certification": {
          "description": "Assigned Type: ota2-0500:Certification",
          "$ref": "#/definitions/Certification"
        },
        "certificationAvailableInd": {
          "description": "When true, certification credentials are available.",
          "type": "boolean"
        },
        "chemicalAllergiesInd": {
          "description": "When true, property uses products to reduce chemical allergies.",
          "type": "boolean"
        },
        "environmentalCleanersInd": {
          "description": "When true, property uses environmentally responsible cleaning products.",
          "type": "boolean"
        },
        "linenReuseInd": {
          "description": "When true, property has a linen reuse program in place.",
          "type": "boolean"
        },
        "procurementPolicyInd": {
          "description": "When true, the property has a procurement process in place.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "CarbonFootprint": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "CarbonFootprint"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "nonCarbonMeasurement": {
          "description": "Assigned Type: ota2-0500:String",
          "type": "string",
          "maxLength": 512
        },
        "meetingEvent": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "roomNight": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "weatherNormalized": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "CarbonUOM": {
          "description": "Assigned Type: ota2-0400:UnitOfMeasure_Enum",
          "$ref": "#/definitions/UnitOfMeasure_Enum"
        },
        "nonCarbonImpactInd": {
          "description": "Non-carbon impact measured indicator.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Water": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Water"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "perRoomNightUsage": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "wasteDiverisionPercentage": {
          "description": "Assigned Type: ota2-0500:Percent",
          "type": "number",
          "format": "float",
          "maximum": 100.0,
          "exclusiveMaximum": false,
          "minimum": 0.0,
          "exclusiveMinimum": false
        },
        "PerRoomDayUsage": {
          "description": "Water usage per room per day.",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "WaterUOM": {
          "description": "Assigned Type: ota2-0400:UnitOfMeasure_Enum",
          "$ref": "#/definitions/UnitOfMeasure_Enum"
        },
        "Description": {
          "description": "Assigned Type: ota2-0500:Description",
          "$ref": "#/definitions/Description"
        },
        "grayWaterInd": {
          "description": "When true, property participates in gray water recycling.",
          "type": "boolean"
        },
        "waterProgramInd": {
          "description": "When true, property participates in an active water conservation program indicator.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Energy": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Energy"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "energyGenerated": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "EnergyStarRating": {
          "description": "Energy star rating.",
          "type": "string",
          "maxLength": 32
        },
        "PowerUsage": {
          "description": "Assigned Type: ota2-0500:PowerUsage",
          "$ref": "#/definitions/PowerUsage"
        },
        "Description": {
          "description": "Assigned Type: ota2-0500:Description",
          "$ref": "#/definitions/Description"
        },
        "efficientAppliancesInd": {
          "description": "When true, energy efficient appliances used\\n.",
          "type": "boolean"
        },
        "efficientLightingInd": {
          "description": "When true, energy efficient lighting used.",
          "type": "boolean"
        },
        "heatPowerCombInd": {
          "description": "When true, combined heat and power units used indicator.",
          "type": "boolean"
        },
        "heatPumpInd": {
          "description": "When true, heat pumps are used.",
          "type": "boolean"
        },
        "powerSavingPolicyInd": {
          "description": "When true, property has a power saving policy.",
          "type": "boolean"
        },
        "solarInd": {
          "description": "Solar energy used indicator.",
          "type": "boolean"
        },
        "tempControlInd": {
          "description": "When true, property is temperature contolled.",
          "type": "boolean"
        },
        "windTurbineInd": {
          "description": "When true, wind turbines are used.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "PowerUsage": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "PowerUsage"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "quantity": {
          "description": "The quantity of power used.",
          "type": "number",
          "format": "float"
        },
        "PowerType": {
          "description": "Assigned Type: ota2-0400:PowerType_Enum",
          "$ref": "#/definitions/PowerType_Enum"
        },
        "PowerUOM": {
          "description": "Assigned Type: ota2-0400:UnitOfMeasure_Enum",
          "$ref": "#/definitions/UnitOfMeasure_Enum"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Recycling": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Recycling"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "RecycledProducts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecycledProducts_Enum"
          },
          "maxItems": 100
        },
        "RecycleLocations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecyclingLocations_Enum"
          },
          "maxItems": 100
        },
        "Description": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Description"
          },
          "maxItems": 100
        },
        "activeProgramInd": {
          "description": "When true, property has an active recycling program.",
          "type": "boolean"
        },
        "ecologicalDishwareInd": {
          "description": "When true, non-disposable dishware is used.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Certification": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Certification"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "name": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Name"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "paragraph name"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "number": {
          "description": "The sequence number for the paragraph.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Changed type from {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}nonNegativeInteger.",
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ParagraphNumber"
              }
            ]
          },
          "type": "integer",
          "format": "int32"
        },
        "Text": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Text"
          },
          "maxItems": 1000
        },
        "Image": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageID"
          },
          "maxItems": 1000
        },
        "URL": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 1000
        },
        "ParagraphListItem": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParagraphListItem"
          },
          "maxItems": 1000
        },
        "DateTimeStamp": {
          "description": "Assigned Type: ota2-0500:DateTimeStamp",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: DateTimeStampGroup"
              ]
            }
          },
          "$ref": "#/definitions/DateTimeStamp"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "ExtensionPoint": {},
    "ExtensionPoint_Summary": {},
    "ExtensionPoint_Detail": {},
    "ExtensionPoint_Custom": {},
    "ExtensionPoint_Query": {},
    "ExtensionPoint_Update": {},
    "ExtensionPoint_Shared": {},
    "ExtensionPoint_Choice": {}
  }
}
{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Common",
  "x-otm-library": {
    "ProjectName": "HotelDescriptiveContent 103019.otp",
    "LibraryName": "Common",
    "LibraryVersion": "5.0.0",
    "LibraryStatus": "DRAFT",
    "SourceFile": "/Common_5_0_0.otm",
    "CompilerVersion": "4.0-SNAPSHOT",
    "CompileDate": "2019-10-30T13:33:14.766-0400"
  },
  "definitions": {
    "AccessTypeCRUD": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "AccessTypeCRUD"
      },
      "type": "string",
      "enum": [
        "Create",
        "Read",
        "Update",
        "Delete"
      ]
    },
    "AccessTypeReadWrite": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "AccessTypeReadWrite"
      },
      "description": "Specifies the type of access that the organization has.",
      "type": "string",
      "enum": [
        "Read",
        "ReadWrite",
        "NoAccess"
      ]
    },
    "EncryptionTokenTypeAuthenticationMethod": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "EncryptionTokenTypeAuthenticationMethod"
      },
      "type": "string",
      "enum": [
        "SecurityCode",
        "MagneticStripe"
      ]
    },
    "FlightType": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "FlightType"
      },
      "description": "Specifies a particular type of flight (e.g. direct, stopover).",
      "type": "string",
      "enum": [
        "Nonstop",
        "Direct",
        "Connection",
        "SingleConnection",
        "DoubleConnection",
        "OneStopOnly"
      ]
    },
    "NameType": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "NameType"
      },
      "description": "OTA Code list: Name Type\\tNAM\\t\\n\\t1\\tFormer\\n\\t2\\tNickname\\n\\t3\\tAlternate\\n\\t4\\tMaiden",
      "type": "string",
      "enum": [
        "Alternate",
        "Former",
        "Maiden",
        "Nickname"
      ]
    },
    "OptInStatus_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "OptInStatus_Enum"
      },
      "type": "string",
      "enum": [
        "OptedIn",
        "OptedOut",
        "Unknown"
      ]
    },
    "SeatDirection": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "SeatDirection"
      },
      "description": "Identifies the orientation of a seat relative to the direction of  travel.",
      "type": "string",
      "enum": [
        "Airline",
        "Back",
        "Facing",
        "Lateral",
        "Unknown"
      ]
    },
    "StaffTypeAirlineTourCode": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "StaffTypeAirlineTourCode"
      },
      "type": "string",
      "enum": [
        "Current",
        "Duty",
        "CabinCrew",
        "Retired",
        "TechCrew",
        "UnaccompaniedFamilyMember",
        "OtherAirlinePersonnel"
      ]
    },
    "TextFormatType": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "TextFormatType"
      },
      "type": "string",
      "enum": [
        "PlainText",
        "HTML"
      ]
    },
    "TicketType": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "TicketType"
      },
      "description": "Specifies the type of ticket document (e.g. electronic, paper).",
      "type": "string",
      "enum": [
        "eTicket",
        "Paper",
        "MCO",
        "EMD-A",
        "EMD-S"
      ]
    },
    "YesNoInherit_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "YesNoInherit_Enum"
      },
      "type": "string",
      "enum": [
        "Yes",
        "No",
        "Inherit"
      ]
    },
    "AddressBldgRoom": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "AddressBldgRoom"
      },
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 512
        },
        "buldingInd": {
          "description": "When true, the information is a building name.",
          "type": "boolean"
        }
      }
    },
    "AddressStreetNumber": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "AddressStreetNumber"
      },
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Extension: StreetNmbrType"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 128
        },
        "streetNmbrSuffix": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to8"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "StreetNmbrSuffix"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "B"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "streetDirection": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to8"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "StreetDirection"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "NNW"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "ruralRouteNmbr": {
          "description": "Assigned Type: ota2-0500:RuralRouteNumber",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}NumericStringLength1to5"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "RuralRouteNmbr"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "88"
              }
            ]
          },
          "type": "string",
          "pattern": "[0-9]{1,5}"
        },
        "pO_Box": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": "98567499"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        }
      }
    },
    "AmountPercent": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "AmountPercent"
      },
      "properties": {
        "amount": {
          "description": "Specifies the amount.",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": "5000"
              }
            ]
          },
          "type": "number",
          "format": "float"
        },
        "percent": {
          "description": "Assigned Type: ota2-0500:Percent",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": "5"
              }
            ]
          },
          "type": "number",
          "format": "float",
          "maximum": 100.0,
          "exclusiveMaximum": false,
          "minimum": 0.0,
          "exclusiveMinimum": false
        },
        "currencyCode": {
          "description": "Assigned Type: ota2-0500:CurrencyCode_ISO4217",
          "type": "string",
          "pattern": "[a-zA-Z]{3}"
        },
        "decimalPlaces": {
          "description": "Assigned Type: ota2-0500:String",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": "2"
              }
            ]
          },
          "type": "string",
          "maxLength": 512
        }
      }
    },
    "CabinAir": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "CabinAir"
      },
      "description": "Specifies the cabin type (e.g. first, business, economy).",
      "properties": {
        "value": {
          "$ref": "#/definitions/CabinAir_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "CabinAir_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "CabinAir"
      },
      "description": "Specifies the cabin type (e.g. first, business, economy).",
      "type": "string",
      "enum": [
        "All",
        "Economy",
        "PremiumEconomy",
        "Business",
        "PremiumBusiness",
        "First",
        "Suite",
        "Cockpit",
        "Other_"
      ]
    },
    "ClubMembership": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "ClubMembership"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Name": {
          "description": "Assigned Type: ota2-0500:CompanyName",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}CompanyNameType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "TravelClubName"
              }
            ]
          },
          "$ref": "#/definitions/CompanyName"
        },
        "MemberIdentifier": {
          "description": "Identifier assigned to person registered with travel club.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}ClubMemberName"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ClubMemberName"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "Date_EffectiveExpire": {
          "description": "Assigned Type: ota2-0500:DateEffectiveExpire",
          "$ref": "#/definitions/DateEffectiveExpire"
        },
        "Privacy": {
          "description": "Assigned Type: ota2-0500:Privacy",
          "$ref": "#/definitions/Privacy"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "Name",
        "Date_EffectiveExpire",
        "Privacy"
      ],
      "discriminator": "@type"
    },
    "CompanyName": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "CompanyName"
      },
      "description": "Identifies a company by name.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength0to128"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 512
        },
        "division": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Division"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "Travel Division"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "department": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Department"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "Adventure department"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "shortName": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CompanyShortName"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "Adventure Inc"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "code": {
          "description": "Assigned Type: ota2-0500:Code",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Code"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "AI"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "codeContext": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "description": {
          "description": "Assigned Type: ota2-0500:String",
          "type": "string",
          "maxLength": 512
        },
        "quantity": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "listURI": {
          "description": "Assigned Type: ota2-0500:String",
          "type": "string",
          "maxLength": 512
        }
      }
    },
    "Condition": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Condition"
      },
      "description": "An error or warning",
      "properties": {
        "code": {
          "description": "Assigned Type: ota2-0500:ConditionCode",
          "type": "string",
          "pattern": "[A-F0-9]{3}"
        }
      },
      "required": [
        "code"
      ]
    },
    "Country": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Country"
      },
      "description": "ISO 3166 code for a country.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}ISO3166"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "pattern": "[a-zA-Z]{2}"
        },
        "name": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength0to64"
              ]
            },
            "examples": [
              {
                "context": "Common",
                "value": "Ireland"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        }
      }
    },
    "CountryName": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "CountryName"
      },
      "description": "The name or code of a country (e.g. as used in an address or to specify citizenship of a traveller).",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength0to64"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 512
        },
        "code": {
          "description": "Assigned Type: ota2-0500:CountryCode_ISO3166",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}ISO3166"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Code"
              }
            ]
          },
          "type": "string",
          "pattern": "[a-zA-Z]{2}"
        }
      }
    },
    "CurrencyCode": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "CurrencyCode"
      },
      "description": "An ISO 4217 (3) alpha character code that specifies a monetary unit.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}AlphaLength3"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "pattern": "[a-zA-Z]{3}"
        },
        "decimalPlaces": {
          "description": "The ISO 4217 standard \\\"minor unit\\\" is typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces\u003d\\\"2\\\" to represent $85).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Changed type from {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}nonNegativeInteger.",
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "DecimalPlaces"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "2"
              }
            ]
          },
          "type": "string"
        }
      }
    },
    "CurrencyAmount": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "CurrencyAmount"
      },
      "description": "A monetary amount.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Money"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "number",
          "format": "float"
        },
        "currencyCode": {
          "description": "Assigned Type: ota2-0500:CurrencyCode_ISO4217",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}AlphaLength3"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CurrencyCode"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "USD"
              }
            ]
          },
          "type": "string",
          "pattern": "[a-zA-Z]{3}"
        },
        "minorUnit": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Changed type from {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}nonNegativeInteger.",
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "DecimalPlaces"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "2"
              }
            ]
          },
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        }
      }
    },
    "DateTimeStamp": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "DateTimeStamp"
      },
      "description": "Time stamp of the creation.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}dateTime"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "format": "date-time"
        },
        "create": {
          "description": "Time stamp of the creation.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}dateTime"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CreateDateTime"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        },
        "creatorID": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CreatorID"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "c123456789"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "lastModify": {
          "description": "Time stamp of last modification.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}dateTime"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "LastModifyDateTime"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        },
        "lastModifierID": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "LastModifierID"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "m987654321"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "purge": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}date"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "PurgeDate"
              }
            ]
          },
          "type": "string",
          "format": "date"
        }
      }
    },
    "DateEffectiveExpire": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "DateEffectiveExpire"
      },
      "description": "Used to identify the effective date and\\/or expiration date.",
      "properties": {
        "effective": {
          "description": "Indicates the starting date.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}date"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "EffectiveDate"
              }
            ]
          },
          "type": "string",
          "format": "date"
        },
        "expire": {
          "description": "Indicates the ending date.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}date"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ExpireDate"
              }
            ]
          },
          "type": "string",
          "format": "date"
        },
        "expireDateExclusiveInd": {
          "description": "When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15  the last date of the period is Oct 14).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}boolean"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ExpireDateExclusiveInd"
              }
            ]
          },
          "type": "boolean"
        }
      }
    },
    "Identifier": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Identifier"
      },
      "description": "Identifier provides the ability to create a globally unique identifier.   This could be GUID a UUID or any other string that an organization that distinctly identifies the specific object.\\n\\nIdeally, for the identifier to be globally unique it must have a system provided identifier and the system must be identified using a global naming authority. System identification uses the domain naming system (DNS) to assure they are globally unique and should be an URL. The system provided ID will typically be a primary or surrogate key in a database.\\n\\nThe URL, system and company attributes can be omitted only when the system context can be implied by a parent or ancestor element.",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 128
        },
        "url": {
          "description": "Uri of the creating system. The URI should be an URL and be globally unique. Should only be omitted when the context is clearly implied for the containing document.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Identifier provides the ability to create a globally unique identifier. For the identifier to be globally unique it must have a system provided identifier and the system must be identified using a global naming authority. System identification uses the domain naming system (DNS) to assure they are globally unique and should be an URL. The system provided ID will typically be a primary or surrogate key in a database."
              ]
            }
          },
          "type": "string"
        },
        "system": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": "sysABC3344"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "organization": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": "Acme"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        }
      }
    },
    "PasswordHint": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "PasswordHint"
      },
      "description": "Alternate method to password for account access.",
      "properties": {
        "answer": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "question": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        }
      },
      "required": [
        "answer",
        "question"
      ]
    },
    "PersonName": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "PersonName"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Prefix": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 32
          },
          "maxItems": 3
        },
        "Given": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 128
          },
          "maxItems": 5
        },
        "Middle": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 128
          },
          "maxItems": 5
        },
        "Surname": {
          "description": "Family name, last name. \\nNote: Simple form of person name should be used for the full name.\\nMay also be used for full name if the sending system does not have the ability to separate a full name into its parts, e.g. the surname element may be used to pass the full name.",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": "Smith"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "ExtensionPoint_Summary": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "Surname"
      ],
      "discriminator": "@type"
    },
    "RelatedTraveler_Simple_Person_Name": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "PersonName"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Prefix": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 32
          },
          "maxItems": 3
        },
        "Given": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 128
          },
          "maxItems": 5
        },
        "Middle": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 128
          },
          "maxItems": 5
        },
        "Surname": {
          "description": "Family name, last name. \\nNote: Simple form of person name should be used for the full name.\\nMay also be used for full name if the sending system does not have the ability to separate a full name into its parts, e.g. the surname element may be used to pass the full name.",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": "Smith"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "ExtensionPoint_Summary": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "Surname"
      ],
      "discriminator": "@type"
    },
    "PersonNameDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "PersonName"
      },
      "allOf": [
        {
          "$ref": "#/definitions/PersonName"
        },
        {
          "properties": {
            "type": {
              "description": "Type of name of the individual, such as former, nickname, alternate or alias name. Refer to OpenTravel Code List Name Type (NAM).",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "NameType"
                  }
                ]
              },
              "$ref": "#/definitions/NameType"
            },
            "language": {
              "description": "The language the name is represented in, e.g. an Eastern name versus a Western name.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}language"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Language"
                  }
                ],
                "examples": [
                  {
                    "context": "Common",
                    "value": "en"
                  }
                ]
              },
              "type": "string"
            },
            "SurnamePrefix": {
              "description": "The surname prefix, e.g \\\"van der\\\", \\\"von\\\", \\\"de\\\".",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "SurnamePrefix"
                  }
                ]
              },
              "type": "string",
              "maxLength": 32
            },
            "Suffix": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 32
              },
              "maxItems": 3
            },
            "Title": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 32
              },
              "maxItems": 3
            },
            "PersonDocument": {
              "description": "Assigned Type: ota2-0500:PersonDocument",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Document"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Document"
                  }
                ]
              },
              "$ref": "#/definitions/PersonDocument"
            },
            "Privacy": {
              "description": "Assigned Type: ota2-0500:Privacy",
              "$ref": "#/definitions/Privacy"
            },
            "defaultInd": {
              "description": "If true, this is the default or primary name within a collection of names.",
              "type": "boolean"
            },
            "ExtensionPoint_Detail": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "RelatedTraveler_Simple_Person_NameDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "PersonName"
      },
      "allOf": [
        {
          "$ref": "#/definitions/RelatedTraveler_Simple_Person_Name"
        },
        {
          "properties": {
            "type": {
              "description": "Type of name of the individual, such as former, nickname, alternate or alias name. Refer to OpenTravel Code List Name Type (NAM).",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "NameType"
                  }
                ]
              },
              "$ref": "#/definitions/NameType"
            },
            "language": {
              "description": "The language the name is represented in, e.g. an Eastern name versus a Western name.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}language"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Language"
                  }
                ],
                "examples": [
                  {
                    "context": "Common",
                    "value": "en"
                  }
                ]
              },
              "type": "string"
            },
            "SurnamePrefix": {
              "description": "The surname prefix, e.g \\\"van der\\\", \\\"von\\\", \\\"de\\\".",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "SurnamePrefix"
                  }
                ]
              },
              "type": "string",
              "maxLength": 32
            },
            "Suffix": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 32
              },
              "maxItems": 3
            },
            "Title": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 32
              },
              "maxItems": 3
            },
            "PersonDocument": {
              "description": "Assigned Type: ota2-0500:PersonDocument",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Document"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Document"
                  }
                ]
              },
              "$ref": "#/definitions/PersonDocument"
            },
            "Privacy": {
              "description": "Assigned Type: ota2-0500:Privacy",
              "$ref": "#/definitions/Privacy"
            },
            "defaultInd": {
              "description": "If true, this is the default or primary name within a collection of names.",
              "type": "boolean"
            },
            "ExtensionPoint_Detail": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "RoomPrice": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "RoomPrice"
      },
      "description": "Specifies price after all applicable taxes of a product such as the rate for a room or fare for a flight.",
      "properties": {
        "value": {
          "type": "number",
          "format": "float"
        },
        "amountBeforeTax": {
          "description": "The price before taxes are applied.",
          "type": "number",
          "format": "float"
        },
        "currencyCode": {
          "description": "Assigned Type: ota2-0500:CurrencyCode_ISO4217",
          "type": "string",
          "pattern": "[a-zA-Z]{3}"
        }
      }
    },
    "Privacy": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Privacy"
      },
      "description": "Allows for control of the sharing of data between parties.",
      "properties": {
        "shareMarketInd": {
          "description": "Permission for sharing data for marketing purposes.",
          "$ref": "#/definitions/YesNoInherit_Enum"
        },
        "shareSyncInd": {
          "description": "Permission for sharing data for synchronization of information held by other travel service providers.",
          "$ref": "#/definitions/YesNoInherit_Enum"
        },
        "optInStatus": {
          "description": "If present and set to opt out, a customer has explicitly opted out of marketing communication. When set to opt out it overrides the ShareMarketInd.",
          "$ref": "#/definitions/OptInStatus_Enum"
        },
        "optInDate": {
          "description": "The date and time of opt in.",
          "type": "string",
          "format": "date-time"
        },
        "optOutDate": {
          "description": "The date and time of opt out.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PropertyBrand": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "PropertyBrand"
      },
      "description": "Brand Code",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 128
        },
        "brandName": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": "My Brand"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        }
      }
    },
    "PropertyChain": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "PropertyChain"
      },
      "description": "Hotel Chain Code",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 128
        },
        "chainName": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": "My Chain"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        }
      }
    },
    "PropertyCode": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "PropertyCode"
      },
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 128
        },
        "hotelName": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": "My Hotel Name"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        }
      }
    },
    "ReservationId": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "ReservationId"
      },
      "description": "Contains the reservation (resId) or cancellation number for the reservation.",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 128
        },
        "type": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "source": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "sourceContext": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        }
      }
    },
    "StateProv": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "StateProv"
      },
      "description": "The standard code or abbreviation for the state, province, or region.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StateProvCodeType"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 8,
          "minLength": 2
        },
        "name": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength0to64"
              ]
            },
            "examples": [
              {
                "context": "Common",
                "value": "Texas"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        }
      }
    },
    "StateProvName": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "StateProvName"
      },
      "description": "State, province, or region name or code needed to identify location.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength0to64"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 512
        },
        "stateCode": {
          "description": "Assigned Type: ota2-0500:StateProvCode",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StateProvCodeType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "StateCode"
              }
            ]
          },
          "type": "string",
          "maxLength": 8,
          "minLength": 2
        }
      }
    },
    "Telephone": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Telephone"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "countryAccessCode": {
          "description": "Assigned Type: ota2-0500:TelephoneCountryAccessCode",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}NumericStringLength1to3"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CountryAccessCode"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "01"
              }
            ]
          },
          "type": "string",
          "pattern": "[0-9]{1,3}"
        },
        "areaCityCode": {
          "description": "Assigned Type: ota2-0500:TelephoneAreaCityCode",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}NumericStringLength1to8"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "AreaCityCode"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "202"
              }
            ]
          },
          "type": "string",
          "pattern": "[0-9]{1,8}"
        },
        "phoneNumber": {
          "description": "Assigned Type: ota2-0500:TelephoneNumber",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "PhoneNumber"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "5555555"
              }
            ]
          },
          "type": "string",
          "pattern": "[0-9]{7,20}"
        },
        "extension": {
          "description": "Assigned Type: ota2-0500:TelephoneExtension",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}NumericStringLength1to5"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Extension"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "237"
              }
            ]
          },
          "type": "string",
          "pattern": "[0-9]{1,5}"
        },
        "id": {
          "description": "Used elsewhere in the message to reference a specific telephone number (including faxes).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}RPH_Type"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "RPH"
              }
            ]
          },
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/Enum_TelephoneRole"
        },
        "ExtensionPoint_Summary": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "phoneNumber"
      ],
      "discriminator": "@type"
    },
    "TelephoneDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Telephone"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Telephone"
        },
        {
          "properties": {
            "pIN": {
              "description": "Assigned Type: ota2-0500:StringTiny",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to8"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "PIN"
                  }
                ],
                "examples": [
                  {
                    "context": "Common",
                    "value": "1234"
                  }
                ]
              },
              "type": "string",
              "maxLength": 32
            },
            "remark": {
              "description": "Assigned Type: ota2-0500:StringText",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to128"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Remark"
                  }
                ],
                "examples": [
                  {
                    "context": "Common",
                    "value": "Don\u0027t call after 10:00PM"
                  }
                ]
              },
              "type": "string",
              "maxLength": 4096
            },
            "Privacy": {
              "description": "Assigned Type: ota2-0500:Privacy",
              "$ref": "#/definitions/Privacy"
            },
            "PhoneLocationType": {
              "description": "Assigned Type: ota2-0400:PhoneLocation_Enum",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "PhoneLocationType"
                  }
                ]
              },
              "$ref": "CodeList_4_0_0.schema.json#/definitions/PhoneLocation_Enum"
            },
            "PhoneTechType": {
              "description": "Assigned Type: ota2-0400:PhoneTechType_Enum",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "PhoneTechType"
                  }
                ]
              },
              "$ref": "CodeList_4_0_0.schema.json#/definitions/PhoneTechType_Enum"
            },
            "PhoneUseType": {
              "description": "Assigned Type: ota2-0400:PhoneUseType_Enum",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "PhoneUseType"
                  }
                ]
              },
              "$ref": "CodeList_4_0_0.schema.json#/definitions/PhoneUseType_Enum"
            },
            "defaultInd": {
              "description": "When true, indicates a default value should be used.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}boolean"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "DefaultInd"
                  }
                ]
              },
              "type": "boolean"
            },
            "ExtensionPoint_Detail": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "Enum_TelephoneRole": {
      "properties": {
        "value": {
          "$ref": "#/definitions/Enum_TelephoneRole_Open"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "Enum_TelephoneRole_Base": {
      "type": "string",
      "enum": [
        "Home",
        "Office",
        "Mobile",
        "Other"
      ]
    },
    "Enum_TelephoneRole_Open": {
      "type": "string",
      "enum": [
        "Home",
        "Office",
        "Mobile",
        "Other",
        "Other_"
      ]
    },
    "TextFree": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "TextFree"
      },
      "description": "Textual information to provide descriptions and\\/or additional information.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 4096
        },
        "language": {
          "description": "Language of the text.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: LanguageGroup"
              ]
            },
            "examples": [
              {
                "context": "Common",
                "value": "en"
              }
            ]
          },
          "type": "string"
        }
      }
    },
    "Text": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Text"
      },
      "description": "Provides text and indicates whether it is formatted or not.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 4096
        },
        "language": {
          "description": "The language in which the text is provided.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: LanguageGroup"
              ]
            },
            "examples": [
              {
                "context": "Common",
                "value": "en"
              }
            ]
          },
          "type": "string"
        },
        "textFormat": {
          "description": "Indicates the format of text used in the description e.g. unformatted  or html.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: FormattedTextTextType_TextFormat"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "TextFormat"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "Sample Formatted text"
              }
            ]
          },
          "$ref": "#/definitions/TextFormatType"
        }
      }
    },
    "TextParagraph": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "TextParagraph"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "name": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Name"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "paragraph name"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "number": {
          "description": "The sequence number for the paragraph.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Changed type from {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}nonNegativeInteger.",
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ParagraphNumber"
              }
            ]
          },
          "type": "integer",
          "format": "int32"
        },
        "Text": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Text"
          },
          "maxItems": 1000
        },
        "Image": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageID"
          },
          "maxItems": 1000
        },
        "URL": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 1000
        },
        "ParagraphListItem": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParagraphListItem"
          },
          "maxItems": 1000
        },
        "DateTimeStamp": {
          "description": "Assigned Type: ota2-0500:DateTimeStamp",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: DateTimeStampGroup"
              ]
            }
          },
          "$ref": "#/definitions/DateTimeStamp"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Comment": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "TextParagraph"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "name": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Name"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "paragraph name"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "number": {
          "description": "The sequence number for the paragraph.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Changed type from {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}nonNegativeInteger.",
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ParagraphNumber"
              }
            ]
          },
          "type": "integer",
          "format": "int32"
        },
        "Text": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Text"
          },
          "maxItems": 1000
        },
        "Image": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageID"
          },
          "maxItems": 1000
        },
        "URL": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 1000
        },
        "ParagraphListItem": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParagraphListItem"
          },
          "maxItems": 1000
        },
        "DateTimeStamp": {
          "description": "Assigned Type: ota2-0500:DateTimeStamp",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: DateTimeStampGroup"
              ]
            }
          },
          "$ref": "#/definitions/DateTimeStamp"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Description": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "TextParagraph"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "name": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Name"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "paragraph name"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "number": {
          "description": "The sequence number for the paragraph.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Changed type from {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}nonNegativeInteger.",
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ParagraphNumber"
              }
            ]
          },
          "type": "integer",
          "format": "int32"
        },
        "Text": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Text"
          },
          "maxItems": 1000
        },
        "Image": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageID"
          },
          "maxItems": 1000
        },
        "URL": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 1000
        },
        "ParagraphListItem": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParagraphListItem"
          },
          "maxItems": 1000
        },
        "DateTimeStamp": {
          "description": "Assigned Type: ota2-0500:DateTimeStamp",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: DateTimeStampGroup"
              ]
            }
          },
          "$ref": "#/definitions/DateTimeStamp"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Restriction": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "TextParagraph"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "name": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Name"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "paragraph name"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "number": {
          "description": "The sequence number for the paragraph.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Changed type from {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}nonNegativeInteger.",
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ParagraphNumber"
              }
            ]
          },
          "type": "integer",
          "format": "int32"
        },
        "Text": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Text"
          },
          "maxItems": 1000
        },
        "Image": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageID"
          },
          "maxItems": 1000
        },
        "URL": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 1000
        },
        "ParagraphListItem": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParagraphListItem"
          },
          "maxItems": 1000
        },
        "DateTimeStamp": {
          "description": "Assigned Type: ota2-0500:DateTimeStamp",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: DateTimeStampGroup"
              ]
            }
          },
          "$ref": "#/definitions/DateTimeStamp"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "TimeSpan": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "TimeSpan"
      },
      "description": "Specifies the arrival date and departure date which covers the whole Reservation.",
      "properties": {
        "start": {
          "description": "Assigned Type: ota2-0500:DateTime",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": "2016-08-22T19:32:52Z"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        },
        "end": {
          "description": "Assigned Type: ota2-0500:DateTime",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": "2016-08-28T04:32:52Z"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "start",
        "end"
      ]
    },
    "URL": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "URL"
      },
      "description": "Web site address, in IETF specified format.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}anyURI"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string"
        },
        "type": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Type"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "defaultInd": {
          "description": "Indicates whether or not this is the default URL.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: DefaultIndGroup"
              ]
            }
          },
          "type": "boolean"
        }
      }
    },
    "UsernamePassword": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "UsernamePassword"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "password": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Password"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "username": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Username"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "PasswordHint": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PasswordHint"
          },
          "maxItems": 10
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "password",
        "username"
      ],
      "discriminator": "@type"
    },
    "ParagraphListItem": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "ParagraphListItem"
      },
      "properties": {
        "listItem": {
          "description": "The item or sequence number.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}integer"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ListItem"
              }
            ]
          },
          "type": "integer",
          "format": "int32"
        },
        "text2": {
          "description": "Assigned Type: ota2-0500:Text",
          "type": "string",
          "maxLength": 4096
        },
        "language": {
          "description": "The language in which the text is provided.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: LanguageGroup"
              ]
            },
            "examples": [
              {
                "context": "Common",
                "value": "en"
              }
            ]
          },
          "type": "string"
        },
        "textFormat": {
          "description": "Indicates the format of text used in the description e.g. unformatted  or html.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: FormattedTextTextType_TextFormat"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "TextFormat"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "Sample Formatted text"
              }
            ]
          },
          "$ref": "#/definitions/TextFormatType"
        }
      }
    },
    "SocialMedia": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "SocialMedia"
      },
      "description": "Specifies social media information used for communication with the traveler.",
      "properties": {
        "type": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Type"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "userName": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "UserName"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "preferredContactInd": {
          "description": "When true, this social media type is the preferred method for social media communication.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}boolean"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "PreferredContactInd"
              }
            ]
          },
          "type": "boolean"
        }
      },
      "required": [
        "type",
        "userName"
      ]
    },
    "DateTimeSpanWindows": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "DateTimeSpanWindows"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "TimeSpan": {
          "description": "Assigned Type: ota2-0500:TimeSpan",
          "$ref": "#/definitions/TimeSpan"
        },
        "ExtensionPoint_Summary": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "StayRestrictions": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "DateTimeSpanWindows"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "TimeSpan": {
          "description": "Assigned Type: ota2-0500:TimeSpan",
          "$ref": "#/definitions/TimeSpan"
        },
        "ExtensionPoint_Summary": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "DateTimeSpanWindowsDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "DateTimeSpanWindows"
      },
      "allOf": [
        {
          "$ref": "#/definitions/DateTimeSpanWindows"
        },
        {
          "properties": {
            "StartWindow": {
              "description": "Assigned Type: ota2-0500:TimeSpan",
              "$ref": "#/definitions/TimeSpan"
            },
            "EndWindow": {
              "description": "Assigned Type: ota2-0500:TimeSpan",
              "$ref": "#/definitions/TimeSpan"
            },
            "Duration": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 100
            },
            "DurationUnit": {
              "description": "Assigned Type: ota2-0400:DurationUnit_Enum",
              "$ref": "CodeList_4_0_0.schema.json#/definitions/DurationUnit_Enum"
            },
            "ExtensionPoint_Detail": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "StayRestrictionsDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "DateTimeSpanWindows"
      },
      "allOf": [
        {
          "$ref": "#/definitions/StayRestrictions"
        },
        {
          "properties": {
            "StartWindow": {
              "description": "Assigned Type: ota2-0500:TimeSpan",
              "$ref": "#/definitions/TimeSpan"
            },
            "EndWindow": {
              "description": "Assigned Type: ota2-0500:TimeSpan",
              "$ref": "#/definitions/TimeSpan"
            },
            "Duration": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 100
            },
            "DurationUnit": {
              "description": "Assigned Type: ota2-0400:DurationUnit_Enum",
              "$ref": "CodeList_4_0_0.schema.json#/definitions/DurationUnit_Enum"
            },
            "ExtensionPoint_Detail": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "Code": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Code"
      },
      "description": "Any code used to specify an item, for example, type of traveler, service code, room amenity, etc.  May be used to reference the OpenTravel RMA Codelist.",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 32
        },
        "codeContext": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "description": {
          "description": "Assigned Type: ota2-0500:String",
          "type": "string",
          "maxLength": 512
        },
        "quantity": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "listURI": {
          "description": "Assigned Type: ota2-0500:String",
          "type": "string",
          "maxLength": 512
        }
      }
    },
    "PersonDocument": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "PersonDocument"
      },
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
          ]
        }
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "DocType": {
          "description": "Assigned Type: ota2-0400:DocumentType_Enum",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "DocType"
              }
            ]
          },
          "$ref": "CodeList_4_0_0.schema.json#/definitions/DocumentType_Enum"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "ErrorCodes_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "ErrorCodes_Enum"
      },
      "description": "The ErrorCode  MUST be present and is defined as free-text with a list of recommended enumerated values, to indicate the error type.",
      "properties": {
        "value": {
          "$ref": "#/definitions/ErrorCodes_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "ErrorCodes_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "ErrorCodes_Enum"
      },
      "description": "The ErrorCode  MUST be present and is defined as free-text with a list of recommended enumerated values, to indicate the error type.",
      "type": "string",
      "enum": [
        "SessionFailure-100",
        "SessionFailure-101",
        "SessionFailure-102",
        "SessionFailure-103",
        "Unknown",
        "Malformed",
        "Validation",
        "UnrecognizedRoot",
        "UnrecognizedVersion",
        "Other_"
      ]
    },
    "ErrorMessage_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "ErrorMessage_Enum"
      },
      "description": "A textual description to provide more information about the specific error.",
      "properties": {
        "value": {
          "$ref": "#/definitions/ErrorMessage_Enum_Base"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "ErrorMessage_Enum_Base": {
      "x-otm-entity": {
        "EntityType": "EnumerationOpen",
        "EntityName": "ErrorMessage_Enum"
      },
      "description": "A textual description to provide more information about the specific error.",
      "type": "string",
      "enum": [
        "OTA version not supported",
        "Session has expired",
        "Session already closed",
        "Parameter not supported",
        "Other_"
      ]
    },
    "ErrorReport": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "ErrorReport"
      },
      "properties": {
        "status": {
          "description": "[LegacyDefaultValue: null]",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: OTA_ErrorRS_Status"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Status"
              }
            ]
          },
          "$ref": "#/definitions/ErrorStatus_Enum"
        },
        "errorCode": {
          "$ref": "#/definitions/ErrorCodes_Enum_Base"
        },
        "errorCodeExtension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        },
        "severity": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.opentravel.org\\/OTA\\/2003\\/05}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Severity"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "errorMessage": {
          "$ref": "#/definitions/ErrorCodes_Enum_Base"
        },
        "errorMessageExtension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        },
        "docURL": {
          "description": "If present, this attribute refers to an online description of the error that occurred.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}anyURI"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "DocURL"
              }
            ]
          },
          "type": "string"
        },
        "echoToken": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to128"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "EchoToken"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "timeStamp": {
          "description": "YYYY-MM-DDThh:mm:ssZ with time values using the 24 hour clock:\\n20 November 2003, 1:59:38 pm UTC becomes 2003-11-20T13:59:38Z",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}dateTime"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "TimeStamp"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        },
        "target": {
          "description": "Test or Production target system indicator.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: OTA_PayloadStdAttributes_Target"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Target"
              }
            ]
          },
          "$ref": "#/definitions/TargetEnvironment_Enum"
        },
        "targetName": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "TargetName"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "version": {
          "description": "The OpenTravel message version indicated by a decimal value.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}decimal"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Version"
              }
            ]
          },
          "type": "number",
          "format": "float"
        },
        "transactionIdentifier": {
          "description": "Unique identifier to relate all messages within a transaction (e.g. this would be sent in all request and response messages that are part of an on-going transaction).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "TransactionIdentifier"
              }
            ]
          },
          "type": "string"
        },
        "sequenceNmbr": {
          "description": "Implementer: Message resynchronization typically is required if a system has been off-line and needs to retrieve messages that were missed.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Changed type from {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}nonNegativeInteger.",
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "SequenceNmbr"
              }
            ]
          },
          "type": "string"
        },
        "transactionStatusCode": {
          "description": "This indicates where this message falls within a sequence of messages.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: OTA_PayloadStdAttributes_TransactionStatusCode"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "TransactionStatusCode"
              }
            ]
          },
          "$ref": "#/definitions/TransactionStatusCode_Enum"
        },
        "correlationID": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CorrelationID"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "primaryLangID": {
          "description": "ISO 639 (3) character language codes: http:\\/\\/en.wikipedia.org\\/wiki\\/Lists_of_ISO_639_codes",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}language"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "PrimaryLangID"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "en"
              }
            ]
          },
          "type": "string"
        },
        "altLangID": {
          "description": "ISO 639 (3) character language codes: http:\\/\\/en.wikipedia.org\\/wiki\\/Lists_of_ISO_639_codes",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}language"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "AltLangID"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "es"
              }
            ]
          },
          "type": "string"
        },
        "retransmissionIndicatorInd": {
          "description": "Implementer: It is recommended that this attribute is used (i.e., set to TRUE) only when a message is retransmitted.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}boolean"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "RetransmissionIndicator"
              }
            ]
          },
          "type": "boolean"
        }
      },
      "required": [
        "errorCode",
        "version"
      ]
    },
    "PayloadStdAttributes": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "PayloadStdAttributes"
      },
      "description": "The standard attributes that appear on the root element for all OpenTravel messages.",
      "properties": {
        "echoToken": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to128"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "EchoToken"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "timeStamp": {
          "description": "YYYY-MM-DDThh:mm:ssZ with time values using the 24 hour clock:\\n20 November 2003, 1:59:38 pm UTC becomes 2003-11-20T13:59:38Z",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}dateTime"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "TimeStamp"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        },
        "target": {
          "description": "Test or Production target system indicator.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: OTA_PayloadStdAttributes_Target"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Target"
              }
            ]
          },
          "$ref": "#/definitions/TargetEnvironment_Enum"
        },
        "targetName": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "TargetName"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "version": {
          "description": "The OpenTravel message version indicated by a decimal value.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}decimal"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Version"
              }
            ]
          },
          "type": "number",
          "format": "float"
        },
        "transactionIdentifier": {
          "description": "Unique identifier to relate all messages within a transaction (e.g. this would be sent in all request and response messages that are part of an on-going transaction).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "TransactionIdentifier"
              }
            ]
          },
          "type": "string"
        },
        "sequenceNmbr": {
          "description": "Implementer: Message resynchronization typically is required if a system has been off-line and needs to retrieve messages that were missed.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Changed type from {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}nonNegativeInteger.",
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "SequenceNmbr"
              }
            ]
          },
          "type": "string"
        },
        "transactionStatusCode": {
          "description": "This indicates where this message falls within a sequence of messages.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: OTA_PayloadStdAttributes_TransactionStatusCode"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "TransactionStatusCode"
              }
            ]
          },
          "$ref": "#/definitions/TransactionStatusCode_Enum"
        },
        "correlationID": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CorrelationID"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "primaryLangID": {
          "description": "ISO 639 (3) character language codes: http:\\/\\/en.wikipedia.org\\/wiki\\/Lists_of_ISO_639_codes",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}language"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "PrimaryLangID"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "en"
              }
            ]
          },
          "type": "string"
        },
        "altLangID": {
          "description": "ISO 639 (3) character language codes: http:\\/\\/en.wikipedia.org\\/wiki\\/Lists_of_ISO_639_codes",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}language"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "AltLangID"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "es"
              }
            ]
          },
          "type": "string"
        },
        "retransmissionIndicatorInd": {
          "description": "Implementer: It is recommended that this attribute is used (i.e., set to TRUE) only when a message is retransmitted.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}boolean"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "RetransmissionIndicator"
              }
            ]
          },
          "type": "boolean"
        }
      },
      "required": [
        "version"
      ]
    },
    "TargetEnvironment_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "TargetEnvironment_Enum"
      },
      "type": "string",
      "enum": [
        "Test",
        "Production"
      ]
    },
    "ErrorStatus_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "ErrorStatus_Enum"
      },
      "type": "string",
      "enum": [
        "NotProcessed",
        "Incomplete",
        "Complete",
        "Unknown"
      ]
    },
    "TransactionStatusCode_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "TransactionStatusCode_Enum"
      },
      "type": "string",
      "enum": [
        "Start",
        "End",
        "Rollback",
        "InSeries",
        "Continuation",
        "Subsequent"
      ]
    },
    "ErrorWarning": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "ErrorWarning"
      },
      "description": "The error in textual format.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to64"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 512
        },
        "language": {
          "description": "Assigned Type: ota2-0500:LanguageCode",
          "type": "string"
        },
        "type": {
          "$ref": "CodeList_4_0_0.schema.json#/definitions/ErrorWarningType_Enum_Base"
        },
        "typeExtension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        },
        "shortText": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "code": {
          "description": "Assigned Type: ota2-0500:OTA_Code",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}OTA_CodeType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Code"
              }
            ]
          },
          "type": "string",
          "pattern": "[0-9A-Z]{1,4}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}anyURI"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "DocURL"
              }
            ]
          },
          "type": "string"
        },
        "tag": {
          "description": "Assigned Type: ota2-0500:String",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Tag"
              }
            ]
          },
          "type": "string",
          "maxLength": 512
        },
        "recordID": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "RecordID"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "nodeList": {
          "description": "Assigned Type: ota2-0500:String",
          "type": "string",
          "maxLength": 512
        },
        "status": {
          "$ref": "CodeList_4_0_0.schema.json#/definitions/Status_Enum_Base"
        },
        "statusExtension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "POS": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "POS"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Source": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Source"
          },
          "maxItems": 10,
          "minItems": 1
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "Source"
      ],
      "discriminator": "@type"
    },
    "Geolocation": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Geolocation"
      },
      "description": "Used to specify the geographic coordinates of a location.",
      "properties": {
        "latitude": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to16"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Latitude"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "longitude": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to16"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Longitude"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "altitude": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to16"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Altitude"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "altitudeUnitOfMeasure_Enum": {
          "description": "Provides the unit of measure for the altitude (e.g., feet, meters, miles, kilometers). Refer to OpenTravel Code List Unit of Measure Code (UOM).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}OTA_CodeType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "AltitudeUnitOfMeasureCode"
              }
            ]
          },
          "$ref": "CodeList_4_0_0.schema.json#/definitions/UnitOfMeasure_Enum"
        },
        "mapURL": {
          "description": "The URL of a map image.",
          "type": "string"
        },
        "formatURL": {
          "description": "The URL to the format for the latitude and longitude for this location.",
          "type": "string"
        }
      }
    },
    "RequestorID": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "RequestorID"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: ota2-0500:Identifier",
          "$ref": "#/definitions/Identifier"
        },
        "ExtensionPoint_Summary": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "RequestorIDDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "RequestorID"
      },
      "allOf": [
        {
          "$ref": "#/definitions/RequestorID"
        },
        {
          "properties": {
            "messagePassword": {
              "description": "Assigned Type: ota2-0500:StringTiny",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "MessagePassword"
                  }
                ]
              },
              "type": "string",
              "maxLength": 32
            },
            "personName": {
              "description": "Assigned Type: ota2-0500:PersonName",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Name"
                  }
                ]
              },
              "type": "string",
              "maxLength": 512
            },
            "ExtensionPoint_Detail": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "Source": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Source"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "agentSine": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "AgentSine"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "pseudoCityCode": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "PseudoCityCode"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "iSOCountry": {
          "description": "Assigned Type: ota2-0500:CountryCode_ISO3166",
          "x-otm-annotations": {
            "documentation": {
              "references": [
                "http:\\/\\/simple.wikipedia.org\\/wiki\\/ISO_3166-1_alpha-3"
              ],
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}ISO3166"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ISOCountry"
              }
            ]
          },
          "type": "string",
          "pattern": "[a-zA-Z]{2}"
        },
        "iSOCurrency": {
          "description": "Assigned Type: ota2-0500:CurrencyCode_ISO4217",
          "x-otm-annotations": {
            "documentation": {
              "references": [
                "http:\\/\\/www.iso.org\\/iso\\/support\\/currency_codes_list-1.htm"
              ],
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}AlphaLength3"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ISOCurrency"
              }
            ]
          },
          "type": "string",
          "pattern": "[a-zA-Z]{3}"
        },
        "agentDutyCode": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "AgentDutyCode"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "airlineVendorID": {
          "description": "Assigned Type: ota2-0500:AirlineCode_IATA",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}UpperCaseAlphaNumericLength2to3"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "AirlineVendorID"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "B6"
              }
            ]
          },
          "type": "string",
          "pattern": "([a-zA-Z0-9]{2})?"
        },
        "airportCode": {
          "description": "Assigned Type: ota2-0500:AirportCode_IATA",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}UpperCaseAlphaNumericLength3to5"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "AirportCode"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "IAD"
              }
            ]
          },
          "type": "string",
          "pattern": "([A-Z]{3})?"
        },
        "firstDepartPoint": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength3"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "FirstDepartPoint"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "eRSP_UserID": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ERSP_UserID"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "terminalID": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "TerminalID"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "RequestorID": {
          "description": "Assigned Type: ota2-0500:RequestorID",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}RequestorID"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "RequestorID"
              }
            ]
          },
          "$ref": "#/definitions/RequestorID"
        },
        "Position": {
          "description": "Assigned Type: ota2-0500:Geolocation",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Position"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Position"
              }
            ]
          },
          "$ref": "#/definitions/Geolocation"
        },
        "BookingChannel": {
          "description": "Assigned Type: ota2-0500:BookingChannel",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}BookingChannel"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "BookingChannel"
              }
            ]
          },
          "$ref": "#/definitions/BookingChannel"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "BookingChannel": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "BookingChannel"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "CompanyName": {
          "description": "Assigned Type: ota2-0500:CompanyName",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}CompanyNameType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CompanyName"
              }
            ]
          },
          "$ref": "#/definitions/CompanyName"
        },
        "Type": {
          "description": "Assigned Type: ota2-0400:BookingChannel_Enum",
          "$ref": "CodeList_4_0_0.schema.json#/definitions/BookingChannel_Enum"
        },
        "primaryInd": {
          "description": "Indicates whether the enumerated booking channel is the primary means of connectivity used by the source.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Result": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Result"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorWarning"
          },
          "maxItems": 50
        },
        "Warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorWarning"
          },
          "maxItems": 50
        },
        "Status": {
          "description": "Assigned Type: ota2-0400:Status_Enum",
          "$ref": "CodeList_4_0_0.schema.json#/definitions/Status_Enum"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Comments": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Comments"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "TextualComment": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 4096
          },
          "maxItems": 100
        },
        "ExtensionPoint_Summary": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "CommentsDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Comments"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Comments"
        },
        {
          "properties": {
            "name": {
              "description": "Assigned Type: ota2-0500:StringShort",
              "type": "string",
              "maxLength": 128
            },
            "language": {
              "description": "Assigned Type: ota2-0500:LanguageCode",
              "type": "string"
            },
            "ExtensionPoint_Detail": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "CompanyID": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Company"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "objID": {
          "description": "A unique identifier within this document for this object.",
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: ota2-0500:Identifier",
          "$ref": "#/definitions/Identifier"
        },
        "CompanyRef": {
          "description": "Refers to the obj ID on an object defined elsewhere in the current document.",
          "type": "string"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Company": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Company"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CompanyID"
        },
        {
          "properties": {
            "Name": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CompanyName"
              },
              "maxItems": 20,
              "minItems": 1
            },
            "Address": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Address"
              },
              "maxItems": 100
            },
            "Telephone": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Telephone"
              },
              "maxItems": 100
            },
            "Email": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Email"
              },
              "maxItems": 100
            },
            "URL": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/URL"
              },
              "maxItems": 100
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          },
          "required": [
            "Name"
          ]
        }
      ]
    },
    "PersonID": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Person"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "objID": {
          "description": "A unique identifier within this document for this object.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}RPH_Type"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "RPH"
              }
            ]
          },
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: ota2-0500:Identifier",
          "$ref": "#/definitions/Identifier"
        },
        "OtherID": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "maxItems": 5
        },
        "PersonRef": {
          "description": "Refers to the obj ID on an object defined elsewhere in the current document.",
          "type": "string"
        }
      },
      "required": [
        "@type",
        "Identifier"
      ],
      "discriminator": "@type"
    },
    "Person": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Person"
      },
      "allOf": [
        {
          "$ref": "#/definitions/PersonID"
        },
        {
          "properties": {
            "gender": {
              "description": "The gender of the person.",
              "$ref": "CodeList_4_0_0.schema.json#/definitions/Gender_Enum"
            },
            "maritalStatus_Enum": {
              "description": "Specifies the marital status of the person.",
              "$ref": "CodeList_4_0_0.schema.json#/definitions/MaritalStatus_Enum"
            },
            "birthDate": {
              "description": "The birth date of the person.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "AttributeGroup: BirthDateGroup"
                  ]
                }
              },
              "type": "string",
              "format": "date"
            },
            "PersonName": {
              "description": "Assigned Type: ota2-0500:PersonName",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}PersonNameType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "PersonName"
                  }
                ]
              },
              "$ref": "#/definitions/PersonName"
            },
            "Address": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Address"
              },
              "maxItems": 5
            },
            "Telephone": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Telephone"
              },
              "maxItems": 10
            },
            "Email": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Email"
              },
              "maxItems": 5
            },
            "Privacy": {
              "description": "Assigned Type: ota2-0500:Privacy",
              "$ref": "#/definitions/Privacy"
            },
            "Comments": {
              "description": "Assigned Type: ota2-0500:TextFree",
              "$ref": "#/definitions/TextFree"
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          },
          "required": [
            "PersonName"
          ]
        }
      ]
    },
    "Address": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Address"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "AddressLine": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 128
          },
          "maxItems": 4
        },
        "BldgRoom": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddressBldgRoom"
          },
          "maxItems": 2
        },
        "Number": {
          "description": "Assigned Type: ota2-0500:AddressStreetNumber",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StreetNmbr"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "StreetNmbr"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "111"
              }
            ]
          },
          "$ref": "#/definitions/AddressStreetNumber"
        },
        "Street": {
          "description": "May contain the street number when the Street number element is missing.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to255"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "AddressLine"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "Travers Street"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "City": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CityName"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "Dublin"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "County": {
          "description": "County or Region Name (e.g., Fairfax).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "County"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "Fairfax"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "StateProv": {
          "description": "Assigned Type: ota2-0500:StateProv",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StateProvType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "StateProv"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "Texas"
              }
            ]
          },
          "$ref": "#/definitions/StateProv"
        },
        "Country": {
          "description": "Assigned Type: ota2-0500:Country",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}CountryNameType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CountryName"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "IE"
              }
            ]
          },
          "$ref": "#/definitions/Country"
        },
        "PostalCode": {
          "description": "Post Office Code number.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "PostalCode"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "32165-9999"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "role": {
          "$ref": "#/definitions/Enum_AddressRole"
        },
        "ExtensionPoint_Summary": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "AddressDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Address"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Address"
        },
        {
          "properties": {
            "language": {
              "description": "Example: en",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}language"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Language"
                  }
                ],
                "examples": [
                  {
                    "context": "Common",
                    "value": "en"
                  }
                ]
              },
              "type": "string"
            },
            "Remark": {
              "description": "A remark associated with this address.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to128"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Remark"
                  }
                ],
                "examples": [
                  {
                    "context": "Common",
                    "value": "This address should be used for all official correspondences."
                  }
                ]
              },
              "type": "string",
              "maxLength": 4096
            },
            "Privacy": {
              "description": "Assigned Type: ota2-0500:Privacy",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "AttributeGroup: PrivacyGroup"
                  ]
                }
              },
              "$ref": "#/definitions/Privacy"
            },
            "Type": {
              "description": "Assigned Type: ota2-0400:CommunicationLocation_Enum",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Type"
                  }
                ],
                "examples": [
                  {
                    "context": "Common",
                    "value": "CLT"
                  }
                ]
              },
              "$ref": "CodeList_4_0_0.schema.json#/definitions/CommunicationLocation_Enum"
            },
            "Use": {
              "description": "Assigned Type: ota2-0400:AddressUse_Enum",
              "x-otm-annotations": {
                "examples": [
                  {
                    "context": "Common",
                    "value": "AUT"
                  }
                ]
              },
              "$ref": "CodeList_4_0_0.schema.json#/definitions/AddressUse_Enum"
            },
            "validInd": {
              "description": "If true, this is a valid and complete mailing address that has been verified through an address verification service or previously mailed materials have not been returned.",
              "type": "boolean"
            },
            "ExtensionPoint_Detail": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "Enum_AddressRole": {
      "properties": {
        "value": {
          "$ref": "#/definitions/Enum_AddressRole_Open"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "Enum_AddressRole_Base": {
      "type": "string",
      "enum": [
        "Home",
        "Business",
        "Destination",
        "Other"
      ]
    },
    "Enum_AddressRole_Open": {
      "type": "string",
      "enum": [
        "Home",
        "Business",
        "Destination",
        "Other",
        "Other_"
      ]
    },
    "CodeExternal": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "CodeExternal"
      },
      "description": "Code with additional information describing the code authority.",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 128
        },
        "description": {
          "description": "Description of who manages this set of codes.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Description"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "Visa"
              }
            ]
          },
          "type": "string"
        },
        "name": {
          "description": "This may be a source authority\\/ owner name, ID or code.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "SourceName"
              }
            ]
          },
          "type": "string"
        },
        "uRL": {
          "description": "Implementer: This is A URL to the code source authority\\/ owner.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}anyURI"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "SourceURL"
              }
            ]
          },
          "type": "string"
        },
        "id": {
          "description": "Implementer: This is used for a database or key ID for the code item (if it is different from the @CodeExtension) in relationship to the obsolete code indicator.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "UniqueID"
              }
            ]
          },
          "type": "string"
        }
      }
    },
    "Employee": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Employee"
      },
      "description": "Employment identification; using an employee ID number, title, level within the company, and an indication of their status (e.g., active, retired, on leave, or terminated from employment).  Additional information about an employee can be entered into the element, including the name of the employee, if it differs from the person name identified as a customer or contact.",
      "properties": {
        "id": {
          "description": "Identifier assigned to the employee.",
          "type": "string"
        },
        "level": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "title": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "status": {
          "description": "Status of employment.",
          "$ref": "CodeList_4_0_0.schema.json#/definitions/EmployeeStatus_Enum"
        },
        "description": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "employer": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "type": "string",
          "maxLength": 32
        }
      }
    },
    "ContactPerson": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "ContactPerson"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "contactType": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            }
          },
          "type": "string",
          "maxLength": 128
        },
        "relation": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            }
          },
          "type": "string",
          "maxLength": 128
        },
        "Person": {
          "description": "Assigned Type: ota2-0500:Person",
          "$ref": "#/definitions/PersonID"
        },
        "CommunicationMethodCode": {
          "description": "Assigned Type: ota2-0400:DistributionType_Enum",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            }
          },
          "$ref": "CodeList_4_0_0.schema.json#/definitions/DistributionType_Enum"
        },
        "DocumentDistribMethodCode": {
          "description": "Assigned Type: ota2-0400:DistributionType_Enum",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            }
          },
          "$ref": "CodeList_4_0_0.schema.json#/definitions/DistributionType_Enum"
        },
        "CompanyName": {
          "description": "Assigned Type: ota2-0500:CompanyName",
          "$ref": "#/definitions/CompanyName"
        },
        "Location": {
          "description": "Assigned Type: ota2-0400:LocationCategory_Enum",
          "$ref": "CodeList_4_0_0.schema.json#/definitions/LocationCategory_Enum"
        },
        "emergencyFlagInd": {
          "description": "[LegacyDefaultValue: null]",
          "type": "boolean"
        },
        "defaultInd": {
          "description": "Indicates that the receiving system should assume the default value if the user specifies no overriding value or action.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: DefaultIndGroup"
              ]
            }
          },
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Distance": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Distance"
      },
      "description": "Used to provide distance and direction information.",
      "properties": {
        "value": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "distanceMeasure": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to16"
              ]
            }
          },
          "type": "string",
          "maxLength": 32
        },
        "direction": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to8"
              ]
            }
          },
          "type": "string",
          "maxLength": 32
        },
        "distanceMax": {
          "description": "An optional attribute indicating the maximum distance to\\/from a reference point.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}NumericStringLength1to16"
              ]
            }
          },
          "type": "integer",
          "format": "int32"
        },
        "unitOfMeasureCode": {
          "description": "The unit of measure in a code format. Refer to OpenTravel Code List Unit of Measure Code (UOM).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}OTA_CodeType"
              ]
            }
          },
          "$ref": "CodeList_4_0_0.schema.json#/definitions/UnitOfMeasure_Enum"
        }
      }
    },
    "Location": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Location"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Address": {
          "description": "Assigned Type: ota2-0500:Address",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}AddressInfoType"
              ]
            }
          },
          "$ref": "#/definitions/Address"
        },
        "Position": {
          "description": "Assigned Type: ota2-0500:Geolocation",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Position"
              ]
            }
          },
          "$ref": "#/definitions/Geolocation"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "Address"
      ],
      "discriminator": "@type"
    },
    "Proximity": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Proximity"
      },
      "description": "Reference point information for a proximity search.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength0to64"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 128
        },
        "postalCode": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "cityName": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to64"
              ]
            }
          },
          "type": "string",
          "maxLength": 128
        },
        "stateProv": {
          "description": "Assigned Type: ota2-0500:StateProvCode",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StateProvCodeType"
              ]
            }
          },
          "type": "string",
          "maxLength": 8,
          "minLength": 2
        },
        "countryCode": {
          "description": "Assigned Type: ota2-0500:CountryCode_ISO3166",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}ISO3166"
              ]
            }
          },
          "type": "string",
          "pattern": "[a-zA-Z]{2}"
        },
        "resortName": {
          "description": "The name of a resort that the golf course is associated with.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            }
          },
          "type": "string"
        },
        "refPointType": {
          "description": "Indicates the type of location being referenced (e.g., Airport, Hotel). Refer to the OpenTravel Code table Index Point Code (IPC).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}OTA_CodeType"
              ]
            }
          },
          "$ref": "#/definitions/IndexPointCode_Enum"
        },
        "name": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to128"
              ]
            }
          },
          "type": "string",
          "maxLength": 128
        },
        "distance": {
          "description": "Assigned Type: ota2-0500:Distance",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "distanceMeasure": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to16"
              ]
            }
          },
          "type": "string",
          "maxLength": 32
        },
        "direction": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to8"
              ]
            }
          },
          "type": "string",
          "maxLength": 32
        },
        "distanceMax": {
          "description": "An optional attribute indicating the maximum distance to\\/from a reference point.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}NumericStringLength1to16"
              ]
            }
          },
          "type": "integer",
          "format": "int32"
        },
        "unitOfMeasureCode": {
          "description": "The unit of measure in a code format. Refer to OpenTravel Code List Unit of Measure Code (UOM).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}OTA_CodeType"
              ]
            }
          },
          "$ref": "CodeList_4_0_0.schema.json#/definitions/UnitOfMeasure_Enum"
        }
      }
    },
    "IndexPointCode_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "IndexPointCode_Enum"
      },
      "description": "Indicates the type of location being referenced (e.g., Airport, Hotel).",
      "type": "string",
      "enum": [
        "Cross street",
        "Intersection",
        "Highway",
        "Highway exit",
        "City",
        "Airport",
        "Rail station",
        "Subway station",
        "Geo location",
        "Bus/coach station",
        "Hotel",
        "Nearest major city",
        "Surrounding city",
        "Heliport",
        "Regional express train station",
        "Attraction",
        "Business location",
        "Car rental location",
        "Convention center",
        "Educational",
        "Event",
        "Ground transport",
        "Military bases",
        "Park/recreational area",
        "Port",
        "Resort/ski area",
        "Shopping center",
        "Sports",
        "Transportation points",
        "Neighbouring state",
        "Metro area",
        "District",
        "Local landmark"
      ]
    },
    "Promotion": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Promotion"
      },
      "description": "Description of the promotion.",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 128
        },
        "promotionVendorCode": {
          "description": "Assigned Type: ota2-0500:ListOfTinyStrings",
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 32
          }
        },
        "code": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "name": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        }
      }
    },
    "PositionWithMap": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "PositionWithMap"
      },
      "properties": {
        "mapURL": {
          "description": "The URL of a map image.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}anyURI"
              ]
            }
          },
          "type": "string"
        },
        "latitude": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to16"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Latitude"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "longitude": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to16"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Longitude"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "altitude": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to16"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Altitude"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "altitudeUnitOfMeasure_Enum": {
          "description": "Provides the unit of measure for the altitude (e.g., feet, meters, miles, kilometers). Refer to OpenTravel Code List Unit of Measure Code (UOM).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}OTA_CodeType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "AltitudeUnitOfMeasureCode"
              }
            ]
          },
          "$ref": "CodeList_4_0_0.schema.json#/definitions/UnitOfMeasure_Enum"
        },
        "formatURL": {
          "description": "The URL to the format for the latitude and longitude for this location.",
          "type": "string"
        }
      }
    },
    "Email": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Email"
      },
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to128"
          ]
        }
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "remark": {
          "description": "Assigned Type: ota2-0500:StringText",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to128"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Remark"
              }
            ]
          },
          "type": "string",
          "maxLength": 4096
        },
        "textFormat": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: EmailType_TextFormat"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "TextFormat"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "Address": {
          "description": "The email address.  IETF RFC 2821",
          "type": "string",
          "maxLength": 512
        },
        "Type": {
          "description": "Assigned Type: ota2-0400:EmailAddressType_Enum",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "EmailType"
              }
            ]
          },
          "$ref": "CodeList_4_0_0.schema.json#/definitions/EmailAddressType_Enum"
        },
        "Privacy": {
          "description": "Assigned Type: ota2-0500:Privacy",
          "$ref": "#/definitions/Privacy"
        },
        "validInd": {
          "description": "If true, this is a valid email address that has been system verified via a successful email transmission.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}boolean"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ValidInd"
              }
            ]
          },
          "type": "boolean"
        },
        "defaultInd": {
          "description": "If true, this identifies this is the default email address.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: DefaultIndGroup"
              ]
            }
          },
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "Address"
      ],
      "discriminator": "@type"
    },
    "TravelerID": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Traveler"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "objID": {
          "description": "A unique identifier within this document for this object.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}RPH_Type"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "RPH"
              }
            ]
          },
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: ota2-0500:Identifier",
          "$ref": "#/definitions/Identifier"
        },
        "OtherID": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "maxItems": 5
        },
        "PersonRef": {
          "description": "Refers to the obj ID on an object defined elsewhere in the current document.",
          "type": "string"
        },
        "TravelerRef": {
          "description": "Supercedes the PersonRef.  Refers to the obj ID on an object defined elsewhere in the current document.",
          "type": "string"
        }
      },
      "required": [
        "@type",
        "Identifier"
      ],
      "discriminator": "@type"
    },
    "Traveler": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Traveler"
      },
      "allOf": [
        {
          "$ref": "#/definitions/TravelerID"
        },
        {
          "properties": {
            "gender": {
              "description": "The gender of the person.",
              "$ref": "CodeList_4_0_0.schema.json#/definitions/Gender_Enum"
            },
            "maritalStatus_Enum": {
              "description": "Specifies the marital status of the person.",
              "$ref": "CodeList_4_0_0.schema.json#/definitions/MaritalStatus_Enum"
            },
            "birthDate": {
              "description": "The birth date of the person.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "AttributeGroup: BirthDateGroup"
                  ]
                }
              },
              "type": "string",
              "format": "date"
            },
            "nationality": {
              "description": "Assigned Type: ota2-0500:CountryCode_ISO3166",
              "type": "string",
              "pattern": "[a-zA-Z]{2}"
            },
            "PersonName": {
              "description": "Assigned Type: ota2-0500:PersonName",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}PersonNameType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "PersonName"
                  }
                ]
              },
              "$ref": "#/definitions/PersonName"
            },
            "Address": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Address"
              },
              "maxItems": 5
            },
            "Telephone": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Telephone"
              },
              "maxItems": 10
            },
            "Email": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Email"
              },
              "maxItems": 5
            },
            "Privacy": {
              "description": "Assigned Type: ota2-0500:Privacy",
              "$ref": "#/definitions/Privacy"
            },
            "Comments": {
              "description": "Assigned Type: ota2-0500:TextFree",
              "$ref": "#/definitions/TextFree"
            },
            "VIP": {
              "description": "Assigned Type: ota2-0500:VIP",
              "$ref": "#/definitions/VIP"
            },
            "PersonDocument": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PersonDocument"
              },
              "maxItems": 5
            },
            "LoyaltyProgram": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LoyaltyProgram"
              },
              "maxItems": 99
            },
            "ContactPerson": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContactPerson"
              },
              "maxItems": 10
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          },
          "required": [
            "PersonName"
          ]
        }
      ]
    },
    "MultimediaCollection": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "MultimediaCollection"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "lastUpdated": {
          "description": "The date and time when the collection of multimedia information was last updated.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}dateTime"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "LastUpdated"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        },
        "Multimedia": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Multimedia"
          },
          "minItems": 1
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "Multimedia"
      ],
      "discriminator": "@type"
    },
    "VideoCategoryID": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "VideoCategory"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "objID": {
          "description": "A unique identifier within this document for this object.",
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: ota2-0500:Identifier",
          "$ref": "#/definitions/Identifier"
        },
        "VideoCategoryRef": {
          "description": "Refers to the obj ID on an object defined elsewhere in the current document.",
          "type": "string"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "VideoCategory": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "VideoCategory"
      },
      "allOf": [
        {
          "$ref": "#/definitions/VideoCategoryID"
        },
        {
          "properties": {
            "category": {
              "description": "Assigned Type: ota2-0500:OTA_Code",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Category"
                  }
                ]
              },
              "type": "string",
              "pattern": "[0-9A-Z]{1,4}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
            },
            "language": {
              "description": "The language associated with the caption for the category.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}language"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Language"
                  }
                ],
                "examples": [
                  {
                    "context": "Common",
                    "value": "en"
                  }
                ]
              },
              "type": "string"
            },
            "caption": {
              "description": "Assigned Type: ota2-0500:StringShort",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to128"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Caption"
                  }
                ]
              },
              "type": "string",
              "maxLength": 128
            },
            "Video": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VideoID"
              }
            },
            "removalInd": {
              "description": "If true, this item is obsolete and should be removed from the receiving system.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "AttributeGroup: RemovalGroup"
                  ]
                }
              },
              "type": "boolean"
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "MultimediaDescription": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "MultimediaDescription"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "title": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
              ]
            }
          },
          "type": "string",
          "maxLength": 128
        },
        "language": {
          "description": "The language in which the content is provided.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}language"
              ]
            },
            "examples": [
              {
                "context": "Common",
                "value": "en"
              }
            ]
          },
          "type": "string"
        },
        "caption": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to128",
                "Example value: ca1 \u003d The Empire State Building at sunset.",
                "Example value: tns \u003d The Empire State Building at sunset."
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Caption"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "The Empire State Building at sunset."
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "FormattedTextSubSection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormattedTextSubSection"
          },
          "maxItems": 99,
          "minItems": 1
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "FormattedTextSubSection"
      ],
      "discriminator": "@type"
    },
    "MultimediaDetails": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "MultimediaDetails"
      },
      "description": "Warning:  To be redesigned in the next release. The title of the multimedia object.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to64"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 128
        },
        "author": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Author"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "copyrightNotice": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CopyrightNotice"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "copyrightOwner": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CopyrightOwner"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "copyrightStart": {
          "description": "Assigned Type: ota2-0500:DateTime",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}DateOrDateTimeType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CopyrightStart"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        },
        "copyrightEnd": {
          "description": "Assigned Type: ota2-0500:DateTime",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}DateOrDateTimeType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CopyrightEnd"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        },
        "effectiveStart": {
          "description": "Assigned Type: ota2-0500:DateTime",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}DateOrDateTimeType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "EffectiveStart"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        },
        "effectiveEnd": {
          "description": "Assigned Type: ota2-0500:DateTime",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}DateOrDateTimeType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "EffectiveEnd"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        },
        "applicableStart": {
          "description": "Start month and day or date for which the multimedia content is relevent (e.g. the start of a season or the start of an event). When a year is not used (i.e. only the month and day) it signifies a recurring event.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}DateOrMonthDay"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ApplicableStart"
              }
            ]
          },
          "type": "string",
          "format": "date"
        },
        "applicableEnd": {
          "description": "End month and day or date for which the multimedia content is relevent (e.g. the end of a season or the start of an event). When a year is not used (i.e. only the month and day) it signifies a recurring event.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}DateOrMonthDay"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ApplicableEnd"
              }
            ]
          },
          "type": "string",
          "format": "date"
        }
      }
    },
    "VideoID": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Video"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "objID": {
          "description": "A unique identifier within this document for this object.",
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: ota2-0500:Identifier",
          "$ref": "#/definitions/Identifier"
        },
        "VideoRef": {
          "description": "Refers to the obj ID on an object defined elsewhere in the current document.",
          "type": "string"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Video": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Video"
      },
      "allOf": [
        {
          "$ref": "#/definitions/VideoID"
        },
        {
          "properties": {
            "unitOfMeasureCode": {
              "description": "Assigned Type: ota2-0500:OTA_Code",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "UnitOfMeasureCode"
                  }
                ]
              },
              "type": "string",
              "pattern": "[0-9A-Z]{1,4}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
            },
            "width": {
              "description": "The width of the video item (unit specified by unit of measure).",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}positiveInteger"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Width"
                  }
                ]
              },
              "type": "integer",
              "format": "int32"
            },
            "height": {
              "description": "The height of the video item (unit specified by unit of measure).",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}positiveInteger"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Height"
                  }
                ]
              },
              "type": "integer",
              "format": "int32"
            },
            "bitRate": {
              "description": "The bit rate of the video item.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}positiveInteger"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "BitRate"
                  }
                ]
              },
              "type": "integer",
              "format": "int32"
            },
            "length": {
              "description": "The length of the video item (unit specified by unit of measure).",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}positiveInteger"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Length"
                  }
                ]
              },
              "type": "integer",
              "format": "int32"
            },
            "version": {
              "description": "The version of the video item.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Version"
                  }
                ]
              },
              "type": "string"
            },
            "format": {
              "description": "Assigned Type: ota2-0500:OTA_Code",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}OTA_CodeType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Format"
                  }
                ]
              },
              "type": "string",
              "pattern": "[0-9A-Z]{1,4}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
            },
            "fileSize": {
              "description": "The size of the multimedia file in bytes.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}positiveInteger"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "FileSize"
                  }
                ]
              },
              "type": "integer",
              "format": "int32"
            },
            "fileName": {
              "description": "Assigned Type: ota2-0500:StringShort",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to64"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "FileName"
                  }
                ]
              },
              "type": "string",
              "maxLength": 128
            },
            "streamingSource": {
              "description": "Example: YouTube",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "StreamingSource"
                  }
                ]
              },
              "type": "string"
            },
            "URL": {
              "description": "URL of the multimedia item for a specific format.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}anyURI"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "URL"
                  }
                ]
              },
              "type": "string"
            },
            "Details": {
              "description": "Assigned Type: ota2-0500:MultimediaDetails",
              "$ref": "#/definitions/MultimediaDetails"
            },
            "MultimediaDescription": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MultimediaDescription"
              }
            },
            "DateTimeStamp": {
              "description": "Assigned Type: ota2-0500:DateTimeStamp",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "AttributeGroup: DateTimeStampGroup"
                  ]
                }
              },
              "$ref": "#/definitions/DateTimeStamp"
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "Rating": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Rating"
      },
      "description": "The actual award or rating received by the facility.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string"
        },
        "provider": {
          "description": "The name of the award or ratings provider.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Provider"
              }
            ]
          },
          "type": "string"
        },
        "description": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "ratingSymbol": {
          "description": "A symbol that a rating provider uses to rate a facility (e.g. Diamonds, Stars).",
          "$ref": "CodeList_4_0_0.schema.json#/definitions/RatingSymbol"
        },
        "rating": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "date": {
          "description": "The date the award was received.",
          "type": "string",
          "format": "date"
        },
        "officialAppointmentInd": {
          "description": "When true, indicates the property has received official permission from the award provider to use the rating in publications and marketing materials; when false this permission has not been granted.",
          "type": "boolean"
        }
      }
    },
    "ProcessingInfo": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "ProcessingInfo"
      },
      "description": "Transaction processing directives, including display currency overrides. If no display currency information is provided, the display and pricing currency will default to the value in POS\\/Source\\/@ISOCurrency.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "(Developer Notes) An agreement should be in place with your trading partners that specifies what information is summary versus detail."
          ]
        }
      },
      "properties": {
        "displayCurrency": {
          "description": "Assigned Type: ota2-0500:CurrencyCode_ISO4217",
          "x-otm-annotations": {
            "documentation": {
              "references": [
                "http:\\/\\/www.opentraveldevelopersnetwork.com\\/Supported_ISO_Standards.php"
              ],
              "more-info": [
                "http:\\/\\/www.opentraveldevelopersnetwork.com\\/2012A_SchemaDoc\\/DisplayCurrency"
              ]
            }
          },
          "type": "string",
          "pattern": "[a-zA-Z]{3}"
        },
        "maxResponses": {
          "description": "The maximum quantity of search results in the response.",
          "type": "integer",
          "format": "int32"
        },
        "summaryResultsInd": {
          "description": "If true, summary information is requested in the search results.",
          "type": "boolean"
        }
      }
    },
    "OperationSchedule": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "OperationSchedule"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "daysOfWeek": {
          "type": "array",
          "items": {
            "$ref": "CodeList_4_0_0.schema.json#/definitions/DayOfWeek_Enum"
          }
        },
        "additionalOperationInfoCode": {
          "description": "Assigned Type: ota2-0500:OTA_Code",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            }
          },
          "type": "string",
          "pattern": "[0-9A-Z]{1,4}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
        },
        "frequency": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
              ]
            }
          },
          "type": "string",
          "maxLength": 128
        },
        "text": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength0to64"
              ]
            }
          },
          "type": "string",
          "maxLength": 128
        },
        "name": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "DateTimeSpanWindows": {
          "description": "Assigned Type: ota2-0500:DateTimeSpanWindows",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: DateTimeSpanGroup"
              ]
            }
          },
          "$ref": "#/definitions/DateTimeSpanWindows"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "RateRange": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "RateRange"
      },
      "description": "A range of monetary values within which the cost of the available products are requested.",
      "properties": {
        "minRate": {
          "description": "Assigned Type: ota2-0500:Money",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}Money"
              ]
            }
          },
          "type": "number",
          "format": "float"
        },
        "maxRate": {
          "description": "Assigned Type: ota2-0500:Money",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}Money"
              ]
            }
          },
          "type": "number",
          "format": "float"
        },
        "fixedRate": {
          "description": "Assigned Type: ota2-0500:Money",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}Money"
              ]
            }
          },
          "type": "number",
          "format": "float"
        },
        "rateTimeUnit": {
          "description": "Used to specify the period of time to which the rates apply.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}TimeUnitType"
              ]
            }
          },
          "$ref": "CodeList_4_0_0.schema.json#/definitions/TimeUnit_Enum"
        },
        "currencyCode": {
          "description": "Assigned Type: ota2-0500:CurrencyCode_ISO4217",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}AlphaLength3"
              ]
            }
          },
          "type": "string",
          "pattern": "[a-zA-Z]{3}"
        }
      }
    },
    "Radius": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Radius"
      },
      "description": "The radius distance.",
      "properties": {
        "value": {
          "type": "integer",
          "format": "int32"
        },
        "unitOfMeasure": {
          "description": "The unit of measure for the radius value.",
          "$ref": "CodeList_4_0_0.schema.json#/definitions/UnitOfMeasure_Enum"
        }
      }
    },
    "FormattedText": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "FormattedText"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "title": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
              ]
            }
          },
          "type": "string",
          "maxLength": 128
        },
        "language": {
          "description": "The language in which the content is provided.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}language"
              ]
            },
            "examples": [
              {
                "context": "Common",
                "value": "en"
              }
            ]
          },
          "type": "string"
        },
        "FormattedTextSubSection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormattedTextSubSection"
          },
          "maxItems": 99,
          "minItems": 1
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "FormattedTextSubSection"
      ],
      "discriminator": "@type"
    },
    "LocationCode": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "LocationCode"
      },
      "description": "Location code is city, stateProvence, or country code",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 32
        },
        "city": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to8"
              ]
            },
            "examples": [
              {
                "context": "Common",
                "value": "Lancaster"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "stateProvince": {
          "description": "Assigned Type: ota2-0500:StateProvCode",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to8"
              ]
            }
          },
          "type": "string",
          "maxLength": 8,
          "minLength": 2
        },
        "country": {
          "description": "Assigned Type: ota2-0500:CountryCode_ISO3166",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}ISO3166"
              ]
            },
            "examples": [
              {
                "context": "Common",
                "value": "US"
              }
            ]
          },
          "type": "string",
          "pattern": "[a-zA-Z]{2}"
        },
        "codeContext": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "type": "string",
          "maxLength": 32
        }
      }
    },
    "ImageID": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Image"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "objID": {
          "description": "A unique identifier within this document for this object.",
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: ota2-0500:Identifier",
          "$ref": "#/definitions/Identifier"
        },
        "ImageRef": {
          "description": "Refers to the obj ID on an object defined elsewhere in the current document.",
          "type": "string"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Image": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Image"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ImageID"
        },
        {
          "properties": {
            "version": {
              "description": "The version of the video item.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
                  ]
                }
              },
              "type": "string"
            },
            "format": {
              "description": "Assigned Type: ota2-0500:OTA_Code",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}OTA_CodeType"
                  ]
                }
              },
              "type": "string",
              "pattern": "[0-9A-Z]{1,4}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
            },
            "dimensionCategory": {
              "description": "Assigned Type: ota2-0500:StringTiny",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16",
                    "Example value: ca1 \u003d 100x100",
                    "Example value: tns \u003d 100x100"
                  ]
                }
              },
              "type": "string",
              "maxLength": 32
            },
            "sort": {
              "description": "Example: 1",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}positiveInteger",
                    "Example value: ca1 \u003d !",
                    "Example value: tns \u003d !"
                  ]
                }
              },
              "type": "integer",
              "format": "int32"
            },
            "resolution": {
              "description": "Example: 600",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}positiveInteger",
                    "Example value: ca1 \u003d 600",
                    "Example value: tns \u003d 600"
                  ]
                }
              },
              "type": "integer",
              "format": "int32"
            },
            "colorSpace": {
              "description": "Assigned Type: ota2-0500:StringShort",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
                  ]
                }
              },
              "type": "string",
              "maxLength": 128
            },
            "URL": {
              "description": "URL of the multimedia item for a specific format.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}anyURI"
                  ]
                }
              },
              "type": "string"
            },
            "Details": {
              "description": "Assigned Type: ota2-0500:MultimediaDetails",
              "$ref": "#/definitions/MultimediaDetails"
            },
            "MultimediaDescription": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MultimediaDescription"
              }
            },
            "DateTimeStamp": {
              "description": "Assigned Type: ota2-0500:DateTimeStamp",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "AttributeGroup: DateTimeStampGroup"
                  ]
                }
              },
              "$ref": "#/definitions/DateTimeStamp"
            },
            "Email": {
              "description": "Assigned Type: ota2-0500:Email",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string",
                    "Example value: ca1 \u003d John@company.com",
                    "Example value: tns \u003d John@company.com"
                  ]
                }
              },
              "$ref": "#/definitions/Email"
            },
            "Dimensions": {
              "description": "Assigned Type: ota2-0500:Dimensions",
              "$ref": "#/definitions/Dimensions"
            },
            "File": {
              "description": "Assigned Type: ota2-0500:File",
              "$ref": "#/definitions/File"
            },
            "Geolocation": {
              "description": "Assigned Type: ota2-0500:Geolocation",
              "$ref": "#/definitions/Geolocation"
            },
            "originalIndicatorInd": {
              "description": "When true, the image is the original file and format. When false, the image is not the original file and format.",
              "type": "boolean"
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "ImageCategory": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "ImageCategory"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "category": {
          "description": "Assigned Type: ota2-0500:OTA_Code",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            }
          },
          "type": "string",
          "pattern": "[0-9A-Z]{1,4}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
        },
        "language": {
          "description": "The language associated with the caption for the category.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}language"
              ]
            },
            "examples": [
              {
                "context": "Common",
                "value": "en"
              }
            ]
          },
          "type": "string"
        },
        "caption": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to128"
              ]
            }
          },
          "type": "string",
          "maxLength": 128
        },
        "Image": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageID"
          },
          "maxItems": 100
        },
        "removalInd": {
          "description": "If true, this item is obsolete and should be removed from the receiving system.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: RemovalGroup"
              ]
            }
          },
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "RelativePosition": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "RelativePosition"
      },
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Extension: TransportationsType"
          ]
        }
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "direction": {
          "description": "Defines the cardinal direction (e.g., north, south, southwest).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            }
          },
          "type": "string"
        },
        "distance": {
          "description": "Defines the distance between two points.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            }
          },
          "type": "string"
        },
        "unitOfMeasureCode": {
          "description": "The unit of measure in a code format. Refer to OpenTravel Code List Unit of Measure Code (UOM).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}OTA_CodeType"
              ]
            }
          },
          "$ref": "CodeList_4_0_0.schema.json#/definitions/UnitOfMeasure_Enum"
        },
        "indexPointCode": {
          "description": "This is the object referred to by the relative position (e.g. cross street, airport). Refer to OpenTravel Code List Index Point Code (IPC).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            }
          },
          "$ref": "#/definitions/IndexPointCode_Enum"
        },
        "name": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength0to64"
              ]
            }
          },
          "type": "string",
          "maxLength": 128
        },
        "toFrom": {
          "description": "Used to indicate whether the context is to a facility or from a facility.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: RelativePositionType_ToFrom"
              ]
            }
          },
          "$ref": "CodeList_4_0_0.schema.json#/definitions/ToFrom_Enum"
        },
        "positionAccuracy": {
          "description": "Indicates the accuracy of the property\u0027s geo-coding, since the property\u0027s longitude and latitude may not always be exact. Refer to OpenTravel Code List Position Accuracy Code (PAC).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            }
          },
          "$ref": "CodeList_4_0_0.schema.json#/definitions/PositionAccuracy_Enum"
        },
        "Transportations": {
          "description": "Assigned Type: ota2-0500:Transportations",
          "$ref": "#/definitions/Transportations"
        },
        "Description": {
          "description": "Assigned Type: ota2-0500:Description",
          "$ref": "#/definitions/Description"
        },
        "nearestInd": {
          "description": "The indicator for whether this location is nearest.",
          "type": "boolean"
        },
        "primaryInd": {
          "description": "Indicates whether the reference point is considered the main reference point for the specific type of IndexPointCode (e.g., in Dallas, where IndexPointCode\u003dairport Dallas\\/Fort Worth airport would be the primary airport even if another airport such as Love Field is closer).",
          "type": "boolean"
        },
        "approximateDistanceInd": {
          "description": "When true, the distance information is approximate.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Directions": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "RelativePosition"
      },
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Extension: TransportationsType"
          ]
        }
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "direction": {
          "description": "Defines the cardinal direction (e.g., north, south, southwest).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            }
          },
          "type": "string"
        },
        "distance": {
          "description": "Defines the distance between two points.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            }
          },
          "type": "string"
        },
        "unitOfMeasureCode": {
          "description": "The unit of measure in a code format. Refer to OpenTravel Code List Unit of Measure Code (UOM).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}OTA_CodeType"
              ]
            }
          },
          "$ref": "CodeList_4_0_0.schema.json#/definitions/UnitOfMeasure_Enum"
        },
        "indexPointCode": {
          "description": "This is the object referred to by the relative position (e.g. cross street, airport). Refer to OpenTravel Code List Index Point Code (IPC).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            }
          },
          "$ref": "#/definitions/IndexPointCode_Enum"
        },
        "name": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength0to64"
              ]
            }
          },
          "type": "string",
          "maxLength": 128
        },
        "toFrom": {
          "description": "Used to indicate whether the context is to a facility or from a facility.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: RelativePositionType_ToFrom"
              ]
            }
          },
          "$ref": "CodeList_4_0_0.schema.json#/definitions/ToFrom_Enum"
        },
        "positionAccuracy": {
          "description": "Indicates the accuracy of the property\u0027s geo-coding, since the property\u0027s longitude and latitude may not always be exact. Refer to OpenTravel Code List Position Accuracy Code (PAC).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            }
          },
          "$ref": "CodeList_4_0_0.schema.json#/definitions/PositionAccuracy_Enum"
        },
        "Transportations": {
          "description": "Assigned Type: ota2-0500:Transportations",
          "$ref": "#/definitions/Transportations"
        },
        "Description": {
          "description": "Assigned Type: ota2-0500:Description",
          "$ref": "#/definitions/Description"
        },
        "nearestInd": {
          "description": "The indicator for whether this location is nearest.",
          "type": "boolean"
        },
        "primaryInd": {
          "description": "Indicates whether the reference point is considered the main reference point for the specific type of IndexPointCode (e.g., in Dallas, where IndexPointCode\u003dairport Dallas\\/Fort Worth airport would be the primary airport even if another airport such as Love Field is closer).",
          "type": "boolean"
        },
        "approximateDistanceInd": {
          "description": "When true, the distance information is approximate.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "TransportationID": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Transportation"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "objID": {
          "description": "A unique identifier within this document for this object.",
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: ota2-0500:Identifier",
          "$ref": "#/definitions/Identifier"
        },
        "TransportationRef": {
          "description": "Refers to the obj ID on an object defined elsewhere in the current document.",
          "type": "string"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Transportation": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Transportation"
      },
      "allOf": [
        {
          "$ref": "#/definitions/TransportationID"
        },
        {
          "properties": {
            "notificationRequired": {
              "description": "Assigned Type: ota2-0500:StringShort",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
                  ]
                }
              },
              "type": "string",
              "maxLength": 128
            },
            "typicalTravelTime": {
              "description": "The normal (average) travel time required to get to or from the location, measured in minutes.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
                  ]
                }
              },
              "type": "string"
            },
            "Type": {
              "description": "Assigned Type: ota2-0400:Transportation_Enum",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                }
              },
              "$ref": "CodeList_4_0_0.schema.json#/definitions/Transportation_Enum"
            },
            "MultimediaCollection": {
              "description": "Assigned Type: ota2-0500:MultimediaCollection",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}MultimediaDescriptionsType"
                  ]
                }
              },
              "$ref": "#/definitions/MultimediaCollection"
            },
            "OperationSchedule": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OperationSchedule"
              },
              "maxItems": 30
            },
            "Description": {
              "description": "Assigned Type: ota2-0500:Description",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
                  ]
                }
              },
              "$ref": "#/definitions/Description"
            },
            "ChargeUnit": {
              "description": "Assigned Type: ota2-0400:ChargeUnit_Enum",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                }
              },
              "$ref": "CodeList_4_0_0.schema.json#/definitions/ChargeUnit_Enum"
            },
            "CurrencyAmount": {
              "description": "Assigned Type: ota2-0500:CurrencyAmount",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "AttributeGroup: CurrencyAmountGroup"
                  ]
                }
              },
              "$ref": "#/definitions/CurrencyAmount"
            },
            "Address": {
              "description": "Assigned Type: ota2-0500:Address",
              "$ref": "#/definitions/Address"
            },
            "LocationCode": {
              "description": "Assigned Type: ota2-0500:LocationCode",
              "$ref": "#/definitions/LocationCode"
            },
            "includedInd": {
              "description": "When true there is no additional charge for transportation.",
              "type": "boolean"
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "Transportations": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Transportations"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Transportation": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransportationID"
          }
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "ArrivalTransport": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Transportations"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Transportation": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransportationID"
          }
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "DepartureTransport": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Transportations"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Transportation": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransportationID"
          }
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "TextCategory": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "TextCategory"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "category": {
          "description": "Assigned Type: ota2-0500:OTA_Code",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Category"
              }
            ]
          },
          "type": "string",
          "pattern": "[0-9A-Z]{1,4}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
        },
        "caption": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to128"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Caption"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "Text": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Text"
          }
        },
        "removalInd": {
          "description": "If true, this item is obsolete and should be removed from the receiving system.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: RemovalGroup"
              ]
            }
          },
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "VIP": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "VIP"
      },
      "description": "Identifies a VIP and who considers them to be so.",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 512
        },
        "source": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "description": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        }
      }
    },
    "FormattedTextSubSection": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "FormattedTextSubSection"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "subTitle": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
              ]
            }
          },
          "type": "string",
          "maxLength": 128
        },
        "subCode": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to8"
              ]
            }
          },
          "type": "string",
          "maxLength": 32
        },
        "subSectionNumber": {
          "description": "This attribute may be used when there is a need to number all of the sub-sections of information that is to be presented.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Numeric1to999"
              ]
            }
          },
          "type": "integer",
          "format": "int32"
        },
        "TextParagraph": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TextParagraph"
          },
          "maxItems": 99,
          "minItems": 1
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "TextParagraph"
      ],
      "discriminator": "@type"
    },
    "RateQualifier": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "RateQualifier"
      },
      "description": "Name of the rate qualifier",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 128
        },
        "code": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: RateQualifierCoreGroup"
              ]
            }
          },
          "type": "string",
          "maxLength": 32
        },
        "rateAuthorizationCode": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            }
          },
          "type": "string",
          "maxLength": 32
        },
        "rateID": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            }
          },
          "type": "string",
          "maxLength": 32
        },
        "ratePeriod": {
          "description": "The RatePeriod attribute defines the type of rate that may be applied. For example, typically car rental rates differ based upon the duration of the rental, and the actual rate is then expressed in terms of the period of the rental.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: RateQualifierCoreGroup_RatePeriod"
              ]
            }
          },
          "$ref": "CodeList_4_0_0.schema.json#/definitions/RatePeriod_Enum"
        },
        "description": {
          "description": "Assigned Type: ota2-0500:StringLong",
          "type": "string",
          "maxLength": 4096
        }
      }
    },
    "SpecifiedAmenity": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "SpecifiedAmenity"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "number": {
          "description": "The number of requested acillary products (amenities)",
          "type": "integer",
          "format": "int32"
        },
        "Amenity": {
          "description": "Assigned Type: ota2-0500:Amenity",
          "$ref": "#/definitions/Amenity"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "number",
        "Amenity"
      ],
      "discriminator": "@type"
    },
    "AdditionalTraveler": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "AdditionalTraveler"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "relationship": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            }
          },
          "type": "string",
          "maxLength": 32
        },
        "TravelerIdentifier": {
          "description": "Assigned Type: ota2-0500:Traveler_ID",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}PersonNameType"
              ]
            }
          },
          "$ref": "#/definitions/TravelerID"
        },
        "Privacy": {
          "description": "Assigned Type: ota2-0500:Privacy",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: PrivacyGroup"
              ]
            }
          },
          "$ref": "#/definitions/Privacy"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "LoyaltyProgram": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "LoyaltyProgram"
      },
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength0to32"
          ]
        }
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "id": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "loyaltyLevel": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "LoyaltyLevel"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "Platinum"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "ProgramCode": {
          "description": "Assigned Type: ota2-0500:Code",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ProgramCode"
              }
            ]
          },
          "$ref": "#/definitions/Code"
        },
        "TravelSector": {
          "description": "Assigned Type: ota2-0400:TravelSector_Enum",
          "$ref": "CodeList_4_0_0.schema.json#/definitions/TravelSector_Enum"
        },
        "primaryInd": {
          "description": "When true, indicates this is the primary loyalty program and when absent or false, indicates this is not the primary loyalty program.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Feature": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "Feature"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "quantity": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "Description": {
          "description": "Assigned Type: ota2-0500:Description",
          "$ref": "#/definitions/Description"
        },
        "Proximity": {
          "description": "Assigned Type: ota2-0400:Proximity_Enum",
          "$ref": "CodeList_4_0_0.schema.json#/definitions/Proximity_Enum"
        },
        "ExtensionPoint_Shared": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Shared"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Amount": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Amount"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "unitPrice": {
          "description": "Assigned Type: ota2-0500:Money",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Money"
              ]
            }
          },
          "type": "number",
          "format": "float"
        },
        "unitName": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            }
          },
          "type": "string",
          "maxLength": 32
        },
        "quantity": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Numeric1to99"
              ]
            }
          },
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "percentage": {
          "description": "Assigned Type: ota2-0500:Percent",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Percentage"
              ]
            },
            "examples": [
              {
                "context": "Common",
                "value": "10"
              }
            ]
          },
          "type": "number",
          "format": "float",
          "maximum": 100.0,
          "exclusiveMaximum": false,
          "minimum": 0.0,
          "exclusiveMinimum": false
        },
        "description": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "Total": {
          "description": "Assigned Type: ota2-0500:CurrencyAmount",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Money"
              ]
            }
          },
          "$ref": "#/definitions/CurrencyAmount"
        },
        "ChargeUnit": {
          "description": "Assigned Type: ota2-0400:ChargeUnit_Enum",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: TeeTimeType_Applicability"
              ]
            }
          },
          "$ref": "CodeList_4_0_0.schema.json#/definitions/ChargeUnit_Enum"
        },
        "ChargeFrequency": {
          "description": "Assigned Type: ota2-0400:ChargeUnit_Enum",
          "$ref": "CodeList_4_0_0.schema.json#/definitions/ChargeUnit_Enum"
        },
        "ExtensionPoint_Summary": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Price": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Amount"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "unitPrice": {
          "description": "Assigned Type: ota2-0500:Money",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Money"
              ]
            }
          },
          "type": "number",
          "format": "float"
        },
        "unitName": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            }
          },
          "type": "string",
          "maxLength": 32
        },
        "quantity": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Numeric1to99"
              ]
            }
          },
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "percentage": {
          "description": "Assigned Type: ota2-0500:Percent",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Percentage"
              ]
            },
            "examples": [
              {
                "context": "Common",
                "value": "10"
              }
            ]
          },
          "type": "number",
          "format": "float",
          "maximum": 100.0,
          "exclusiveMaximum": false,
          "minimum": 0.0,
          "exclusiveMinimum": false
        },
        "description": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "Total": {
          "description": "Assigned Type: ota2-0500:CurrencyAmount",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Money"
              ]
            }
          },
          "$ref": "#/definitions/CurrencyAmount"
        },
        "ChargeUnit": {
          "description": "Assigned Type: ota2-0400:ChargeUnit_Enum",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: TeeTimeType_Applicability"
              ]
            }
          },
          "$ref": "CodeList_4_0_0.schema.json#/definitions/ChargeUnit_Enum"
        },
        "ChargeFrequency": {
          "description": "Assigned Type: ota2-0400:ChargeUnit_Enum",
          "$ref": "CodeList_4_0_0.schema.json#/definitions/ChargeUnit_Enum"
        },
        "ExtensionPoint_Summary": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "AmountDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Amount"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Amount"
        },
        {
          "properties": {
            "maxQuantity": {
              "description": "Assigned Type: ota2-0500:NonNegativeInteger",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Numeric1to999"
                  ]
                }
              },
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "chargeUnitExempt": {
              "description": "Assigned Type: ota2-0500:NonNegativeInteger",
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "chargeFrequencyExempt": {
              "description": "Assigned Type: ota2-0500:NonNegativeInteger",
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "maxChargeUnitApplies": {
              "description": "Assigned Type: ota2-0500:NonNegativeInteger",
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "maxChargeFrequencyApplies": {
              "description": "Assigned Type: ota2-0500:NonNegativeInteger",
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "ExtensionPoint_Detail": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "PriceDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Amount"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Price"
        },
        {
          "properties": {
            "maxQuantity": {
              "description": "Assigned Type: ota2-0500:NonNegativeInteger",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Numeric1to999"
                  ]
                }
              },
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "chargeUnitExempt": {
              "description": "Assigned Type: ota2-0500:NonNegativeInteger",
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "chargeFrequencyExempt": {
              "description": "Assigned Type: ota2-0500:NonNegativeInteger",
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "maxChargeUnitApplies": {
              "description": "Assigned Type: ota2-0500:NonNegativeInteger",
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "maxChargeFrequencyApplies": {
              "description": "Assigned Type: ota2-0500:NonNegativeInteger",
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "ExtensionPoint_Detail": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "Ancillary": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Ancillary"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "name": {
          "description": "Assigned Type: ota2-0500:String",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            }
          },
          "type": "string",
          "maxLength": 512
        },
        "description": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "PricingType": {
          "description": "Assigned Type: ota2-0400:ChargeUnit_Enum",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: GolfAmenityType_PricingType"
              ]
            }
          },
          "$ref": "CodeList_4_0_0.schema.json#/definitions/ChargeUnit_Enum"
        },
        "Code": {
          "description": "Assigned Type: ota2-0500:Code",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            }
          },
          "$ref": "#/definitions/Code"
        },
        "Proximity": {
          "description": "Assigned Type: ota2-0400:Proximity_Enum",
          "$ref": "CodeList_4_0_0.schema.json#/definitions/Proximity_Enum"
        },
        "includedInd": {
          "description": "If TRUE, this is included with the purchase.",
          "type": "boolean"
        },
        "orderableInd": {
          "description": "If TRUE, this ancillary may be ordered.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Amenity": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Amenity"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "name": {
          "description": "Assigned Type: ota2-0500:String",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            }
          },
          "type": "string",
          "maxLength": 512
        },
        "description": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "Code": {
          "description": "Assigned Type: ota2-0500:Code",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            }
          },
          "$ref": "#/definitions/Code"
        },
        "Proximity": {
          "description": "Assigned Type: ota2-0400:Proximity_Enum",
          "$ref": "CodeList_4_0_0.schema.json#/definitions/Proximity_Enum"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "AmountOrPercent": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "AmountOrPercent"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "ExtensionPoint_Shared": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Shared"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "AmountOrPercentAmount": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "AmountOrPercent"
      },
      "allOf": [
        {
          "$ref": "#/definitions/AmountOrPercent"
        },
        {
          "properties": {
            "CurrencyAmount": {
              "description": "Assigned Type: ota2-0500:CurrencyAmount",
              "$ref": "#/definitions/CurrencyAmount"
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "AmountOrPercentPercent": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "AmountOrPercent"
      },
      "allOf": [
        {
          "$ref": "#/definitions/AmountOrPercent"
        },
        {
          "properties": {
            "Percent": {
              "description": "A percentage.",
              "type": "number",
              "format": "float",
              "maximum": 100.0,
              "exclusiveMaximum": false,
              "minimum": 0.0,
              "exclusiveMinimum": false
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "ReferencePoint": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "ReferencePoint"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "name": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "Code": {
          "description": "Assigned Type: ota2-0500:Code",
          "$ref": "#/definitions/Code"
        },
        "Type": {
          "description": "Assigned Type: ota2-0400:ReferencePoint_Enum",
          "$ref": "CodeList_4_0_0.schema.json#/definitions/ReferencePoint_Enum"
        },
        "Location": {
          "description": "Assigned Type: ota2-0500:Location",
          "$ref": "#/definitions/Location"
        },
        "ExtensionPoint_Summary": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "ReferencePointDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "ReferencePoint"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ReferencePoint"
        },
        {
          "properties": {
            "RelativePosition": {
              "description": "Assigned Type: ota2-0500:RelativePosition",
              "$ref": "#/definitions/RelativePosition"
            },
            "MultimediaCollection": {
              "description": "Assigned Type: ota2-0500:MultimediaCollection",
              "$ref": "#/definitions/MultimediaCollection"
            },
            "ExtensionPoint_Detail": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "Dimensions": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Dimensions"
      },
      "description": "Defines the dimensions of an object.",
      "properties": {
        "unitOfMeasureCode": {
          "description": "Assigned Type: ota2-0500:OTA_Code",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            }
          },
          "type": "string",
          "pattern": "[0-9A-Z]{1,4}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
        },
        "width": {
          "description": "The width of the item (unit specified by unit of measure).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}positiveInteger"
              ]
            }
          },
          "type": "integer",
          "format": "int32"
        },
        "height": {
          "description": "The height of the item (unit specified by unit of measure).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}positiveInteger"
              ]
            }
          },
          "type": "integer",
          "format": "int32"
        },
        "area": {
          "description": "The area of the item, such as the area of a meeting room (unit specified by unit of measure).",
          "type": "integer",
          "format": "int32"
        },
        "length": {
          "description": "The length of the item (unit specified by unit of measure).",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "File": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "File"
      },
      "description": "Properties of a file.",
      "properties": {
        "name": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to64"
              ]
            }
          },
          "type": "string",
          "maxLength": 128
        },
        "size": {
          "description": "The size of the multimedia file in bytes.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}positiveInteger"
              ]
            }
          },
          "type": "integer",
          "format": "int32"
        },
        "originalName": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64",
                "Example value: ca1 \u003d 394820",
                "Example value: tns \u003d 394820"
              ]
            }
          },
          "type": "string",
          "maxLength": 128
        }
      }
    },
    "Multimedia": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "Multimedia"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "objID": {
          "description": "A unique identifier within this document for this object.",
          "type": "string"
        },
        "lastUpdated": {
          "description": "The date and time when the multimedia information was last updated.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}dateTime"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "LastUpdated"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        },
        "version": {
          "description": "The version of the content, typically in the form of \\\"1\\\" or \\\"2.3.\\\"",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Version"
              }
            ]
          },
          "type": "string"
        },
        "language": {
          "description": "The language associated with the caption for the category.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}language"
              ]
            },
            "examples": [
              {
                "context": "Common",
                "value": "en"
              }
            ]
          },
          "type": "string"
        },
        "caption": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to128"
              ]
            }
          },
          "type": "string",
          "maxLength": 128
        },
        "Category": {
          "description": "Assigned Type: ota2-0400:PictureCategory_Enum",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            }
          },
          "$ref": "CodeList_4_0_0.schema.json#/definitions/PictureCategory_Enum"
        },
        "AdditionalDetailType": {
          "description": "Assigned Type: ota2-0400:AdditionalDetailType_Enum",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "AdditionalDetailCode"
              }
            ]
          },
          "$ref": "CodeList_4_0_0.schema.json#/definitions/AdditionalDetailType_Enum"
        },
        "InfoType": {
          "description": "Assigned Type: ota2-0400:InformationType_Enum",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "InfoCode"
              }
            ]
          },
          "$ref": "CodeList_4_0_0.schema.json#/definitions/InformationType_Enum"
        },
        "ExtensionPoint_Shared": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Shared"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "MultimediaImage": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "Multimedia"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Multimedia"
        },
        {
          "properties": {
            "ImageCategory": {
              "description": "Assigned Type: ota2-0500:ImageCategory",
              "$ref": "#/definitions/ImageCategory"
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "MultimediaText": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "Multimedia"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Multimedia"
        },
        {
          "properties": {
            "TextCategory": {
              "description": "Assigned Type: ota2-0500:TextCategory",
              "$ref": "#/definitions/TextCategory"
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "MultimediaVideo": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "Multimedia"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Multimedia"
        },
        {
          "properties": {
            "VideoCategory": {
              "description": "Assigned Type: ota2-0500:VideoCategory",
              "$ref": "#/definitions/VideoCategoryID"
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "Fee": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Fee"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Price": {
          "description": "Assigned Type: ota2-0500:Price",
          "$ref": "#/definitions/Price"
        },
        "FeeType": {
          "description": "Assigned Type: ota2-0400:FeeType_Enum",
          "$ref": "CodeList_4_0_0.schema.json#/definitions/FeeType_Enum"
        },
        "Description": {
          "description": "Assigned Type: ota2-0500:Description",
          "$ref": "#/definitions/Description"
        },
        "FeeDetail": {
          "description": "Assigned Type: ota2-0500:FeeDetail",
          "$ref": "#/definitions/FeeDetail"
        },
        "taxExcludedInd": {
          "description": "When true, tax is excluded from the price.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Tax": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Tax"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "sequenceNbr": {
          "description": "Assigned Type: ota2-0500:String",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Changed type from {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}nonNegativeInteger.",
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            }
          },
          "type": "string",
          "maxLength": 512
        },
        "Amount": {
          "description": "Assigned Type: ota2-0500:Amount",
          "$ref": "#/definitions/Amount"
        },
        "EffectiveExpire": {
          "description": "Assigned Type: ota2-0500:DateEffectiveExpire",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: EffectiveExpireOptionalDateGroup"
              ]
            }
          },
          "$ref": "#/definitions/DateEffectiveExpire"
        },
        "TaxType_Enum": {
          "description": "Assigned Type: ota2-0400:TaxType_Enum",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": ""
              }
            ]
          },
          "$ref": "CodeList_4_0_0.schema.json#/definitions/TaxType_Enum"
        },
        "taxExcludedInd": {
          "description": "When present and true, this tax is excluded.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Taxes": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Taxes"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Total": {
          "description": "Assigned Type: ota2-0500:CurrencyAmount",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: CurrencyAmountGroup"
              ]
            }
          },
          "$ref": "#/definitions/CurrencyAmount"
        },
        "Tax": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tax"
          },
          "maxItems": 99
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "Total"
      ],
      "discriminator": "@type"
    },
    "Fees": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Fees"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Fee": {
          "description": "Assigned Type: ota2-0500:Fee",
          "$ref": "#/definitions/Fee"
        },
        "Total": {
          "description": "Assigned Type: ota2-0500:CurrencyAmount",
          "$ref": "#/definitions/CurrencyAmount"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "BaseResponse": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "BaseResponse"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "PayloadStdAttributes": {
          "description": "Assigned Type: ota2-0500:PayloadStdAttributes",
          "$ref": "#/definitions/PayloadStdAttributes"
        },
        "Result": {
          "description": "Assigned Type: ota2-0500:Result",
          "$ref": "#/definitions/Result"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "BasePayload": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "BasePayload"
      },
      "x-otm-annotations": {
        "documentation": {
          "deprecations": [
            "November 1, 2018 - Dave Hollander. After discussion with the modeling team a decsion was made to not use the base payload as a wrapper for requests. A white paper on authorization options is work to be completed."
          ]
        }
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "PayloadStdAttributes": {
          "description": "Assigned Type: ota2-0500:PayloadStdAttributes",
          "$ref": "#/definitions/PayloadStdAttributes"
        },
        "POS": {
          "description": "Assigned Type: ota2-0500:POS",
          "$ref": "#/definitions/POS"
        },
        "ProcessingInfo": {
          "description": "Assigned Type: ota2-0500:ProcessingInfo",
          "$ref": "#/definitions/ProcessingInfo"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "ExtraPersonInfo": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "ExtraPersonInfo"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "minAge": {
          "description": "Minimum age.",
          "type": "integer",
          "format": "int32"
        },
        "maxAge": {
          "description": "Maximum age.",
          "type": "integer",
          "format": "int32"
        },
        "MaxExtra": {
          "description": "Maximum  number of extra persons.",
          "type": "integer",
          "format": "int32"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "ReferenceList": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "ReferenceList"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "ExtensionPoint_Shared": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Shared"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "ReferenceListProduct": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "ReferenceList"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ReferenceList"
        },
        {
          "properties": {
            "Product": {
              "description": "Assigned Type: prod-0500:Product",
              "$ref": "Product_5_0_0.schema.json#/definitions/ProductID"
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "FeeDetail": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "FeeDetail"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "ExtensionPoint_Shared": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Shared"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "FeeDetailAdditionalPerson": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "FeeDetail"
      },
      "allOf": [
        {
          "$ref": "#/definitions/FeeDetail"
        },
        {
          "properties": {
            "minAge": {
              "description": "The min age for which this fee applies.",
              "type": "integer",
              "format": "int32"
            },
            "maxAge": {
              "description": "The max age for which the fee applies.",
              "type": "integer",
              "format": "int32"
            },
            "maxNumberAdditional": {
              "description": "The maximum number of additional people allowed.",
              "type": "integer",
              "format": "int32"
            },
            "feeAppliesAfter": {
              "description": "The number of people included in the price, before additional person charges apply.  The additonal person fee is applied after this number of people.  (E.G If feeAppliesAfter is 2 then the additional person fee begins with the 3 person.)",
              "type": "integer",
              "format": "int32"
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "RateRangeInfo": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "RateRangeInfo"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "RateRange": {
          "description": "Assigned Type: ota2-0500:RateRange",
          "$ref": "#/definitions/RateRange"
        },
        "DateTimeSpanWindows": {
          "description": "Assigned Type: ota2-0500:DateTimeSpanWindows",
          "$ref": "#/definitions/DateTimeSpanWindows"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Charge": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Charge"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "chargeUnitExempt": {
          "description": "Number of units permitted before charges are applied.",
          "type": "integer",
          "format": "int32"
        },
        "chargeFrequencyExempt": {
          "description": "Charge frequency exemptions before charges are applied.",
          "type": "integer",
          "format": "int32"
        },
        "maxChargeUnitApplies": {
          "description": "Maximum number of Units for which the charge will be applied.",
          "type": "integer",
          "format": "int32"
        },
        "maxChargeFrequencyApplies": {
          "description": "Maximum number of times the charge will be applied.",
          "type": "integer",
          "format": "int32"
        },
        "minAge": {
          "description": "Minimum age of applicability.",
          "type": "integer",
          "format": "int32"
        },
        "maxAge": {
          "description": "Maximum age of applicability.",
          "type": "integer",
          "format": "int32"
        },
        "ChargeFrequency": {
          "description": "Assigned Type: ota2-0400:Frequency_Enum",
          "$ref": "CodeList_4_0_0.schema.json#/definitions/Frequency_Enum"
        },
        "ChargeUnit": {
          "description": "Assigned Type: ota2-0400:ChargeUnit_Enum",
          "$ref": "CodeList_4_0_0.schema.json#/definitions/ChargeUnit_Enum"
        },
        "CurrencyAmount": {
          "description": "Assigned Type: ota2-0500:CurrencyAmount",
          "$ref": "#/definitions/CurrencyAmount"
        },
        "Taxes": {
          "description": "Assigned Type: ota2-0500:Taxes",
          "$ref": "#/definitions/Taxes"
        },
        "Description": {
          "description": "Assigned Type: ota2-0500:Description",
          "$ref": "#/definitions/Description"
        },
        "taxInclusiveInd": {
          "description": "When true, taxes are included when figuring the fees.",
          "type": "boolean"
        },
        "mandatoryInd": {
          "description": "When true, indicates the fee is mandatory.",
          "type": "boolean"
        },
        "taxableInd": {
          "description": "When true, indicates that the fee is subject to tax.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Occupancy": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Occupancy"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "RoomOccupancy": {
          "description": "Assigned Type: ph-0200:RoomOccupancy",
          "$ref": "Hospitality_2_0_0.schema.json#/definitions/RoomOccupancy"
        },
        "Charge": {
          "description": "Assigned Type: ota2-0500:Charge",
          "$ref": "#/definitions/Charge"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "WeatherInfo": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "WeatherInfo"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "period": {
          "description": "Assigned Type: ota2-0500:String",
          "type": "string",
          "maxLength": 512
        },
        "Precipitation": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Precipitation"
          },
          "maxItems": 2
        },
        "Temperature": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Temperature"
          },
          "maxItems": 2
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Precipitation": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Precipitation"
      },
      "description": "Provides average precipitation and the unit in which it is measured for a Period.",
      "properties": {
        "averagePrecipitation": {
          "description": "Defines the average precipitation for the time as designated in Period and is qualified by the UnitOfMeasure.",
          "type": "number",
          "format": "float"
        },
        "unitOfMeasure": {
          "description": "Defines the average precipitation for the time as designated in Period and is qualified by the UnitOfMeasure.",
          "$ref": "CodeList_4_0_0.schema.json#/definitions/UnitOfMeasure_Enum"
        }
      }
    },
    "Temperature": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Temperature"
      },
      "properties": {
        "averageHighTemp": {
          "description": "Defines the average high tempature for the time as designated in Period and is qualified by the TempUnit.",
          "type": "integer",
          "format": "int32"
        },
        "averageLowTemp": {
          "description": "Defines the average low tempature for the time as designated in Period and is qualified by the TempUnit.",
          "type": "integer",
          "format": "int32"
        },
        "temperatureUnit": {
          "description": "Provides the units in which the AverageHighTemp and AverageLowTemp are defined (i.e. Celsius or Fahrenheit).",
          "$ref": "CodeList_4_0_0.schema.json#/definitions/TemperatureUnit"
        }
      }
    },
    "CancelPenalty": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "CancelPenalty"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "numberOfNights": {
          "description": "Used in conjunction with the basis type when Nights is selected.",
          "type": "integer",
          "format": "int32"
        },
        "BasisType": {
          "description": "Assigned Type: ota2-0400:BasisType",
          "$ref": "CodeList_4_0_0.schema.json#/definitions/BasisType"
        },
        "Deadline": {
          "description": "Assigned Type: order-0400:Deadline",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Deadline"
              ]
            }
          },
          "$ref": "Order_4_0_0.schema.json#/definitions/Deadline"
        },
        "AmountPercent": {
          "description": "Assigned Type: ota2-0500:AmountPercent",
          "$ref": "#/definitions/AmountPercent"
        },
        "Description": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Description"
          },
          "maxItems": 9
        },
        "ExtensionPoint_Summary": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "CancelPenaltyDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "CancelPenalty"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CancelPenalty"
        },
        {
          "properties": {
            "policyId": {
              "description": "Assigned Type: ota2-0500:StringTiny",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16"
                  ]
                }
              },
              "type": "string",
              "maxLength": 32
            },
            "DayOfWeek": {
              "type": "array",
              "items": {
                "$ref": "CodeList_4_0_0.schema.json#/definitions/DayOfWeek_Enum"
              },
              "maxItems": 7
            },
            "DateTimeSpanWindows": {
              "description": "Assigned Type: ota2-0500:DateTimeSpanWindows",
              "$ref": "#/definitions/DateTimeSpanWindows"
            },
            "RoomType": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 32
              },
              "maxItems": 100
            },
            "RatePlan": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 32
              },
              "maxItems": 100
            },
            "nonRefundableInd": {
              "description": "Indicates that any prepayment for the reservation is non refundable, therefore a 100% penalty on the prepayment is applied, irrespective of deadline.",
              "type": "boolean"
            },
            "noCancelInd": {
              "description": "Note: This will typically be set to false indicating that a reservation may be cancelled.",
              "type": "boolean"
            },
            "ExtensionPoint_Detail": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "PrimaryTravelerID": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "PrimaryTraveler"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "objID": {
          "description": "A unique identifier within this document for this object.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}RPH_Type"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "RPH"
              }
            ]
          },
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: ota2-0500:Identifier",
          "$ref": "#/definitions/Identifier"
        },
        "OtherID": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "maxItems": 5
        },
        "PersonRef": {
          "description": "Refers to the obj ID on an object defined elsewhere in the current document.",
          "type": "string"
        },
        "TravelerRef": {
          "description": "Supercedes the PersonRef.  Refers to the obj ID on an object defined elsewhere in the current document.",
          "type": "string"
        }
      },
      "required": [
        "@type",
        "Identifier"
      ],
      "discriminator": "@type"
    },
    "PrimaryTraveler": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "PrimaryTraveler"
      },
      "allOf": [
        {
          "$ref": "#/definitions/PrimaryTravelerID"
        },
        {
          "properties": {
            "gender": {
              "description": "The gender of the person.",
              "$ref": "CodeList_4_0_0.schema.json#/definitions/Gender_Enum"
            },
            "maritalStatus_Enum": {
              "description": "Specifies the marital status of the person.",
              "$ref": "CodeList_4_0_0.schema.json#/definitions/MaritalStatus_Enum"
            },
            "birthDate": {
              "description": "The birth date of the person.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "AttributeGroup: BirthDateGroup"
                  ]
                }
              },
              "type": "string",
              "format": "date"
            },
            "nationality": {
              "description": "Assigned Type: ota2-0500:CountryCode_ISO3166",
              "type": "string",
              "pattern": "[a-zA-Z]{2}"
            },
            "PersonName": {
              "description": "Assigned Type: ota2-0500:PersonName",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}PersonNameType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "PersonName"
                  }
                ]
              },
              "$ref": "#/definitions/PersonName"
            },
            "Address": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Address"
              },
              "maxItems": 5
            },
            "Telephone": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Telephone"
              },
              "maxItems": 10
            },
            "Email": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Email"
              },
              "maxItems": 5
            },
            "Privacy": {
              "description": "Assigned Type: ota2-0500:Privacy",
              "$ref": "#/definitions/Privacy"
            },
            "Comments": {
              "description": "Assigned Type: ota2-0500:TextFree",
              "$ref": "#/definitions/TextFree"
            },
            "VIP": {
              "description": "Assigned Type: ota2-0500:VIP",
              "$ref": "#/definitions/VIP"
            },
            "PersonDocument": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PersonDocument"
              },
              "maxItems": 5
            },
            "LoyaltyProgram": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LoyaltyProgram"
              },
              "maxItems": 99
            },
            "ContactPerson": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContactPerson"
              },
              "maxItems": 10
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          },
          "required": [
            "PersonName"
          ]
        }
      ]
    },
    "UnitOfMeasure": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "UnitOfMeasure"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "quantity": {
          "description": "The numeric value associated with the measurement.",
          "type": "number",
          "format": "float"
        },
        "UnitOfMeasure_Enum": {
          "description": "Assigned Type: ota2-0400:UnitOfMeasure_Enum",
          "$ref": "CodeList_4_0_0.schema.json#/definitions/UnitOfMeasure_Enum"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "ContactInformation": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "ContactInformation"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "PersonName": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonName"
          },
          "maxItems": 100
        },
        "ContactLocation": {
          "description": "Assigned Type: ota2-0400:ContactLocation_Enum",
          "$ref": "CodeList_4_0_0.schema.json#/definitions/ContactLocation_Enum"
        },
        "Address": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          },
          "maxItems": 100
        },
        "Telephone": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Telephone"
          },
          "maxItems": 100
        },
        "Email": {
          "description": "Assigned Type: ota2-0500:Email",
          "$ref": "#/definitions/Email"
        },
        "URL": {
          "description": "Assigned Type: ota2-0500:URL",
          "$ref": "#/definitions/URL"
        },
        "CompanyName": {
          "description": "Assigned Type: ota2-0500:CompanyName",
          "$ref": "#/definitions/CompanyName"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "EnvironmentalImpact": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "EnvironmentalImpact"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "CarbonFootprint": {
          "description": "Assigned Type: ota2-0500:CarbonFootprint",
          "$ref": "#/definitions/CarbonFootprint"
        },
        "Water": {
          "description": "Assigned Type: ota2-0500:Water",
          "$ref": "#/definitions/Water"
        },
        "Energy": {
          "description": "Assigned Type: ota2-0500:Energy",
          "$ref": "#/definitions/Energy"
        },
        "Recycling": {
          "description": "Assigned Type: ota2-0500:Recycling",
          "$ref": "#/definitions/Recycling"
        },
        "Description": {
          "description": "Assigned Type: ota2-0500:Description",
          "$ref": "#/definitions/Description"
        },
        "Certification": {
          "description": "Assigned Type: ota2-0500:Certification",
          "$ref": "#/definitions/Certification"
        },
        "certificationAvailableInd": {
          "description": "When true, certification credentials are available.",
          "type": "boolean"
        },
        "chemicalAllergiesInd": {
          "description": "When true, property uses products to reduce chemical allergies.",
          "type": "boolean"
        },
        "environmentalCleanersInd": {
          "description": "When true, property uses environmentally responsible cleaning products.",
          "type": "boolean"
        },
        "linenReuseInd": {
          "description": "When true, property has a linen reuse program in place.",
          "type": "boolean"
        },
        "procurementPolicyInd": {
          "description": "When true, the property has a procurement process in place.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "CarbonFootprint": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "CarbonFootprint"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "nonCarbonMeasurement": {
          "description": "Assigned Type: ota2-0500:String",
          "type": "string",
          "maxLength": 512
        },
        "meetingEvent": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "roomNight": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "weatherNormalized": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "CarbonUOM": {
          "description": "Assigned Type: ota2-0400:UnitOfMeasure_Enum",
          "$ref": "CodeList_4_0_0.schema.json#/definitions/UnitOfMeasure_Enum"
        },
        "nonCarbonImpactInd": {
          "description": "Non-carbon impact measured indicator.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Water": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Water"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "perRoomNightUsage": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "wasteDiverisionPercentage": {
          "description": "Assigned Type: ota2-0500:Percent",
          "type": "number",
          "format": "float",
          "maximum": 100.0,
          "exclusiveMaximum": false,
          "minimum": 0.0,
          "exclusiveMinimum": false
        },
        "PerRoomDayUsage": {
          "description": "Water usage per room per day.",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "WaterUOM": {
          "description": "Assigned Type: ota2-0400:UnitOfMeasure_Enum",
          "$ref": "CodeList_4_0_0.schema.json#/definitions/UnitOfMeasure_Enum"
        },
        "Description": {
          "description": "Assigned Type: ota2-0500:Description",
          "$ref": "#/definitions/Description"
        },
        "grayWaterInd": {
          "description": "When true, property participates in gray water recycling.",
          "type": "boolean"
        },
        "waterProgramInd": {
          "description": "When true, property participates in an active water conservation program indicator.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Energy": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Energy"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "energyGenerated": {
          "description": "Assigned Type: ota2-0500:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "EnergyStarRating": {
          "description": "Energy star rating.",
          "type": "string",
          "maxLength": 32
        },
        "PowerUsage": {
          "description": "Assigned Type: ota2-0500:PowerUsage",
          "$ref": "#/definitions/PowerUsage"
        },
        "Description": {
          "description": "Assigned Type: ota2-0500:Description",
          "$ref": "#/definitions/Description"
        },
        "efficientAppliancesInd": {
          "description": "When true, energy efficient appliances used\\n.",
          "type": "boolean"
        },
        "efficientLightingInd": {
          "description": "When true, energy efficient lighting used.",
          "type": "boolean"
        },
        "heatPowerCombInd": {
          "description": "When true, combined heat and power units used indicator.",
          "type": "boolean"
        },
        "heatPumpInd": {
          "description": "When true, heat pumps are used.",
          "type": "boolean"
        },
        "powerSavingPolicyInd": {
          "description": "When true, property has a power saving policy.",
          "type": "boolean"
        },
        "solarInd": {
          "description": "Solar energy used indicator.",
          "type": "boolean"
        },
        "tempControlInd": {
          "description": "When true, property is temperature contolled.",
          "type": "boolean"
        },
        "windTurbineInd": {
          "description": "When true, wind turbines are used.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "PowerUsage": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "PowerUsage"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "quantity": {
          "description": "The quantity of power used.",
          "type": "number",
          "format": "float"
        },
        "PowerType": {
          "description": "Assigned Type: ota2-0400:PowerType_Enum",
          "$ref": "CodeList_4_0_0.schema.json#/definitions/PowerType_Enum"
        },
        "PowerUOM": {
          "description": "Assigned Type: ota2-0400:UnitOfMeasure_Enum",
          "$ref": "CodeList_4_0_0.schema.json#/definitions/UnitOfMeasure_Enum"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Recycling": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Recycling"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "RecycledProducts": {
          "type": "array",
          "items": {
            "$ref": "CodeList_4_0_0.schema.json#/definitions/RecycledProducts_Enum"
          },
          "maxItems": 100
        },
        "RecycleLocations": {
          "type": "array",
          "items": {
            "$ref": "CodeList_4_0_0.schema.json#/definitions/RecyclingLocations_Enum"
          },
          "maxItems": 100
        },
        "Description": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Description"
          },
          "maxItems": 100
        },
        "activeProgramInd": {
          "description": "When true, property has an active recycling program.",
          "type": "boolean"
        },
        "ecologicalDishwareInd": {
          "description": "When true, non-disposable dishware is used.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Certification": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Certification"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "name": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Name"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "paragraph name"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "number": {
          "description": "The sequence number for the paragraph.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Changed type from {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}nonNegativeInteger.",
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ParagraphNumber"
              }
            ]
          },
          "type": "integer",
          "format": "int32"
        },
        "Text": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Text"
          },
          "maxItems": 1000
        },
        "Image": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageID"
          },
          "maxItems": 1000
        },
        "URL": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 1000
        },
        "ParagraphListItem": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParagraphListItem"
          },
          "maxItems": 1000
        },
        "DateTimeStamp": {
          "description": "Assigned Type: ota2-0500:DateTimeStamp",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: DateTimeStampGroup"
              ]
            }
          },
          "$ref": "#/definitions/DateTimeStamp"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    }
  },
  "oneOf": [
    {
      "properties": {
        "ClubMembership": {
          "$ref": "#/definitions/ClubMembership"
        }
      },
      "required": [
        "ClubMembership"
      ]
    },
    {
      "properties": {
        "PersonNameSummary": {
          "$ref": "#/definitions/PersonName"
        }
      },
      "required": [
        "PersonNameSummary"
      ]
    },
    {
      "properties": {
        "RelatedTraveler_Simple_Person_NameSummary": {
          "$ref": "#/definitions/PersonName"
        }
      },
      "required": [
        "RelatedTraveler_Simple_Person_NameSummary"
      ]
    },
    {
      "properties": {
        "PersonNameDetail": {
          "$ref": "#/definitions/PersonNameDetail"
        }
      },
      "required": [
        "PersonNameDetail"
      ]
    },
    {
      "properties": {
        "RelatedTraveler_Simple_Person_NameDetail": {
          "$ref": "#/definitions/PersonNameDetail"
        }
      },
      "required": [
        "RelatedTraveler_Simple_Person_NameDetail"
      ]
    },
    {
      "properties": {
        "TelephoneSummary": {
          "$ref": "#/definitions/Telephone"
        }
      },
      "required": [
        "TelephoneSummary"
      ]
    },
    {
      "properties": {
        "TelephoneDetail": {
          "$ref": "#/definitions/TelephoneDetail"
        }
      },
      "required": [
        "TelephoneDetail"
      ]
    },
    {
      "properties": {
        "TextParagraph": {
          "$ref": "#/definitions/TextParagraph"
        }
      },
      "required": [
        "TextParagraph"
      ]
    },
    {
      "properties": {
        "Comment": {
          "$ref": "#/definitions/TextParagraph"
        }
      },
      "required": [
        "Comment"
      ]
    },
    {
      "properties": {
        "Description": {
          "$ref": "#/definitions/TextParagraph"
        }
      },
      "required": [
        "Description"
      ]
    },
    {
      "properties": {
        "Restriction": {
          "$ref": "#/definitions/TextParagraph"
        }
      },
      "required": [
        "Restriction"
      ]
    },
    {
      "properties": {
        "UsernamePassword": {
          "$ref": "#/definitions/UsernamePassword"
        }
      },
      "required": [
        "UsernamePassword"
      ]
    },
    {
      "properties": {
        "DateTimeSpanWindowsSummary": {
          "$ref": "#/definitions/DateTimeSpanWindows"
        }
      },
      "required": [
        "DateTimeSpanWindowsSummary"
      ]
    },
    {
      "properties": {
        "StayRestrictionsSummary": {
          "$ref": "#/definitions/DateTimeSpanWindows"
        }
      },
      "required": [
        "StayRestrictionsSummary"
      ]
    },
    {
      "properties": {
        "DateTimeSpanWindowsDetail": {
          "$ref": "#/definitions/DateTimeSpanWindowsDetail"
        }
      },
      "required": [
        "DateTimeSpanWindowsDetail"
      ]
    },
    {
      "properties": {
        "StayRestrictionsDetail": {
          "$ref": "#/definitions/DateTimeSpanWindowsDetail"
        }
      },
      "required": [
        "StayRestrictionsDetail"
      ]
    },
    {
      "properties": {
        "PersonDocument": {
          "$ref": "#/definitions/PersonDocument"
        }
      },
      "required": [
        "PersonDocument"
      ]
    },
    {
      "properties": {
        "POS": {
          "$ref": "#/definitions/POS"
        }
      },
      "required": [
        "POS"
      ]
    },
    {
      "properties": {
        "RequestorIDSummary": {
          "$ref": "#/definitions/RequestorID"
        }
      },
      "required": [
        "RequestorIDSummary"
      ]
    },
    {
      "properties": {
        "RequestorIDDetail": {
          "$ref": "#/definitions/RequestorIDDetail"
        }
      },
      "required": [
        "RequestorIDDetail"
      ]
    },
    {
      "properties": {
        "Source": {
          "$ref": "#/definitions/Source"
        }
      },
      "required": [
        "Source"
      ]
    },
    {
      "properties": {
        "BookingChannel": {
          "$ref": "#/definitions/BookingChannel"
        }
      },
      "required": [
        "BookingChannel"
      ]
    },
    {
      "properties": {
        "Result": {
          "$ref": "#/definitions/Result"
        }
      },
      "required": [
        "Result"
      ]
    },
    {
      "properties": {
        "CommentsSummary": {
          "$ref": "#/definitions/Comments"
        }
      },
      "required": [
        "CommentsSummary"
      ]
    },
    {
      "properties": {
        "CommentsDetail": {
          "$ref": "#/definitions/CommentsDetail"
        }
      },
      "required": [
        "CommentsDetail"
      ]
    },
    {
      "properties": {
        "CompanyIdentifier": {
          "$ref": "#/definitions/CompanyID"
        }
      },
      "required": [
        "CompanyIdentifier"
      ]
    },
    {
      "properties": {
        "CompanySummary": {
          "$ref": "#/definitions/Company"
        }
      },
      "required": [
        "CompanySummary"
      ]
    },
    {
      "properties": {
        "PersonIdentifier": {
          "$ref": "#/definitions/PersonID"
        }
      },
      "required": [
        "PersonIdentifier"
      ]
    },
    {
      "properties": {
        "PersonSummary": {
          "$ref": "#/definitions/Person"
        }
      },
      "required": [
        "PersonSummary"
      ]
    },
    {
      "properties": {
        "AddressSummary": {
          "$ref": "#/definitions/Address"
        }
      },
      "required": [
        "AddressSummary"
      ]
    },
    {
      "properties": {
        "AddressDetail": {
          "$ref": "#/definitions/AddressDetail"
        }
      },
      "required": [
        "AddressDetail"
      ]
    },
    {
      "properties": {
        "ContactPerson": {
          "$ref": "#/definitions/ContactPerson"
        }
      },
      "required": [
        "ContactPerson"
      ]
    },
    {
      "properties": {
        "Location": {
          "$ref": "#/definitions/Location"
        }
      },
      "required": [
        "Location"
      ]
    },
    {
      "properties": {
        "Email": {
          "$ref": "#/definitions/Email"
        }
      },
      "required": [
        "Email"
      ]
    },
    {
      "properties": {
        "TravelerIdentifier": {
          "$ref": "#/definitions/TravelerID"
        }
      },
      "required": [
        "TravelerIdentifier"
      ]
    },
    {
      "properties": {
        "TravelerSummary": {
          "$ref": "#/definitions/Traveler"
        }
      },
      "required": [
        "TravelerSummary"
      ]
    },
    {
      "properties": {
        "MultimediaCollection": {
          "$ref": "#/definitions/MultimediaCollection"
        }
      },
      "required": [
        "MultimediaCollection"
      ]
    },
    {
      "properties": {
        "VideoCategoryIdentifier": {
          "$ref": "#/definitions/VideoCategoryID"
        }
      },
      "required": [
        "VideoCategoryIdentifier"
      ]
    },
    {
      "properties": {
        "VideoCategorySummary": {
          "$ref": "#/definitions/VideoCategory"
        }
      },
      "required": [
        "VideoCategorySummary"
      ]
    },
    {
      "properties": {
        "MultimediaDescription": {
          "$ref": "#/definitions/MultimediaDescription"
        }
      },
      "required": [
        "MultimediaDescription"
      ]
    },
    {
      "properties": {
        "VideoIdentifier": {
          "$ref": "#/definitions/VideoID"
        }
      },
      "required": [
        "VideoIdentifier"
      ]
    },
    {
      "properties": {
        "VideoSummary": {
          "$ref": "#/definitions/Video"
        }
      },
      "required": [
        "VideoSummary"
      ]
    },
    {
      "properties": {
        "OperationSchedule": {
          "$ref": "#/definitions/OperationSchedule"
        }
      },
      "required": [
        "OperationSchedule"
      ]
    },
    {
      "properties": {
        "FormattedText": {
          "$ref": "#/definitions/FormattedText"
        }
      },
      "required": [
        "FormattedText"
      ]
    },
    {
      "properties": {
        "ImageIdentifier": {
          "$ref": "#/definitions/ImageID"
        }
      },
      "required": [
        "ImageIdentifier"
      ]
    },
    {
      "properties": {
        "ImageSummary": {
          "$ref": "#/definitions/Image"
        }
      },
      "required": [
        "ImageSummary"
      ]
    },
    {
      "properties": {
        "ImageCategory": {
          "$ref": "#/definitions/ImageCategory"
        }
      },
      "required": [
        "ImageCategory"
      ]
    },
    {
      "properties": {
        "RelativePosition": {
          "$ref": "#/definitions/RelativePosition"
        }
      },
      "required": [
        "RelativePosition"
      ]
    },
    {
      "properties": {
        "Directions": {
          "$ref": "#/definitions/RelativePosition"
        }
      },
      "required": [
        "Directions"
      ]
    },
    {
      "properties": {
        "TransportationIdentifier": {
          "$ref": "#/definitions/TransportationID"
        }
      },
      "required": [
        "TransportationIdentifier"
      ]
    },
    {
      "properties": {
        "TransportationSummary": {
          "$ref": "#/definitions/Transportation"
        }
      },
      "required": [
        "TransportationSummary"
      ]
    },
    {
      "properties": {
        "Transportations": {
          "$ref": "#/definitions/Transportations"
        }
      },
      "required": [
        "Transportations"
      ]
    },
    {
      "properties": {
        "ArrivalTransport": {
          "$ref": "#/definitions/Transportations"
        }
      },
      "required": [
        "ArrivalTransport"
      ]
    },
    {
      "properties": {
        "DepartureTransport": {
          "$ref": "#/definitions/Transportations"
        }
      },
      "required": [
        "DepartureTransport"
      ]
    },
    {
      "properties": {
        "TextCategory": {
          "$ref": "#/definitions/TextCategory"
        }
      },
      "required": [
        "TextCategory"
      ]
    },
    {
      "properties": {
        "FormattedTextSubSection": {
          "$ref": "#/definitions/FormattedTextSubSection"
        }
      },
      "required": [
        "FormattedTextSubSection"
      ]
    },
    {
      "properties": {
        "SpecifiedAmenity": {
          "$ref": "#/definitions/SpecifiedAmenity"
        }
      },
      "required": [
        "SpecifiedAmenity"
      ]
    },
    {
      "properties": {
        "AdditionalTraveler": {
          "$ref": "#/definitions/AdditionalTraveler"
        }
      },
      "required": [
        "AdditionalTraveler"
      ]
    },
    {
      "properties": {
        "LoyaltyProgram": {
          "$ref": "#/definitions/LoyaltyProgram"
        }
      },
      "required": [
        "LoyaltyProgram"
      ]
    },
    {
      "properties": {
        "FeatureShared": {
          "$ref": "#/definitions/Feature"
        }
      },
      "required": [
        "FeatureShared"
      ]
    },
    {
      "properties": {
        "AmountSummary": {
          "$ref": "#/definitions/Amount"
        }
      },
      "required": [
        "AmountSummary"
      ]
    },
    {
      "properties": {
        "PriceSummary": {
          "$ref": "#/definitions/Amount"
        }
      },
      "required": [
        "PriceSummary"
      ]
    },
    {
      "properties": {
        "AmountDetail": {
          "$ref": "#/definitions/AmountDetail"
        }
      },
      "required": [
        "AmountDetail"
      ]
    },
    {
      "properties": {
        "PriceDetail": {
          "$ref": "#/definitions/AmountDetail"
        }
      },
      "required": [
        "PriceDetail"
      ]
    },
    {
      "properties": {
        "Ancillary": {
          "$ref": "#/definitions/Ancillary"
        }
      },
      "required": [
        "Ancillary"
      ]
    },
    {
      "properties": {
        "Amenity": {
          "$ref": "#/definitions/Amenity"
        }
      },
      "required": [
        "Amenity"
      ]
    },
    {
      "properties": {
        "AmountOrPercentShared": {
          "$ref": "#/definitions/AmountOrPercent"
        }
      },
      "required": [
        "AmountOrPercentShared"
      ]
    },
    {
      "properties": {
        "AmountOrPercentAmount": {
          "$ref": "#/definitions/AmountOrPercentAmount"
        }
      },
      "required": [
        "AmountOrPercentAmount"
      ]
    },
    {
      "properties": {
        "AmountOrPercentPercent": {
          "$ref": "#/definitions/AmountOrPercentPercent"
        }
      },
      "required": [
        "AmountOrPercentPercent"
      ]
    },
    {
      "properties": {
        "ReferencePointSummary": {
          "$ref": "#/definitions/ReferencePoint"
        }
      },
      "required": [
        "ReferencePointSummary"
      ]
    },
    {
      "properties": {
        "ReferencePointDetail": {
          "$ref": "#/definitions/ReferencePointDetail"
        }
      },
      "required": [
        "ReferencePointDetail"
      ]
    },
    {
      "properties": {
        "MultimediaShared": {
          "$ref": "#/definitions/Multimedia"
        }
      },
      "required": [
        "MultimediaShared"
      ]
    },
    {
      "properties": {
        "MultimediaImage": {
          "$ref": "#/definitions/MultimediaImage"
        }
      },
      "required": [
        "MultimediaImage"
      ]
    },
    {
      "properties": {
        "MultimediaText": {
          "$ref": "#/definitions/MultimediaText"
        }
      },
      "required": [
        "MultimediaText"
      ]
    },
    {
      "properties": {
        "MultimediaVideo": {
          "$ref": "#/definitions/MultimediaVideo"
        }
      },
      "required": [
        "MultimediaVideo"
      ]
    },
    {
      "properties": {
        "Fee": {
          "$ref": "#/definitions/Fee"
        }
      },
      "required": [
        "Fee"
      ]
    },
    {
      "properties": {
        "Tax": {
          "$ref": "#/definitions/Tax"
        }
      },
      "required": [
        "Tax"
      ]
    },
    {
      "properties": {
        "Taxes": {
          "$ref": "#/definitions/Taxes"
        }
      },
      "required": [
        "Taxes"
      ]
    },
    {
      "properties": {
        "Fees": {
          "$ref": "#/definitions/Fees"
        }
      },
      "required": [
        "Fees"
      ]
    },
    {
      "properties": {
        "BaseResponse": {
          "$ref": "#/definitions/BaseResponse"
        }
      },
      "required": [
        "BaseResponse"
      ]
    },
    {
      "properties": {
        "BasePayload": {
          "$ref": "#/definitions/BasePayload"
        }
      },
      "required": [
        "BasePayload"
      ]
    },
    {
      "properties": {
        "ExtraPersonInfo": {
          "$ref": "#/definitions/ExtraPersonInfo"
        }
      },
      "required": [
        "ExtraPersonInfo"
      ]
    },
    {
      "properties": {
        "ReferenceListShared": {
          "$ref": "#/definitions/ReferenceList"
        }
      },
      "required": [
        "ReferenceListShared"
      ]
    },
    {
      "properties": {
        "ReferenceListProduct": {
          "$ref": "#/definitions/ReferenceListProduct"
        }
      },
      "required": [
        "ReferenceListProduct"
      ]
    },
    {
      "properties": {
        "FeeDetailShared": {
          "$ref": "#/definitions/FeeDetail"
        }
      },
      "required": [
        "FeeDetailShared"
      ]
    },
    {
      "properties": {
        "FeeDetailAdditionalPerson": {
          "$ref": "#/definitions/FeeDetailAdditionalPerson"
        }
      },
      "required": [
        "FeeDetailAdditionalPerson"
      ]
    },
    {
      "properties": {
        "RateRangeInfo": {
          "$ref": "#/definitions/RateRangeInfo"
        }
      },
      "required": [
        "RateRangeInfo"
      ]
    },
    {
      "properties": {
        "Charge": {
          "$ref": "#/definitions/Charge"
        }
      },
      "required": [
        "Charge"
      ]
    },
    {
      "properties": {
        "Occupancy": {
          "$ref": "#/definitions/Occupancy"
        }
      },
      "required": [
        "Occupancy"
      ]
    },
    {
      "properties": {
        "WeatherInfo": {
          "$ref": "#/definitions/WeatherInfo"
        }
      },
      "required": [
        "WeatherInfo"
      ]
    },
    {
      "properties": {
        "CancelPenaltySummary": {
          "$ref": "#/definitions/CancelPenalty"
        }
      },
      "required": [
        "CancelPenaltySummary"
      ]
    },
    {
      "properties": {
        "CancelPenaltyDetail": {
          "$ref": "#/definitions/CancelPenaltyDetail"
        }
      },
      "required": [
        "CancelPenaltyDetail"
      ]
    },
    {
      "properties": {
        "PrimaryTravelerIdentifier": {
          "$ref": "#/definitions/PrimaryTravelerID"
        }
      },
      "required": [
        "PrimaryTravelerIdentifier"
      ]
    },
    {
      "properties": {
        "PrimaryTravelerSummary": {
          "$ref": "#/definitions/PrimaryTraveler"
        }
      },
      "required": [
        "PrimaryTravelerSummary"
      ]
    },
    {
      "properties": {
        "UnitOfMeasure": {
          "$ref": "#/definitions/UnitOfMeasure"
        }
      },
      "required": [
        "UnitOfMeasure"
      ]
    },
    {
      "properties": {
        "ContactInformation": {
          "$ref": "#/definitions/ContactInformation"
        }
      },
      "required": [
        "ContactInformation"
      ]
    },
    {
      "properties": {
        "EnvironmentalImpact": {
          "$ref": "#/definitions/EnvironmentalImpact"
        }
      },
      "required": [
        "EnvironmentalImpact"
      ]
    },
    {
      "properties": {
        "CarbonFootprint": {
          "$ref": "#/definitions/CarbonFootprint"
        }
      },
      "required": [
        "CarbonFootprint"
      ]
    },
    {
      "properties": {
        "Water": {
          "$ref": "#/definitions/Water"
        }
      },
      "required": [
        "Water"
      ]
    },
    {
      "properties": {
        "Energy": {
          "$ref": "#/definitions/Energy"
        }
      },
      "required": [
        "Energy"
      ]
    },
    {
      "properties": {
        "PowerUsage": {
          "$ref": "#/definitions/PowerUsage"
        }
      },
      "required": [
        "PowerUsage"
      ]
    },
    {
      "properties": {
        "Recycling": {
          "$ref": "#/definitions/Recycling"
        }
      },
      "required": [
        "Recycling"
      ]
    },
    {
      "properties": {
        "Certification": {
          "$ref": "#/definitions/Certification"
        }
      },
      "required": [
        "Certification"
      ]
    }
  ]
}
{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Order",
  "x-otm-library": {
    "ProjectName": "HotelDescriptiveContent 103019.otp",
    "LibraryName": "Order",
    "LibraryVersion": "4.0.0",
    "LibraryStatus": "DRAFT",
    "SourceFile": "/Order_4_0_0.otm",
    "CompilerVersion": "4.0-SNAPSHOT",
    "CompileDate": "2019-10-30T13:33:14.657-0400"
  },
  "definitions": {
    "OfferID": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Offer"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "objID": {
          "description": "A unique identifier within this document for this object.",
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: ota2-0500:Identifier",
          "$ref": "Common_5_0_0.schema.json#/definitions/Identifier"
        },
        "OfferRef": {
          "description": "Refers to the objID on an object defined elsewhere in the current document.",
          "type": "string"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Offer": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Offer"
      },
      "allOf": [
        {
          "$ref": "#/definitions/OfferID"
        },
        {
          "properties": {
            "vendor": {
              "description": "Assigned Type: ota2-0500:StringTiny",
              "x-otm-annotations": {
                "examples": [
                  {
                    "context": "Order",
                    "value": "Vendor Name"
                  }
                ]
              },
              "type": "string",
              "maxLength": 32
            },
            "TotalPrice": {
              "description": "Assigned Type: order-0400:TotalPrice",
              "$ref": "#/definitions/TotalPrice"
            },
            "TermsAndConditions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TermsAndConditionsID"
              },
              "maxItems": 25
            },
            "Product": {
              "type": "array",
              "items": {
                "$ref": "Product_5_0_0.schema.json#/definitions/ProductID"
              },
              "maxItems": 30
            },
            "FacilityIdentifier": {
              "description": "Assigned Type: org-0400:Facility_ID",
              "$ref": "Organization_4_0_0.schema.json#/definitions/FacilityID"
            },
            "taxExcludedInd": {
              "description": "By default, taxes are included.  When present and true, all taxes are excluded from the price.  Individual taxes may be excluded using the indicator on the tax object.",
              "type": "boolean"
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          },
          "required": [
            "TotalPrice"
          ]
        }
      ]
    },
    "OfferQueryProduct": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Offer"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "ProductQueries": {
          "type": "array",
          "items": {
            "$ref": "Product_5_0_0.schema.json#/definitions/ProductQueries"
          },
          "maxItems": 2,
          "minItems": 1
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "ProductQueries"
      ],
      "discriminator": "@type"
    },
    "OrderID": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Order"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "objID": {
          "description": "A unique identifier within this document for this object.",
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: ota2-0500:Identifier",
          "$ref": "Common_5_0_0.schema.json#/definitions/Identifier"
        },
        "OrderRef": {
          "description": "Refers to the objID on an object defined elsewhere in the current document.",
          "type": "string"
        },
        "InitiatorOrderIdentifier": {
          "description": "Assigned Type: ota2-0500:Identifier",
          "$ref": "Common_5_0_0.schema.json#/definitions/Identifier"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Order": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Order"
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderID"
        },
        {
          "properties": {
            "Offer": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OfferID"
              },
              "maxItems": 99,
              "minItems": 1
            },
            "PrimaryTravelerIdentifier": {
              "description": "Assigned Type: ota2-0500:PrimaryTraveler_ID",
              "$ref": "Common_5_0_0.schema.json#/definitions/PrimaryTravelerID"
            },
            "AdditionalTraveler": {
              "type": "array",
              "items": {
                "$ref": "Common_5_0_0.schema.json#/definitions/AdditionalTraveler"
              },
              "maxItems": 100
            },
            "Payment": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PaymentID"
              },
              "maxItems": 100
            },
            "TotalPriceSummary": {
              "description": "Assigned Type: order-0400:TotalPrice_Summary",
              "$ref": "#/definitions/TotalPrice"
            },
            "GuaranteePolicy": {
              "description": "Assigned Type: order-0400:GuaranteePolicy",
              "$ref": "#/definitions/GuaranteePolicy"
            },
            "Commission": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Commission"
              },
              "maxItems": 9
            },
            "PersonProductRef": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PersonProductRef"
              },
              "maxItems": 99
            },
            "TripPurpose": {
              "description": "Assigned Type: ota2-0500:Code",
              "$ref": "Common_5_0_0.schema.json#/definitions/Code"
            },
            "ConfirmationID": {
              "description": "Assigned Type: order-0400:ProviderStateID",
              "$ref": "#/definitions/ProviderStateID"
            },
            "CancellationID": {
              "description": "Assigned Type: order-0400:ProviderStateID",
              "$ref": "#/definitions/ProviderStateID"
            },
            "Log": {
              "description": "Assigned Type: order-0400:Log",
              "$ref": "#/definitions/Log"
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          },
          "required": [
            "Offer",
            "PrimaryTravelerIdentifier",
            "Log"
          ]
        }
      ]
    },
    "TermsAndConditionsID": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "TermsAndConditions"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "objID": {
          "description": "A unique identifier within this document for this object.",
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: ota2-0500:Identifier",
          "$ref": "Common_5_0_0.schema.json#/definitions/Identifier"
        },
        "TermsAndConditionsRef": {
          "description": "Refers to the objID on an object defined elsewhere in the current document.",
          "type": "string"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "TermsAndConditions": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "TermsAndConditions"
      },
      "allOf": [
        {
          "$ref": "#/definitions/TermsAndConditionsID"
        },
        {
          "properties": {
            "duration": {
              "description": "Specifies the duration of the trip.",
              "type": "integer",
              "format": "int32"
            },
            "Promotion": {
              "description": "Assigned Type: ota2-0500:Promotion",
              "$ref": "Common_5_0_0.schema.json#/definitions/Promotion"
            },
            "RebateProgram": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RebateProgram"
              },
              "maxItems": 25
            },
            "Description": {
              "description": "Assigned Type: ota2-0500:Description",
              "$ref": "Common_5_0_0.schema.json#/definitions/Description"
            },
            "CancelPenalty": {
              "type": "array",
              "items": {
                "$ref": "Common_5_0_0.schema.json#/definitions/CancelPenalty"
              },
              "maxItems": 10
            },
            "GuaranteePolicy": {
              "description": "Assigned Type: order-0400:GuaranteePolicy",
              "$ref": "#/definitions/GuaranteePolicy"
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "PaymentID": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Payment"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "objID": {
          "description": "A unique identifier within this document for this object.",
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: ota2-0500:Identifier",
          "$ref": "Common_5_0_0.schema.json#/definitions/Identifier"
        },
        "PaymentRef": {
          "description": "Refers to the objID on an object defined elsewhere in the current document.",
          "type": "string"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Payment": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Payment"
      },
      "allOf": [
        {
          "$ref": "#/definitions/PaymentID"
        },
        {
          "properties": {
            "FormOfPayment": {
              "description": "Assigned Type: fin-0400:FormOfPayment",
              "$ref": "Finance_4_0_0.schema.json#/definitions/FormOfPaymentID"
            },
            "Amount": {
              "description": "Assigned Type: ota2-0500:CurrencyAmount",
              "$ref": "Common_5_0_0.schema.json#/definitions/CurrencyAmount"
            },
            "Person": {
              "type": "array",
              "items": {
                "$ref": "Common_5_0_0.schema.json#/definitions/PersonID"
              },
              "maxItems": 99
            },
            "OfferRef": {
              "description": "The offer that the payment is for.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "DateTimeStamp": {
              "description": "Assigned Type: ota2-0500:DateTimeStamp",
              "$ref": "Common_5_0_0.schema.json#/definitions/DateTimeStamp"
            },
            "guaranteeInd": {
              "description": "When true, indicates this represents a guarantee rather than a payment form.",
              "type": "boolean"
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          },
          "required": [
            "FormOfPayment",
            "Amount"
          ]
        }
      ]
    },
    "TotalPrice": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "TotalPrice"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Total": {
          "description": "Assigned Type: ota2-0500:CurrencyAmount",
          "$ref": "Common_5_0_0.schema.json#/definitions/CurrencyAmount"
        },
        "PriceModifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PriceModifiers"
          },
          "maxItems": 99
        },
        "Fee": {
          "type": "array",
          "items": {
            "$ref": "Common_5_0_0.schema.json#/definitions/Fee"
          },
          "maxItems": 99
        },
        "Taxes": {
          "description": "Assigned Type: ota2-0500:Taxes_Summary",
          "$ref": "Common_5_0_0.schema.json#/definitions/Taxes"
        },
        "estimateInd": {
          "description": "When true, indicates the total price is an estimate.",
          "type": "boolean"
        },
        "taxExcludedInd": {
          "description": "Taxes are included in the Total price unless this indicator is set.  Individual taxes may be excluded by indicating as such on the individual tax item.",
          "type": "boolean"
        },
        "ExtensionPoint_Summary": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "Total"
      ],
      "discriminator": "@type"
    },
    "TotalPriceDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "TotalPrice"
      },
      "allOf": [
        {
          "$ref": "#/definitions/TotalPrice"
        },
        {
          "properties": {
            "ProductPrice": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductPrice"
              },
              "maxItems": 99
            },
            "ExtensionPoint_Detail": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "GuaranteePolicy": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "GuaranteePolicy"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "retribution": {
          "description": "An enumerated type defining the type of action taken when the deadline has been exceeded. Valid values: Res Automatically Cancelled, Res No Longer Guaranteed.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: GuaranteeType_RetributionType"
              ]
            }
          },
          "$ref": "#/definitions/Retribution_Enum"
        },
        "code": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            }
          },
          "type": "string",
          "maxLength": 32
        },
        "type": {
          "description": "An enumerated type defining the guarantee to be applied to this reservation.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: GuaranteeType_GuaranteeType"
              ]
            }
          },
          "$ref": "#/definitions/GuaranteeType_Enum"
        },
        "guaranteePolicyType": {
          "description": "GuaranteePolicyType: An enumerated type that defines the guarantee policy applied to the booking restrictions.",
          "$ref": "#/definitions/GuaranteeType_Enum"
        },
        "Deadline": {
          "description": "Assigned Type: order-0400:Deadline",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Deadline"
              ]
            }
          },
          "$ref": "#/definitions/Deadline"
        },
        "Comment": {
          "type": "array",
          "items": {
            "$ref": "Common_5_0_0.schema.json#/definitions/Comment"
          },
          "maxItems": 20
        },
        "Description": {
          "type": "array",
          "items": {
            "$ref": "Common_5_0_0.schema.json#/definitions/Description"
          },
          "maxItems": 9
        },
        "CurrencyCode": {
          "description": "Assigned Type: ota2-0500:CurrencyCode",
          "$ref": "Common_5_0_0.schema.json#/definitions/CurrencyCode"
        },
        "GuaranteesAccepted": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GuaranteesAccepted"
          },
          "maxItems": 100
        },
        "DepositPolicy": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DepositPolicy"
          },
          "maxItems": 10
        },
        "HoldTime": {
          "description": "Assigned Type: ota2-0500:DateTimeStamp",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}time"
              ]
            }
          },
          "$ref": "Common_5_0_0.schema.json#/definitions/DateTimeStamp"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "PersonProductRef": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "PersonProductRef"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "JourneyQueryProduct": {
          "description": "Assigned Type: prod-0500:Journey_Query_Product",
          "$ref": "Product_5_0_0.schema.json#/definitions/JourneyQueryProduct"
        },
        "PersonIdentifier": {
          "description": "Assigned Type: ota2-0500:Person_ID",
          "$ref": "Common_5_0_0.schema.json#/definitions/PersonID"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "PersonDiscount": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "PersonDiscount"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "PersonIdentifier": {
          "description": "Assigned Type: ota2-0500:Person_ID",
          "$ref": "Common_5_0_0.schema.json#/definitions/PersonID"
        },
        "Discount": {
          "description": "Assigned Type: ota2-0500:RateQualifier",
          "$ref": "Common_5_0_0.schema.json#/definitions/RateQualifier"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Policy": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Policy"
      },
      "description": "Policy information regarding the ancillary for example Power Cart rental policy.",
      "properties": {
        "type": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        }
      }
    },
    "Applicability_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "Applicability_Enum"
      },
      "type": "string",
      "enum": [
        "FromPickupLocation",
        "FromDropoffLocation",
        "BeforePickup",
        "AfterDropoff"
      ]
    },
    "FeeType_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "FeeType_Enum"
      },
      "description": "A descriptor for the fee amount, such as low, high and average.",
      "type": "string",
      "enum": [
        "Low",
        "Mid",
        "Average",
        "High"
      ]
    },
    "RateCategory_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "RateCategory_Enum"
      },
      "description": "The RateCategory attribute defines a set of valid values for the category of a rate. Typically rates are offered as either Leisure rates or Business (Corporate) rates, with a business rate usually including additional costs such as the cost of insurance, etc.  This set of values defines the rate categories. Refer to OpenTravel Code List Rate Category (RTC).",
      "type": "string",
      "enum": [
        "Government",
        "Business",
        "Leisure",
        "Employee",
        "VIP",
        "All",
        "Association",
        "Business standard",
        "Corporate",
        "Industry",
        "Fully inclusive",
        "Inclusive",
        "Negotiated",
        "Promotional",
        "Credential",
        "Standard",
        "Consortiums",
        "Conventions",
        "Prepaid rates"
      ]
    },
    "GuaranteesAccepted": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "GuaranteesAccepted"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Type": {
          "type": "array",
          "items": {
            "$ref": "CodeList_4_0_0.schema.json#/definitions/PaymentType_Enum"
          },
          "maxItems": 50
        },
        "PaymentCardCode": {
          "type": "array",
          "items": {
            "$ref": "CodeList_4_0_0.schema.json#/definitions/PaymentCardCode_Enum"
          },
          "maxItems": 30
        },
        "noCardHolderInfoReqInd": {
          "description": "If true, no credit card holder information is required. If false, it is not required.",
          "type": "boolean"
        },
        "nameReqInd": {
          "description": "If true, the credit card holder name is required. If false, it is not required.",
          "type": "boolean"
        },
        "addressReqInd": {
          "description": "If true, credit card holder address is required. If false, it is not required.",
          "type": "boolean"
        },
        "phoneReqInd": {
          "description": "If true, credit card holder phone number is required. If false, it is not required.",
          "type": "boolean"
        },
        "interbankNbrReqInd": {
          "description": "If true, the credit card interbank number is required. If false, it is not required.",
          "type": "boolean"
        },
        "bookingSourceAllowedInd": {
          "description": "When true, the booking source may be used to guarantee the booking.",
          "type": "boolean"
        },
        "corpDiscountNbrAllowedInd": {
          "description": "When true, the corporate discount number may be used to guarantee the booking.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "PaymentsAccepted": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "GuaranteesAccepted"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Type": {
          "type": "array",
          "items": {
            "$ref": "CodeList_4_0_0.schema.json#/definitions/PaymentType_Enum"
          },
          "maxItems": 50
        },
        "PaymentCardCode": {
          "type": "array",
          "items": {
            "$ref": "CodeList_4_0_0.schema.json#/definitions/PaymentCardCode_Enum"
          },
          "maxItems": 30
        },
        "noCardHolderInfoReqInd": {
          "description": "If true, no credit card holder information is required. If false, it is not required.",
          "type": "boolean"
        },
        "nameReqInd": {
          "description": "If true, the credit card holder name is required. If false, it is not required.",
          "type": "boolean"
        },
        "addressReqInd": {
          "description": "If true, credit card holder address is required. If false, it is not required.",
          "type": "boolean"
        },
        "phoneReqInd": {
          "description": "If true, credit card holder phone number is required. If false, it is not required.",
          "type": "boolean"
        },
        "interbankNbrReqInd": {
          "description": "If true, the credit card interbank number is required. If false, it is not required.",
          "type": "boolean"
        },
        "bookingSourceAllowedInd": {
          "description": "When true, the booking source may be used to guarantee the booking.",
          "type": "boolean"
        },
        "corpDiscountNbrAllowedInd": {
          "description": "When true, the corporate discount number may be used to guarantee the booking.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "GuaranteeType_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "GuaranteeType_Enum"
      },
      "description": "An enumerated type defining the guarantee to be applied to this reservation.",
      "type": "string",
      "enum": [
        "GuaranteeRequired",
        "CC/DC/Voucher",
        "Profile",
        "NoGuaranteesAccepted",
        "GuaranteesAccepted",
        "DepositRequired",
        "GuaranteesNotRequired",
        "DepositNotRequired",
        "PrepayRequired",
        "PrepayNotRequired",
        "NoDepositsAccepted"
      ]
    },
    "Retribution_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "Retribution_Enum"
      },
      "description": "An enumerated type defining the type of action taken when the deadline has been exceeded.",
      "type": "string",
      "enum": [
        "ResAutoCancelled",
        "ResNotGuaranteed"
      ]
    },
    "Commission": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Commission"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "statusType": {
          "description": "Indicates the status of the commission payment itself (e.g. no-show indicates that a different commission may be applied if the reservation is not fulfilled).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: CommissionType_StatusType"
              ]
            }
          },
          "$ref": "#/definitions/Commission_Enum"
        },
        "percent": {
          "description": "Assigned Type: ota2-0500:Percent",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Percentage"
              ]
            },
            "examples": [
              {
                "context": "Order",
                "value": "10"
              }
            ]
          },
          "type": "number",
          "format": "float",
          "maximum": 100.0,
          "exclusiveMaximum": false,
          "minimum": 0.0,
          "exclusiveMinimum": false
        },
        "reasonCode": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to8"
              ]
            }
          },
          "type": "string",
          "maxLength": 32
        },
        "billToID": {
          "description": "Assigned Type: ota2-0500:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to8"
              ]
            }
          },
          "type": "string",
          "maxLength": 32
        },
        "maxCommissionUnitApplies": {
          "description": "Maximum number of units for which the commission will be applied. This may be used in conjunction with the frequency attribute.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}positiveInteger"
              ]
            }
          },
          "type": "integer",
          "format": "int32"
        },
        "capAmount": {
          "description": "Assigned Type: ota2-0500:Money",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Money"
              ]
            }
          },
          "type": "number",
          "format": "float"
        },
        "CurrencyCode": {
          "description": "Assigned Type: ota2-0500:CurrencyCode",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: CurrencyCodeGroup"
              ]
            }
          },
          "$ref": "Common_5_0_0.schema.json#/definitions/CurrencyCode"
        },
        "Frequency": {
          "description": "Assigned Type: ota2-0400:ChargeUnit_Enum",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            }
          },
          "$ref": "CodeList_4_0_0.schema.json#/definitions/ChargeUnit_Enum"
        },
        "PersonIdentifier": {
          "description": "Assigned Type: ota2-0500:Person_ID",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}UniqueID_Type"
              ]
            }
          },
          "$ref": "Common_5_0_0.schema.json#/definitions/PersonID"
        },
        "CommissionableAmount": {
          "description": "Assigned Type: order-0400:CommissionableAmount",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}CommissionableAmount"
              ]
            }
          },
          "$ref": "#/definitions/CommissionableAmount"
        },
        "PrepaidAmount": {
          "description": "Assigned Type: ota2-0500:CurrencyAmount",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}PrepaidAmount"
              ]
            }
          },
          "$ref": "Common_5_0_0.schema.json#/definitions/CurrencyAmount"
        },
        "FlatCommission": {
          "description": "Assigned Type: ota2-0500:CurrencyAmount",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}FlatCommission"
              ]
            }
          },
          "$ref": "Common_5_0_0.schema.json#/definitions/CurrencyAmount"
        },
        "PayableAmount": {
          "description": "Assigned Type: ota2-0500:CurrencyAmount",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}CommissionPayableAmount"
              ]
            }
          },
          "$ref": "Common_5_0_0.schema.json#/definitions/CurrencyAmount"
        },
        "Comment": {
          "description": "Assigned Type: ota2-0500:Comment",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}ParagraphType"
              ]
            }
          },
          "$ref": "Common_5_0_0.schema.json#/definitions/Comment"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "CommissionableAmount": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "CommissionableAmount"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "CurrencyAmountGroup": {
          "description": "Assigned Type: ota2-0500:CurrencyAmount",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: CurrencyAmountGroup"
              ]
            }
          },
          "$ref": "Common_5_0_0.schema.json#/definitions/CurrencyAmount"
        },
        "taxInclusiveInd": {
          "description": "When true, indicates that the commission is calculated using the rate including tax. When false, indicates that the commission is calculated using the net rate.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Commission_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "Commission_Enum"
      },
      "type": "string",
      "enum": [
        "Full",
        "Partial",
        "Non-paying",
        "No-show",
        "Adjustment",
        "Commissionable"
      ]
    },
    "RebateProgram": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "RebateProgram"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "programName": {
          "description": "Assigned Type: ota2-0500:String",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            }
          },
          "type": "string",
          "maxLength": 512
        },
        "PaymentCard": {
          "type": "array",
          "items": {
            "$ref": "Finance_4_0_0.schema.json#/definitions/PaymentCard"
          },
          "maxItems": 9
        },
        "ProgramRestrictions": {
          "description": "Assigned Type: ota2-0500:TextFree",
          "$ref": "Common_5_0_0.schema.json#/definitions/TextFree"
        },
        "participationInd": {
          "description": "When true, the supplier is participating in a rebate program, e.g. a VAT (value added tax) program.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Gratuity": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Gratuity"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "AmountOrPercent": {
          "description": "Assigned Type: ota2-0500:AmountOrPercent",
          "$ref": "Common_5_0_0.schema.json#/definitions/AmountOrPercent"
        },
        "mandatoryInd": {
          "description": "When true, a gratuity is mandatory.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Deadline": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "Deadline"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "deadlineType": {
          "description": "An enumerated list of deadline types e.g.Before Arrival.",
          "$ref": "Ground_3_0_0.schema.json#/definitions/DeadlineDropTime_Enum"
        },
        "ExtensionPoint_Shared": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Shared"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "DeadlineTimePeriod": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "Deadline"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Deadline"
        },
        {
          "properties": {
            "minPeriod": {
              "description": "The minimum time period.",
              "type": "integer",
              "format": "int32"
            },
            "maxPeriod": {
              "description": "The maximum time period",
              "type": "integer",
              "format": "int32"
            },
            "timePeriod": {
              "description": "Assigned Type: ota2-0500:StringTiny",
              "type": "string",
              "maxLength": 32
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "DeadlineAbsoluteDate": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "Deadline"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Deadline"
        },
        {
          "properties": {
            "absoluteDateTime": {
              "description": "Assigned Type: ota2-0500:DateTime",
              "type": "string",
              "format": "date-time"
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "PriceModifiers": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "PriceModifiers"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Promotion": {
          "type": "array",
          "items": {
            "$ref": "Common_5_0_0.schema.json#/definitions/Promotion"
          },
          "maxItems": 99
        },
        "RateQualifier": {
          "type": "array",
          "items": {
            "$ref": "Common_5_0_0.schema.json#/definitions/RateQualifier"
          },
          "maxItems": 99
        },
        "PersonIdentifier": {
          "type": "array",
          "items": {
            "$ref": "Common_5_0_0.schema.json#/definitions/PersonID"
          },
          "maxItems": 99
        },
        "ProductRef": {
          "description": "A reference to the product for which the rate modifier applies.",
          "type": "string"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "ProductPrice": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "ProductPrice"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Price": {
          "description": "Assigned Type: ota2-0500:Price",
          "$ref": "Common_5_0_0.schema.json#/definitions/Price"
        },
        "Taxes": {
          "description": "Assigned Type: ota2-0500:Taxes_Summary",
          "$ref": "Common_5_0_0.schema.json#/definitions/Taxes"
        },
        "Fee": {
          "type": "array",
          "items": {
            "$ref": "Common_5_0_0.schema.json#/definitions/Fee"
          },
          "maxItems": 99
        },
        "ProductRef": {
          "description": "Refers to the objID on an object defined elsewhere in the current document.",
          "type": "string"
        },
        "Gratuity": {
          "description": "Assigned Type: order-0400:Gratuity",
          "$ref": "#/definitions/Gratuity"
        },
        "taxExcludedInd": {
          "description": "When present and true, tax is excluded from the price.",
          "type": "boolean"
        },
        "feesIncludedInd": {
          "description": "When present and true, fees are included.",
          "type": "boolean"
        },
        "gratuityIncludedInd": {
          "description": "When present and true, the gratuity is included in the price of this product.",
          "type": "boolean"
        },
        "ExtensionPoint_Shared": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Shared"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "ProductPriceHospitality": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "ProductPrice"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductPrice"
        },
        {
          "properties": {
            "RoomRate": {
              "type": "array",
              "items": {
                "$ref": "Hospitality_2_0_0.schema.json#/definitions/RoomRateID"
              },
              "maxItems": 99
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "DepositPolicy": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "DepositPolicy"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "numberOfNights": {
          "description": "The number of nights used to calculate the deposit required.",
          "type": "integer",
          "format": "int32"
        },
        "BasisType": {
          "description": "Assigned Type: ota2-0400:BasisType",
          "$ref": "CodeList_4_0_0.schema.json#/definitions/BasisType"
        },
        "AmountPercent": {
          "description": "Assigned Type: ota2-0500:AmountPercent",
          "$ref": "Common_5_0_0.schema.json#/definitions/AmountPercent"
        },
        "Deadline": {
          "description": "Assigned Type: order-0400:Deadline",
          "$ref": "#/definitions/Deadline"
        },
        "Description": {
          "description": "Assigned Type: ota2-0500:Description",
          "$ref": "Common_5_0_0.schema.json#/definitions/Description"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "ProviderStateID": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "ProviderStateID"
      },
      "description": "Confirmation ID and related information that identifies who generated that ID.",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 32
        },
        "provider": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "description": {
          "description": "Assigned Type: ota2-0500:StringLong",
          "type": "string",
          "maxLength": 4096
        }
      }
    },
    "Event": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Event"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "dateTime": {
          "description": "Assigned Type: ota2-0500:DateTime",
          "type": "string",
          "format": "date-time"
        },
        "initiator": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "authorizor": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "processor": {
          "description": "Assigned Type: ota2-0500:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "ActionRequest": {
          "description": "Assigned Type: order-0400:ActionRequest",
          "$ref": "#/definitions/ActionRequest"
        },
        "ResultingState": {
          "description": "Assigned Type: ota2-0400:OrderState_Enum",
          "$ref": "CodeList_4_0_0.schema.json#/definitions/OrderState_Enum"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "dateTime",
        "initiator",
        "processor",
        "ActionRequest",
        "ResultingState"
      ],
      "discriminator": "@type"
    },
    "ActionRequest": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "ActionRequest"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "URI": {
          "description": "The operation identifier.",
          "type": "string",
          "maxLength": 512
        },
        "RequestID": {
          "description": "The unique identifier of the request.",
          "type": "string",
          "maxLength": 512
        },
        "Description": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 512
          },
          "maxItems": 100
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "URI",
        "RequestID"
      ],
      "discriminator": "@type"
    },
    "Log": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Log"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Event": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Event"
          },
          "maxItems": 1000,
          "minItems": 1
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "Event"
      ],
      "discriminator": "@type"
    },
    "CreateOrderRQ": {
      "x-otm-entity": {
        "EntityType": "Operation",
        "EntityName": "Order_CreateOrder"
      },
      "allOf": [
        {
          "$ref": "built-ins/OTA2_Message_v2.0.0.schema.json#/definitions/OTA2_Request_Payload"
        },
        {
          "properties": {
            "PayloadStdAttributes": {
              "description": "Assigned Type: ota2-0500:PayloadStdAttributes",
              "$ref": "Common_5_0_0.schema.json#/definitions/PayloadStdAttributes"
            },
            "POS": {
              "description": "Assigned Type: ota2-0500:POS_Summary",
              "$ref": "Common_5_0_0.schema.json#/definitions/POS"
            },
            "Order": {
              "description": "Assigned Type: order-0400:Order",
              "$ref": "#/definitions/OrderID"
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "CreateOrderRS": {
      "x-otm-entity": {
        "EntityType": "Operation",
        "EntityName": "Order_CreateOrder"
      },
      "allOf": [
        {
          "$ref": "built-ins/OTA2_Message_v2.0.0.schema.json#/definitions/OTA2_Response_Payload"
        },
        {
          "properties": {
            "PayloadStdAttributes": {
              "description": "Assigned Type: ota2-0500:PayloadStdAttributes",
              "$ref": "Common_5_0_0.schema.json#/definitions/PayloadStdAttributes"
            },
            "Result": {
              "description": "Assigned Type: ota2-0500:Result_Summary",
              "$ref": "Common_5_0_0.schema.json#/definitions/Result"
            },
            "Order": {
              "description": "Assigned Type: order-0400:Order",
              "$ref": "#/definitions/OrderID"
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "CreateOrderNotif": {
      "x-otm-entity": {
        "EntityType": "Operation",
        "EntityName": "Order_CreateOrder"
      },
      "allOf": [
        {
          "$ref": "built-ins/OTA2_Message_v2.0.0.schema.json#/definitions/OTA2_Notif_Payload"
        },
        {
          "properties": {
            "PayloadStdAttributes": {
              "description": "Assigned Type: ota2-0500:PayloadStdAttributes",
              "$ref": "Common_5_0_0.schema.json#/definitions/PayloadStdAttributes"
            },
            "POS": {
              "description": "Assigned Type: ota2-0500:POS_Summary",
              "$ref": "Common_5_0_0.schema.json#/definitions/POS"
            },
            "Result": {
              "description": "Assigned Type: ota2-0500:Result_Summary",
              "$ref": "Common_5_0_0.schema.json#/definitions/Result"
            },
            "Order": {
              "description": "Assigned Type: order-0400:Order",
              "$ref": "#/definitions/OrderID"
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "DeleteOrderRQ": {
      "x-otm-entity": {
        "EntityType": "Operation",
        "EntityName": "Order_DeleteOrder"
      },
      "allOf": [
        {
          "$ref": "built-ins/OTA2_Message_v2.0.0.schema.json#/definitions/OTA2_Request_Payload"
        },
        {
          "properties": {
            "PayloadStdAttributes": {
              "description": "Assigned Type: ota2-0500:PayloadStdAttributes",
              "$ref": "Common_5_0_0.schema.json#/definitions/PayloadStdAttributes"
            },
            "POS": {
              "description": "Assigned Type: ota2-0500:POS_Summary",
              "$ref": "Common_5_0_0.schema.json#/definitions/POS"
            },
            "Order": {
              "description": "Assigned Type: order-0400:Order",
              "$ref": "#/definitions/OrderID"
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "DeleteOrderRS": {
      "x-otm-entity": {
        "EntityType": "Operation",
        "EntityName": "Order_DeleteOrder"
      },
      "allOf": [
        {
          "$ref": "built-ins/OTA2_Message_v2.0.0.schema.json#/definitions/OTA2_Response_Payload"
        },
        {
          "properties": {
            "PayloadStdAttributes": {
              "description": "Assigned Type: ota2-0500:PayloadStdAttributes",
              "$ref": "Common_5_0_0.schema.json#/definitions/PayloadStdAttributes"
            },
            "Result": {
              "description": "Assigned Type: ota2-0500:Result_Summary",
              "$ref": "Common_5_0_0.schema.json#/definitions/Result"
            },
            "OrderIdentifier": {
              "description": "Assigned Type: order-0400:Order_ID",
              "$ref": "#/definitions/OrderID"
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "DeleteOrderNotif": {
      "x-otm-entity": {
        "EntityType": "Operation",
        "EntityName": "Order_DeleteOrder"
      },
      "allOf": [
        {
          "$ref": "built-ins/OTA2_Message_v2.0.0.schema.json#/definitions/OTA2_Notif_Payload"
        },
        {
          "properties": {
            "PayloadStdAttributes": {
              "description": "Assigned Type: ota2-0500:PayloadStdAttributes",
              "$ref": "Common_5_0_0.schema.json#/definitions/PayloadStdAttributes"
            },
            "POS": {
              "description": "Assigned Type: ota2-0500:POS_Summary",
              "$ref": "Common_5_0_0.schema.json#/definitions/POS"
            },
            "Result": {
              "description": "Assigned Type: ota2-0500:Result_Summary",
              "$ref": "Common_5_0_0.schema.json#/definitions/Result"
            },
            "OrderIdentifier": {
              "description": "Assigned Type: order-0400:Order_ID",
              "$ref": "#/definitions/OrderID"
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    }
  },
  "oneOf": [
    {
      "properties": {
        "OfferIdentifier": {
          "$ref": "#/definitions/OfferID"
        }
      },
      "required": [
        "OfferIdentifier"
      ]
    },
    {
      "properties": {
        "OfferSummary": {
          "$ref": "#/definitions/Offer"
        }
      },
      "required": [
        "OfferSummary"
      ]
    },
    {
      "properties": {
        "OfferQueryProduct": {
          "$ref": "#/definitions/OfferQueryProduct"
        }
      },
      "required": [
        "OfferQueryProduct"
      ]
    },
    {
      "properties": {
        "OrderIdentifier": {
          "$ref": "#/definitions/OrderID"
        }
      },
      "required": [
        "OrderIdentifier"
      ]
    },
    {
      "properties": {
        "OrderSummary": {
          "$ref": "#/definitions/Order"
        }
      },
      "required": [
        "OrderSummary"
      ]
    },
    {
      "properties": {
        "TermsAndConditionsIdentifier": {
          "$ref": "#/definitions/TermsAndConditionsID"
        }
      },
      "required": [
        "TermsAndConditionsIdentifier"
      ]
    },
    {
      "properties": {
        "TermsAndConditionsSummary": {
          "$ref": "#/definitions/TermsAndConditions"
        }
      },
      "required": [
        "TermsAndConditionsSummary"
      ]
    },
    {
      "properties": {
        "PaymentIdentifier": {
          "$ref": "#/definitions/PaymentID"
        }
      },
      "required": [
        "PaymentIdentifier"
      ]
    },
    {
      "properties": {
        "PaymentSummary": {
          "$ref": "#/definitions/Payment"
        }
      },
      "required": [
        "PaymentSummary"
      ]
    },
    {
      "properties": {
        "TotalPriceSummary": {
          "$ref": "#/definitions/TotalPrice"
        }
      },
      "required": [
        "TotalPriceSummary"
      ]
    },
    {
      "properties": {
        "TotalPriceDetail": {
          "$ref": "#/definitions/TotalPriceDetail"
        }
      },
      "required": [
        "TotalPriceDetail"
      ]
    },
    {
      "properties": {
        "GuaranteePolicy": {
          "$ref": "#/definitions/GuaranteePolicy"
        }
      },
      "required": [
        "GuaranteePolicy"
      ]
    },
    {
      "properties": {
        "PersonProductRef": {
          "$ref": "#/definitions/PersonProductRef"
        }
      },
      "required": [
        "PersonProductRef"
      ]
    },
    {
      "properties": {
        "PersonDiscount": {
          "$ref": "#/definitions/PersonDiscount"
        }
      },
      "required": [
        "PersonDiscount"
      ]
    },
    {
      "properties": {
        "GuaranteesAccepted": {
          "$ref": "#/definitions/GuaranteesAccepted"
        }
      },
      "required": [
        "GuaranteesAccepted"
      ]
    },
    {
      "properties": {
        "PaymentsAccepted": {
          "$ref": "#/definitions/GuaranteesAccepted"
        }
      },
      "required": [
        "PaymentsAccepted"
      ]
    },
    {
      "properties": {
        "Commission": {
          "$ref": "#/definitions/Commission"
        }
      },
      "required": [
        "Commission"
      ]
    },
    {
      "properties": {
        "CommissionableAmount": {
          "$ref": "#/definitions/CommissionableAmount"
        }
      },
      "required": [
        "CommissionableAmount"
      ]
    },
    {
      "properties": {
        "RebateProgram": {
          "$ref": "#/definitions/RebateProgram"
        }
      },
      "required": [
        "RebateProgram"
      ]
    },
    {
      "properties": {
        "Gratuity": {
          "$ref": "#/definitions/Gratuity"
        }
      },
      "required": [
        "Gratuity"
      ]
    },
    {
      "properties": {
        "DeadlineShared": {
          "$ref": "#/definitions/Deadline"
        }
      },
      "required": [
        "DeadlineShared"
      ]
    },
    {
      "properties": {
        "DeadlineTimePeriod": {
          "$ref": "#/definitions/DeadlineTimePeriod"
        }
      },
      "required": [
        "DeadlineTimePeriod"
      ]
    },
    {
      "properties": {
        "DeadlineAbsoluteDate": {
          "$ref": "#/definitions/DeadlineAbsoluteDate"
        }
      },
      "required": [
        "DeadlineAbsoluteDate"
      ]
    },
    {
      "properties": {
        "PriceModifiers": {
          "$ref": "#/definitions/PriceModifiers"
        }
      },
      "required": [
        "PriceModifiers"
      ]
    },
    {
      "properties": {
        "ProductPriceShared": {
          "$ref": "#/definitions/ProductPrice"
        }
      },
      "required": [
        "ProductPriceShared"
      ]
    },
    {
      "properties": {
        "ProductPriceHospitality": {
          "$ref": "#/definitions/ProductPriceHospitality"
        }
      },
      "required": [
        "ProductPriceHospitality"
      ]
    },
    {
      "properties": {
        "DepositPolicy": {
          "$ref": "#/definitions/DepositPolicy"
        }
      },
      "required": [
        "DepositPolicy"
      ]
    },
    {
      "properties": {
        "Event": {
          "$ref": "#/definitions/Event"
        }
      },
      "required": [
        "Event"
      ]
    },
    {
      "properties": {
        "ActionRequest": {
          "$ref": "#/definitions/ActionRequest"
        }
      },
      "required": [
        "ActionRequest"
      ]
    },
    {
      "properties": {
        "Log": {
          "$ref": "#/definitions/Log"
        }
      },
      "required": [
        "Log"
      ]
    },
    {
      "properties": {
        "CreateOrderRQ": {
          "$ref": "#/definitions/CreateOrderRQ"
        }
      },
      "required": [
        "CreateOrderRQ"
      ]
    },
    {
      "properties": {
        "CreateOrderRS": {
          "$ref": "#/definitions/CreateOrderRS"
        }
      },
      "required": [
        "CreateOrderRS"
      ]
    },
    {
      "properties": {
        "CreateOrderNotif": {
          "$ref": "#/definitions/CreateOrderNotif"
        }
      },
      "required": [
        "CreateOrderNotif"
      ]
    },
    {
      "properties": {
        "DeleteOrderRQ": {
          "$ref": "#/definitions/DeleteOrderRQ"
        }
      },
      "required": [
        "DeleteOrderRQ"
      ]
    },
    {
      "properties": {
        "DeleteOrderRS": {
          "$ref": "#/definitions/DeleteOrderRS"
        }
      },
      "required": [
        "DeleteOrderRS"
      ]
    },
    {
      "properties": {
        "DeleteOrderNotif": {
          "$ref": "#/definitions/DeleteOrderNotif"
        }
      },
      "required": [
        "DeleteOrderNotif"
      ]
    }
  ]
}
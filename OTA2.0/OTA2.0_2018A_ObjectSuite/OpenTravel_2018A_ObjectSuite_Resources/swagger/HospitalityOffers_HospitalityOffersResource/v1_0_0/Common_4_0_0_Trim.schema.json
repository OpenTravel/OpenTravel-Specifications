{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Common",
  "x-otm-library": {
    "LibraryName": "Common",
    "LibraryVersion": "4.0.0",
    "LibraryStatus": "FINAL",
    "SourceFile": "/Common_4_0_0.otm",
    "CompilerVersion": "4.0-SNAPSHOT",
    "CompileDate": "2018-04-05T08:59:59.734-0400"
  },
  "definitions": {
    "NameType": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "NameType"
      },
      "description": "OTA Code list: Name Type\\tNAM\\t\\n\\t1\\tFormer\\n\\t2\\tNickname\\n\\t3\\tAlternate\\n\\t4\\tMaiden",
      "type": "string",
      "enum": [
        "Alternate",
        "Former",
        "Maiden",
        "Nickname"
      ]
    },
    "OptInStatus_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "OptInStatus_Enum"
      },
      "type": "string",
      "enum": [
        "OptedIn",
        "OptedOut",
        "Unknown"
      ]
    },
    "TextFormatType": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "TextFormatType"
      },
      "type": "string",
      "enum": [
        "PlainText",
        "HTML"
      ]
    },
    "YesNoInherit_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "YesNoInherit_Enum"
      },
      "type": "string",
      "enum": [
        "Yes",
        "No",
        "Inherit"
      ]
    },
    "AddressBldgRoom": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "AddressBldgRoom"
      },
      "description": "A string with a minimum length of 0 and a maximum length of 512.",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 512
        },
        "buldingInd": {
          "description": "When true, the information is a building name.",
          "type": "boolean"
        }
      }
    },
    "AddressStreetNumber": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "AddressStreetNumber"
      },
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Extension: StreetNmbrType"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 128
        },
        "streetNmbrSuffix": {
          "description": "Assigned Type: ota2-0400:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to8"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "StreetNmbrSuffix"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "B"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "streetDirection": {
          "description": "Assigned Type: ota2-0400:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to8"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "StreetDirection"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "NNW"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "ruralRouteNmbr": {
          "description": "Assigned Type: ota2-0400:RuralRouteNumber",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}NumericStringLength1to5"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "RuralRouteNmbr"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "88"
              }
            ]
          },
          "type": "string",
          "pattern": "[0-9]{1,5}"
        },
        "pO_Box": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": "98567499"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        }
      }
    },
    "AmountPercent": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "AmountPercent"
      },
      "properties": {
        "amount": {
          "description": "Specifies the amount.",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": "5000"
              }
            ]
          },
          "type": "number",
          "format": "float"
        },
        "percent": {
          "description": "Assigned Type: ota2-0400:Percent",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": "5"
              }
            ]
          },
          "type": "number",
          "format": "float",
          "maximum": 100.0,
          "exclusiveMaximum": false,
          "minimum": 0.0,
          "exclusiveMinimum": false
        },
        "currencyCode": {
          "description": "Assigned Type: ota2-0400:CurrencyCode_ISO4217",
          "type": "string",
          "pattern": "[a-zA-Z]{3}"
        },
        "decimalPlaces": {
          "description": "Assigned Type: ota2-0400:String",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": "2"
              }
            ]
          },
          "type": "string",
          "maxLength": 512
        }
      }
    },
    "CompanyName": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "CompanyName"
      },
      "description": "Identifies a company by name.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength0to128"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 512
        },
        "division": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Division"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "Travel Division"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "department": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Department"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "Adventure department"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "shortName": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CompanyShortName"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "Adventure Inc"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "code": {
          "description": "Assigned Type: ota2-0400:Code",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Code"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "AI"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "codeContext": {
          "description": "Assigned Type: ota2-0400:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "description": {
          "description": "Assigned Type: ota2-0400:String",
          "type": "string",
          "maxLength": 512
        }
      }
    },
    "Country": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Country"
      },
      "description": "ISO 3166 code for a country.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}ISO3166"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "pattern": "[a-zA-Z]{2}"
        },
        "name": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength0to64"
              ]
            },
            "examples": [
              {
                "context": "Common",
                "value": "Ireland"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        }
      }
    },
    "CurrencyCode": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "CurrencyCode"
      },
      "description": "An ISO 4217 (3) alpha character code that specifies a monetary unit.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}AlphaLength3"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "pattern": "[a-zA-Z]{3}"
        },
        "decimalPlaces": {
          "description": "The ISO 4217 standard \\\"minor unit\\\" is typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces\u003d\\\"2\\\" to represent $85).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Changed type from {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}nonNegativeInteger.",
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "DecimalPlaces"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "2"
              }
            ]
          },
          "type": "string"
        }
      }
    },
    "CurrencyAmount": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "CurrencyAmount"
      },
      "description": "A monetary amount.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Money"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "number",
          "format": "float"
        },
        "currencyCode": {
          "description": "Assigned Type: ota2-0400:CurrencyCode_ISO4217",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}AlphaLength3"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CurrencyCode"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "USD"
              }
            ]
          },
          "type": "string",
          "pattern": "[a-zA-Z]{3}"
        },
        "minorUnit": {
          "description": "Assigned Type: ota2-0400:NonNegativeInteger",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Changed type from {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}nonNegativeInteger.",
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "DecimalPlaces"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "2"
              }
            ]
          },
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        }
      }
    },
    "DateTimeStamp": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "DateTimeStamp"
      },
      "description": "Time stamp of the creation.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}dateTime"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "format": "date-time"
        },
        "create": {
          "description": "Time stamp of the creation.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}dateTime"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CreateDateTime"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        },
        "creatorID": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CreatorID"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "c123456789"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "lastModify": {
          "description": "Time stamp of last modification.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}dateTime"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "LastModifyDateTime"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        },
        "lastModifierID": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "LastModifierID"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "m987654321"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "purge": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}date"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "PurgeDate"
              }
            ]
          },
          "type": "string",
          "format": "date"
        }
      }
    },
    "DateEffectiveExpire": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "DateEffectiveExpire"
      },
      "description": "Used to identify the effective date and\\/or expiration date.",
      "properties": {
        "effective": {
          "description": "Indicates the starting date.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}date"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "EffectiveDate"
              }
            ]
          },
          "type": "string",
          "format": "date"
        },
        "expire": {
          "description": "Indicates the ending date.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}date"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ExpireDate"
              }
            ]
          },
          "type": "string",
          "format": "date"
        },
        "expireDateExclusiveInd": {
          "description": "When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15  the last date of the period is Oct 14).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}boolean"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ExpireDateExclusiveInd"
              }
            ]
          },
          "type": "boolean"
        }
      }
    },
    "Identifier": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Identifier"
      },
      "description": "Identifier provides the ability to create a globally unique identifier.   This could be GUID a UUID or any other string that an organization that distinctly identifies the specific object.\\n\\nIdeally, for the identifier to be globally unique it must have a system provided identifier and the system must be identified using a global naming authority. System identification uses the domain naming system (DNS) to assure they are globally unique and should be an URL. The system provided ID will typically be a primary or surrogate key in a database.\\n\\nThe URL, system and company attributes can be omitted only when the system context can be implied by a parent or ancestor element.",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 128
        },
        "url": {
          "description": "Uri of the creating system. The URI should be an URL and be globally unique. Should only be omitted when the context is clearly implied for the containing document.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Identifier provides the ability to create a globally unique identifier. For the identifier to be globally unique it must have a system provided identifier and the system must be identified using a global naming authority. System identification uses the domain naming system (DNS) to assure they are globally unique and should be an URL. The system provided ID will typically be a primary or surrogate key in a database."
              ]
            }
          },
          "type": "string"
        },
        "system": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": "sysABC3344"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "organization": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": "Acme"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        }
      }
    },
    "PersonName": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "PersonName"
      },
      "description": "This provides name information for a person.",
      "properties": {
        "@type": {
          "type": "string"
        },
        "Prefix": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 32
          },
          "maxItems": 3
        },
        "Given": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 128
          },
          "maxItems": 5
        },
        "Middle": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 128
          },
          "maxItems": 5
        },
        "Surname": {
          "description": "Family name, last name. \\nNote: Simple form of person name should be used for the full name.\\nMay also be used for full name if the sending system does not have the ability to separate a full name into its parts, e.g. the surname element may be used to pass the full name.",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": "Smith"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "ExtensionPoint_Summary": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "Surname"
      ],
      "discriminator": "@type"
    },
    "RelatedTraveler_Simple_Person_Name": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "PersonName"
      },
      "description": "This provides name information for a person.",
      "properties": {
        "@type": {
          "type": "string"
        },
        "Prefix": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 32
          },
          "maxItems": 3
        },
        "Given": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 128
          },
          "maxItems": 5
        },
        "Middle": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 128
          },
          "maxItems": 5
        },
        "Surname": {
          "description": "Family name, last name. \\nNote: Simple form of person name should be used for the full name.\\nMay also be used for full name if the sending system does not have the ability to separate a full name into its parts, e.g. the surname element may be used to pass the full name.",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": "Smith"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "ExtensionPoint_Summary": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "Surname"
      ],
      "discriminator": "@type"
    },
    "PersonNameDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "PersonName"
      },
      "description": "This provides name information for a person.",
      "allOf": [
        {
          "$ref": "#/definitions/PersonName"
        },
        {
          "properties": {
            "type": {
              "description": "Type of name of the individual, such as former, nickname, alternate or alias name. Refer to OpenTravel Code List Name Type (NAM).",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "NameType"
                  }
                ]
              },
              "$ref": "#/definitions/NameType"
            },
            "language": {
              "description": "The language the name is represented in, e.g. an Eastern name versus a Western name.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}language"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Language"
                  }
                ],
                "examples": [
                  {
                    "context": "Common",
                    "value": "en"
                  }
                ]
              },
              "type": "string"
            },
            "SurnamePrefix": {
              "description": "The surname prefix, e.g \\\"van der\\\", \\\"von\\\", \\\"de\\\".",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "SurnamePrefix"
                  }
                ]
              },
              "type": "string",
              "maxLength": 32
            },
            "Suffix": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 32
              },
              "maxItems": 3
            },
            "Title": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 32
              },
              "maxItems": 3
            },
            "PersonDocument": {
              "description": "Assigned Type: ota2-0400:PersonDocument",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Document"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Document"
                  }
                ]
              },
              "$ref": "#/definitions/PersonDocument"
            },
            "Privacy": {
              "description": "Assigned Type: ota2-0400:Privacy",
              "$ref": "#/definitions/Privacy"
            },
            "defaultInd": {
              "description": "If true, this is the default or primary name within a collection of names.",
              "type": "boolean"
            },
            "ExtensionPoint_Detail": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "RelatedTraveler_Simple_Person_NameDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "PersonName"
      },
      "description": "This provides name information for a person.",
      "allOf": [
        {
          "$ref": "#/definitions/PersonName"
        },
        {
          "properties": {
            "type": {
              "description": "Type of name of the individual, such as former, nickname, alternate or alias name. Refer to OpenTravel Code List Name Type (NAM).",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "NameType"
                  }
                ]
              },
              "$ref": "#/definitions/NameType"
            },
            "language": {
              "description": "The language the name is represented in, e.g. an Eastern name versus a Western name.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}language"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Language"
                  }
                ],
                "examples": [
                  {
                    "context": "Common",
                    "value": "en"
                  }
                ]
              },
              "type": "string"
            },
            "SurnamePrefix": {
              "description": "The surname prefix, e.g \\\"van der\\\", \\\"von\\\", \\\"de\\\".",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "SurnamePrefix"
                  }
                ]
              },
              "type": "string",
              "maxLength": 32
            },
            "Suffix": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 32
              },
              "maxItems": 3
            },
            "Title": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 32
              },
              "maxItems": 3
            },
            "PersonDocument": {
              "description": "Assigned Type: ota2-0400:PersonDocument",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Document"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Document"
                  }
                ]
              },
              "$ref": "#/definitions/PersonDocument"
            },
            "Privacy": {
              "description": "Assigned Type: ota2-0400:Privacy",
              "$ref": "#/definitions/Privacy"
            },
            "defaultInd": {
              "description": "If true, this is the default or primary name within a collection of names.",
              "type": "boolean"
            },
            "ExtensionPoint_Detail": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "RoomPrice": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "RoomPrice"
      },
      "description": "Specifies price after all applicable taxes of a product such as the rate for a room or fare for a flight.",
      "properties": {
        "value": {
          "type": "number",
          "format": "float"
        },
        "amountBeforeTax": {
          "description": "The price before taxes are applied.",
          "type": "number",
          "format": "float"
        },
        "currencyCode": {
          "description": "Assigned Type: ota2-0400:CurrencyCode_ISO4217",
          "type": "string",
          "pattern": "[a-zA-Z]{3}"
        }
      }
    },
    "Privacy": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Privacy"
      },
      "description": "Allows for control of the sharing of data between parties.",
      "properties": {
        "shareMarketInd": {
          "description": "Permission for sharing data for marketing purposes.",
          "$ref": "#/definitions/YesNoInherit_Enum"
        },
        "shareSyncInd": {
          "description": "Permission for sharing data for synchronization of information held by other travel service providers.",
          "$ref": "#/definitions/YesNoInherit_Enum"
        },
        "optInStatus": {
          "description": "If present and set to opt out, a customer has explicitly opted out of marketing communication. When set to opt out it overrides the ShareMarketInd.",
          "$ref": "#/definitions/OptInStatus_Enum"
        },
        "optInDate": {
          "description": "The date and time of opt in.",
          "type": "string",
          "format": "date-time"
        },
        "optOutDate": {
          "description": "The date and time of opt out.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "StateProv": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "StateProv"
      },
      "description": "The standard code or abbreviation for the state, province, or region.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StateProvCodeType"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 8,
          "minLength": 2
        },
        "name": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength0to64"
              ]
            },
            "examples": [
              {
                "context": "Common",
                "value": "Texas"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        }
      }
    },
    "Telephone": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Telephone"
      },
      "description": "Information about a telephone number, including the actual number and its usage.",
      "properties": {
        "@type": {
          "type": "string"
        },
        "countryAccessCode": {
          "description": "Assigned Type: ota2-0400:TelephoneCountryAccessCode",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}NumericStringLength1to3"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CountryAccessCode"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "01"
              }
            ]
          },
          "type": "string",
          "pattern": "[0-9]{1,3}"
        },
        "areaCityCode": {
          "description": "Assigned Type: ota2-0400:TelephoneAreaCityCode",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}NumericStringLength1to8"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "AreaCityCode"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "202"
              }
            ]
          },
          "type": "string",
          "pattern": "[0-9]{1,8}"
        },
        "phoneNumber": {
          "description": "Assigned Type: ota2-0400:TelephoneNumber",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "PhoneNumber"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "5555555"
              }
            ]
          },
          "type": "string",
          "pattern": "[0-9]{7,20}"
        },
        "extension": {
          "description": "Assigned Type: ota2-0400:TelephoneExtension",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}NumericStringLength1to5"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Extension"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "237"
              }
            ]
          },
          "type": "string",
          "pattern": "[0-9]{1,5}"
        },
        "id": {
          "description": "Used elsewhere in the message to reference a specific telephone number (including faxes).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}RPH_Type"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "RPH"
              }
            ]
          },
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/Enum_TelephoneRole"
        },
        "ExtensionPoint_Summary": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "phoneNumber"
      ],
      "discriminator": "@type"
    },
    "TelephoneDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Telephone"
      },
      "description": "Information about a telephone number, including the actual number and its usage.",
      "allOf": [
        {
          "$ref": "#/definitions/Telephone"
        },
        {
          "properties": {
            "pIN": {
              "description": "Assigned Type: ota2-0400:StringTiny",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to8"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "PIN"
                  }
                ],
                "examples": [
                  {
                    "context": "Common",
                    "value": "1234"
                  }
                ]
              },
              "type": "string",
              "maxLength": 32
            },
            "remark": {
              "description": "Assigned Type: ota2-0400:StringText",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to128"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Remark"
                  }
                ],
                "examples": [
                  {
                    "context": "Common",
                    "value": "Don\u0027t call after 10:00PM"
                  }
                ]
              },
              "type": "string",
              "maxLength": 4096
            },
            "Privacy": {
              "description": "Assigned Type: ota2-0400:Privacy",
              "$ref": "#/definitions/Privacy"
            },
            "PhoneLocationType": {
              "description": "Assigned Type: ota2-0300:PhoneLocation_Enum",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "PhoneLocationType"
                  }
                ]
              },
              "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/PhoneLocation_Enum"
            },
            "PhoneTechType": {
              "description": "Assigned Type: ota2-0300:PhoneTechType_Enum",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "PhoneTechType"
                  }
                ]
              },
              "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/PhoneTechType_Enum"
            },
            "PhoneUseType": {
              "description": "Assigned Type: ota2-0300:PhoneUseType_Enum",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "PhoneUseType"
                  }
                ]
              },
              "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/PhoneUseType_Enum"
            },
            "defaultInd": {
              "description": "When true, indicates a default value should be used.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}boolean"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "DefaultInd"
                  }
                ]
              },
              "type": "boolean"
            },
            "ExtensionPoint_Detail": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "Enum_TelephoneRole": {
      "properties": {
        "value": {
          "$ref": "#/definitions/Enum_TelephoneRole_Open"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "Enum_TelephoneRole_Base": {
      "type": "string",
      "enum": [
        "Home",
        "Office",
        "Mobile",
        "Other"
      ]
    },
    "Enum_TelephoneRole_Open": {
      "type": "string",
      "enum": [
        "Home",
        "Office",
        "Mobile",
        "Other",
        "Other_"
      ]
    },
    "TextFree": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "TextFree"
      },
      "description": "Textual information to provide descriptions and\\/or additional information.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 4096
        },
        "language": {
          "description": "Language of the text.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: LanguageGroup"
              ]
            },
            "examples": [
              {
                "context": "Common",
                "value": "en"
              }
            ]
          },
          "type": "string"
        }
      }
    },
    "Text": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Text"
      },
      "description": "Provides text and indicates whether it is formatted or not.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 4096
        },
        "language": {
          "description": "The language in which the text is provided.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: LanguageGroup"
              ]
            },
            "examples": [
              {
                "context": "Common",
                "value": "en"
              }
            ]
          },
          "type": "string"
        },
        "textFormat": {
          "description": "Indicates the format of text used in the description e.g. unformatted  or html.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: FormattedTextTextType_TextFormat"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "TextFormat"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "Sample Formatted text"
              }
            ]
          },
          "$ref": "#/definitions/TextFormatType"
        }
      }
    },
    "TextParagraph": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "TextParagraph"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "name": {
          "description": "Assigned Type: ota2-0400:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Name"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "paragraph name"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "number": {
          "description": "The sequence number for the paragraph.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Changed type from {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}nonNegativeInteger.",
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ParagraphNumber"
              }
            ]
          },
          "type": "integer",
          "format": "int32"
        },
        "Text": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Text"
          },
          "maxItems": 1000
        },
        "Image": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageID"
          },
          "maxItems": 1000
        },
        "URL": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 1000
        },
        "ParagraphListItem": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParagraphListItem"
          },
          "maxItems": 1000
        },
        "DateTimeStamp": {
          "description": "Assigned Type: ota2-0400:DateTimeStamp",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: DateTimeStampGroup"
              ]
            }
          },
          "$ref": "#/definitions/DateTimeStamp"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Comment": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "TextParagraph"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "name": {
          "description": "Assigned Type: ota2-0400:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Name"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "paragraph name"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "number": {
          "description": "The sequence number for the paragraph.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Changed type from {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}nonNegativeInteger.",
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ParagraphNumber"
              }
            ]
          },
          "type": "integer",
          "format": "int32"
        },
        "Text": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Text"
          },
          "maxItems": 1000
        },
        "Image": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageID"
          },
          "maxItems": 1000
        },
        "URL": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 1000
        },
        "ParagraphListItem": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParagraphListItem"
          },
          "maxItems": 1000
        },
        "DateTimeStamp": {
          "description": "Assigned Type: ota2-0400:DateTimeStamp",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: DateTimeStampGroup"
              ]
            }
          },
          "$ref": "#/definitions/DateTimeStamp"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Description": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "TextParagraph"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "name": {
          "description": "Assigned Type: ota2-0400:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Name"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "paragraph name"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "number": {
          "description": "The sequence number for the paragraph.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Changed type from {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}nonNegativeInteger.",
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ParagraphNumber"
              }
            ]
          },
          "type": "integer",
          "format": "int32"
        },
        "Text": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Text"
          },
          "maxItems": 1000
        },
        "Image": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageID"
          },
          "maxItems": 1000
        },
        "URL": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 1000
        },
        "ParagraphListItem": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParagraphListItem"
          },
          "maxItems": 1000
        },
        "DateTimeStamp": {
          "description": "Assigned Type: ota2-0400:DateTimeStamp",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: DateTimeStampGroup"
              ]
            }
          },
          "$ref": "#/definitions/DateTimeStamp"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "TimeSpan": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "TimeSpan"
      },
      "description": "Specifies the arrival date and departure date which covers the whole Reservation.",
      "properties": {
        "start": {
          "description": "Assigned Type: ota2-0400:DateTime",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": "2016-08-22T19:32:52Z"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        },
        "end": {
          "description": "Assigned Type: ota2-0400:DateTime",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": "2016-08-28T04:32:52Z"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "start",
        "end"
      ]
    },
    "URL": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "URL"
      },
      "description": "Web site address, in IETF specified format.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}anyURI"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string"
        },
        "type": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Type"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "defaultInd": {
          "description": "Indicates whether or not this is the default URL.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: DefaultIndGroup"
              ]
            }
          },
          "type": "boolean"
        }
      }
    },
    "ParagraphListItem": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "ParagraphListItem"
      },
      "properties": {
        "listItem": {
          "description": "The item or sequence number.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}integer"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ListItem"
              }
            ]
          },
          "type": "integer",
          "format": "int32"
        },
        "text2": {
          "description": "Assigned Type: ota2-0400:Text",
          "type": "string",
          "maxLength": 4096
        },
        "language": {
          "description": "The language in which the text is provided.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: LanguageGroup"
              ]
            },
            "examples": [
              {
                "context": "Common",
                "value": "en"
              }
            ]
          },
          "type": "string"
        },
        "textFormat": {
          "description": "Indicates the format of text used in the description e.g. unformatted  or html.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: FormattedTextTextType_TextFormat"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "TextFormat"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "Sample Formatted text"
              }
            ]
          },
          "$ref": "#/definitions/TextFormatType"
        }
      }
    },
    "DateTimeSpanWindows": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "DateTimeSpanWindows"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "TimeSpan": {
          "description": "Assigned Type: ota2-0400:TimeSpan",
          "$ref": "#/definitions/TimeSpan"
        },
        "ExtensionPoint_Summary": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "StayRestrictions": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "DateTimeSpanWindows"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "TimeSpan": {
          "description": "Assigned Type: ota2-0400:TimeSpan",
          "$ref": "#/definitions/TimeSpan"
        },
        "ExtensionPoint_Summary": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "DateTimeSpanWindowsDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "DateTimeSpanWindows"
      },
      "allOf": [
        {
          "$ref": "#/definitions/DateTimeSpanWindows"
        },
        {
          "properties": {
            "StartWindow": {
              "description": "Assigned Type: ota2-0400:TimeSpan",
              "$ref": "#/definitions/TimeSpan"
            },
            "EndWindow": {
              "description": "Assigned Type: ota2-0400:TimeSpan",
              "$ref": "#/definitions/TimeSpan"
            },
            "Duration": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 100
            },
            "DurationUnit": {
              "description": "Assigned Type: ota2-0300:DurationUnit_Enum",
              "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/DurationUnit_Enum"
            },
            "ExtensionPoint_Detail": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "StayRestrictionsDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "DateTimeSpanWindows"
      },
      "allOf": [
        {
          "$ref": "#/definitions/DateTimeSpanWindows"
        },
        {
          "properties": {
            "StartWindow": {
              "description": "Assigned Type: ota2-0400:TimeSpan",
              "$ref": "#/definitions/TimeSpan"
            },
            "EndWindow": {
              "description": "Assigned Type: ota2-0400:TimeSpan",
              "$ref": "#/definitions/TimeSpan"
            },
            "Duration": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 100
            },
            "DurationUnit": {
              "description": "Assigned Type: ota2-0300:DurationUnit_Enum",
              "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/DurationUnit_Enum"
            },
            "ExtensionPoint_Detail": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "Code": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Code"
      },
      "description": "Any code used to specify an item, for example, type of traveler, service code, room amenity, etc.  May be used to reference the OpenTravel RMA Codelist.",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 32
        },
        "codeContext": {
          "description": "Assigned Type: ota2-0400:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "description": {
          "description": "Assigned Type: ota2-0400:String",
          "type": "string",
          "maxLength": 512
        }
      }
    },
    "PersonDocument": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "PersonDocument"
      },
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32",
            "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
          ]
        }
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "DocType": {
          "description": "Assigned Type: ota2-0300:DocumentType_Enum",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "DocType"
              }
            ]
          },
          "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/DocumentType_Enum"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "PayloadStdAttributes": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "PayloadStdAttributes"
      },
      "description": "The standard attributes that appear on the root element for all OpenTravel messages.",
      "properties": {
        "echoToken": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to128"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "EchoToken"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "timeStamp": {
          "description": "YYYY-MM-DDThh:mm:ssZ with time values using the 24 hour clock:\\n20 November 2003, 1:59:38 pm UTC becomes 2003-11-20T13:59:38Z",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}dateTime"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "TimeStamp"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        },
        "target": {
          "description": "Test or Production target system indicator.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: OTA_PayloadStdAttributes_Target"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Target"
              }
            ]
          },
          "$ref": "#/definitions/TargetEnvironment_Enum"
        },
        "targetName": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "TargetName"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "version": {
          "description": "The OpenTravel message version indicated by a decimal value.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}decimal"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Version"
              }
            ]
          },
          "type": "number",
          "format": "float"
        },
        "transactionIdentifier": {
          "description": "Unique identifier to relate all messages within a transaction (e.g. this would be sent in all request and response messages that are part of an on-going transaction).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "TransactionIdentifier"
              }
            ]
          },
          "type": "string"
        },
        "sequenceNmbr": {
          "description": "Implementer: Message resynchronization typically is required if a system has been off-line and needs to retrieve messages that were missed.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Changed type from {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}nonNegativeInteger.",
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "SequenceNmbr"
              }
            ]
          },
          "type": "string"
        },
        "transactionStatusCode": {
          "description": "This indicates where this message falls within a sequence of messages.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: OTA_PayloadStdAttributes_TransactionStatusCode"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "TransactionStatusCode"
              }
            ]
          },
          "$ref": "#/definitions/TransactionStatusCode_Enum"
        },
        "correlationID": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CorrelationID"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "primaryLangID": {
          "description": "ISO 639 (3) character language codes: http:\\/\\/en.wikipedia.org\\/wiki\\/Lists_of_ISO_639_codes",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}language"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "PrimaryLangID"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "en"
              }
            ]
          },
          "type": "string"
        },
        "altLangID": {
          "description": "ISO 639 (3) character language codes: http:\\/\\/en.wikipedia.org\\/wiki\\/Lists_of_ISO_639_codes",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}language"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "AltLangID"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "es"
              }
            ]
          },
          "type": "string"
        },
        "retransmissionIndicatorInd": {
          "description": "Implementer: It is recommended that this attribute is used (i.e., set to TRUE) only when a message is retransmitted.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}boolean"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "RetransmissionIndicator"
              }
            ]
          },
          "type": "boolean"
        }
      },
      "required": [
        "version"
      ]
    },
    "TargetEnvironment_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "TargetEnvironment_Enum"
      },
      "type": "string",
      "enum": [
        "Test",
        "Production"
      ]
    },
    "TransactionStatusCode_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "TransactionStatusCode_Enum"
      },
      "type": "string",
      "enum": [
        "Start",
        "End",
        "Rollback",
        "InSeries",
        "Continuation",
        "Subsequent"
      ]
    },
    "ErrorWarning": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "ErrorWarning"
      },
      "description": "The error in textual format.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to64"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 512
        },
        "language": {
          "description": "Assigned Type: ota2-0400:LanguageCode",
          "type": "string"
        },
        "type": {
          "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/ErrorWarningType_Enum_Base"
        },
        "typeExtension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        },
        "shortText": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "code": {
          "description": "Assigned Type: ota2-0400:OTA_Code",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}OTA_CodeType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Code"
              }
            ]
          },
          "type": "string",
          "pattern": "[0-9A-Z]{1,4}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}anyURI"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "DocURL"
              }
            ]
          },
          "type": "string"
        },
        "tag": {
          "description": "Assigned Type: ota2-0400:String",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Tag"
              }
            ]
          },
          "type": "string",
          "maxLength": 512
        },
        "recordID": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "RecordID"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "nodeList": {
          "description": "Assigned Type: ota2-0400:String",
          "type": "string",
          "maxLength": 512
        },
        "status": {
          "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/Status_Enum_Base"
        },
        "statusExtension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "POS": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "POS"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Source": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Source"
          },
          "maxItems": 10,
          "minItems": 1
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "Source"
      ],
      "discriminator": "@type"
    },
    "Geolocation": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Geolocation"
      },
      "description": "TODO-(use enums and other for lat,long??  Format for the lat and long, is there a XML format)Used to specify the geographic coordinates of a location.",
      "properties": {
        "latitude": {
          "description": "Assigned Type: ota2-0400:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to16"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Latitude"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "longitude": {
          "description": "Assigned Type: ota2-0400:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to16"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Longitude"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "altitude": {
          "description": "Assigned Type: ota2-0400:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to16"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Altitude"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "altitudeUnitOfMeasure_Enum": {
          "description": "Provides the unit of measure for the altitude (e.g., feet, meters, miles, kilometers). Refer to OpenTravel Code List Unit of Measure Code (UOM).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}OTA_CodeType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "AltitudeUnitOfMeasureCode"
              }
            ]
          },
          "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/UnitOfMeasure_Enum"
        },
        "mapURL": {
          "description": "The URL of a map image.",
          "type": "string"
        },
        "formatURL": {
          "description": "The URL to the format for the latitude and longitude for this location.",
          "type": "string"
        }
      }
    },
    "RequestorID": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "RequestorID"
      },
      "description": "An identifier of the entity making the request (e.g. ATA\\/IATA\\/ID number, Electronic Reservation Service Provider (ERSP), Association of British Travel Agents.(ABTA)).",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Extension: UniqueID_Type"
          ]
        }
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: ota2-0400:Identifier",
          "$ref": "#/definitions/Identifier"
        },
        "ExtensionPoint_Summary": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "RequestorIDDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "RequestorID"
      },
      "description": "An identifier of the entity making the request (e.g. ATA\\/IATA\\/ID number, Electronic Reservation Service Provider (ERSP), Association of British Travel Agents.(ABTA)).",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Extension: UniqueID_Type"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/RequestorID"
        },
        {
          "properties": {
            "messagePassword": {
              "description": "Assigned Type: ota2-0400:StringTiny",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "MessagePassword"
                  }
                ]
              },
              "type": "string",
              "maxLength": 32
            },
            "personName": {
              "description": "Assigned Type: ota2-0400:PersonName",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Name"
                  }
                ]
              },
              "type": "string",
              "maxLength": 512
            },
            "ExtensionPoint_Detail": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "Source": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Source"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "agentSine": {
          "description": "Assigned Type: ota2-0400:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "AgentSine"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "pseudoCityCode": {
          "description": "Assigned Type: ota2-0400:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "PseudoCityCode"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "iSOCountry": {
          "description": "Assigned Type: ota2-0400:CountryCode_ISO3166",
          "x-otm-annotations": {
            "documentation": {
              "references": [
                "http:\\/\\/simple.wikipedia.org\\/wiki\\/ISO_3166-1_alpha-3"
              ],
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}ISO3166"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ISOCountry"
              }
            ]
          },
          "type": "string",
          "pattern": "[a-zA-Z]{2}"
        },
        "iSOCurrency": {
          "description": "Assigned Type: ota2-0400:CurrencyCode_ISO4217",
          "x-otm-annotations": {
            "documentation": {
              "references": [
                "http:\\/\\/www.iso.org\\/iso\\/support\\/currency_codes_list-1.htm"
              ],
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}AlphaLength3"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ISOCurrency"
              }
            ]
          },
          "type": "string",
          "pattern": "[a-zA-Z]{3}"
        },
        "agentDutyCode": {
          "description": "Assigned Type: ota2-0400:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "AgentDutyCode"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "airlineVendorID": {
          "description": "Assigned Type: ota2-0400:AirlineCode_IATA",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}UpperCaseAlphaNumericLength2to3"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "AirlineVendorID"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "B6"
              }
            ]
          },
          "type": "string",
          "pattern": "([a-zA-Z0-9]{2})?"
        },
        "airportCode": {
          "description": "Assigned Type: ota2-0400:AirportCode_IATA",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}UpperCaseAlphaNumericLength3to5"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "AirportCode"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "IAD"
              }
            ]
          },
          "type": "string",
          "pattern": "([A-Z]{3})?"
        },
        "firstDepartPoint": {
          "description": "Assigned Type: ota2-0400:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength3"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "FirstDepartPoint"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "eRSP_UserID": {
          "description": "Assigned Type: ota2-0400:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ERSP_UserID"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "terminalID": {
          "description": "Assigned Type: ota2-0400:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "TerminalID"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "RequestorID": {
          "description": "Assigned Type: ota2-0400:RequestorID",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}RequestorID"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "RequestorID"
              }
            ]
          },
          "$ref": "#/definitions/RequestorID"
        },
        "Position": {
          "description": "Assigned Type: ota2-0400:Geolocation",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Position"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Position"
              }
            ]
          },
          "$ref": "#/definitions/Geolocation"
        },
        "BookingChannel": {
          "description": "Assigned Type: ota2-0400:BookingChannel",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}BookingChannel"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "BookingChannel"
              }
            ]
          },
          "$ref": "#/definitions/BookingChannel"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "BookingChannel": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "BookingChannel"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "CompanyName": {
          "description": "Assigned Type: ota2-0400:CompanyName",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}CompanyNameType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CompanyName"
              }
            ]
          },
          "$ref": "#/definitions/CompanyName"
        },
        "Type": {
          "description": "Assigned Type: ota2-0300:BookingChannel_Enum",
          "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/BookingChannel_Enum"
        },
        "primaryInd": {
          "description": "Indicates whether the enumerated booking channel is the primary means of connectivity used by the source.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Result": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Result"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorWarning"
          },
          "maxItems": 50
        },
        "Warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorWarning"
          },
          "maxItems": 50
        },
        "Status": {
          "description": "Assigned Type: ota2-0300:Status_Enum",
          "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/Status_Enum"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "PersonID": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Person"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "objID": {
          "description": "A unique identifier within this document for this object.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}RPH_Type"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "RPH"
              }
            ]
          },
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: ota2-0400:Identifier",
          "$ref": "#/definitions/Identifier"
        },
        "OtherID": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "maxItems": 5
        },
        "PersonRef": {
          "description": "Refers to the obj ID on an object defined elsewhere in the current document.",
          "type": "string"
        }
      },
      "required": [
        "@type",
        "Identifier"
      ],
      "discriminator": "@type"
    },
    "Person": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Person"
      },
      "allOf": [
        {
          "$ref": "#/definitions/PersonID"
        },
        {
          "properties": {
            "gender": {
              "description": "The gender of the person.",
              "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/Gender_Enum"
            },
            "maritalStatus_Enum": {
              "description": "Specifies the marital status of the person.",
              "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/MaritalStatus_Enum"
            },
            "birthDate": {
              "description": "The birth date of the person.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "AttributeGroup: BirthDateGroup"
                  ]
                }
              },
              "type": "string",
              "format": "date"
            },
            "PersonName": {
              "description": "Assigned Type: ota2-0400:PersonName",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}PersonNameType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "PersonName"
                  }
                ]
              },
              "$ref": "#/definitions/PersonName"
            },
            "Address": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Address"
              },
              "maxItems": 5
            },
            "Telephone": {
              "description": "Assigned Type: ota2-0400:Telephone",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Example value: p \u003d 555-555-5555"
                  ]
                },
                "examples": [
                  {
                    "context": "Common",
                    "value": "555-555-5555"
                  }
                ]
              },
              "$ref": "#/definitions/Telephone"
            },
            "Email": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Email"
              },
              "maxItems": 5
            },
            "Privacy": {
              "description": "Assigned Type: ota2-0400:Privacy",
              "$ref": "#/definitions/Privacy"
            },
            "Comments": {
              "description": "Assigned Type: ota2-0400:TextFree",
              "$ref": "#/definitions/TextFree"
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          },
          "required": [
            "PersonName"
          ]
        }
      ]
    },
    "Address": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Address"
      },
      "description": "Provides address information. Unformatted addresses are captured using the simple facet.",
      "properties": {
        "@type": {
          "type": "string"
        },
        "AddressLine": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 128
          },
          "maxItems": 4
        },
        "BldgRoom": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddressBldgRoom"
          },
          "maxItems": 2
        },
        "Number": {
          "description": "Assigned Type: ota2-0400:AddressStreetNumber",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StreetNmbr"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "StreetNmbr"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "111"
              }
            ]
          },
          "$ref": "#/definitions/AddressStreetNumber"
        },
        "Street": {
          "description": "May contain the street number when the Street number element is missing.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to255"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "AddressLine"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "Travers Street"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "City": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CityName"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "Dublin"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "County": {
          "description": "County or Region Name (e.g., Fairfax).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "County"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "Fairfax"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "StateProv": {
          "description": "Assigned Type: ota2-0400:StateProv",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StateProvType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "StateProv"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "Texas"
              }
            ]
          },
          "$ref": "#/definitions/StateProv"
        },
        "Country": {
          "description": "Assigned Type: ota2-0400:Country",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}CountryNameType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CountryName"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "IE"
              }
            ]
          },
          "$ref": "#/definitions/Country"
        },
        "PostalCode": {
          "description": "Post Office Code number.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "PostalCode"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "32165-9999"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "role": {
          "$ref": "#/definitions/Enum_AddressRole"
        },
        "ExtensionPoint_Summary": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "AddressDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Address"
      },
      "description": "Provides address information. Unformatted addresses are captured using the simple facet.",
      "allOf": [
        {
          "$ref": "#/definitions/Address"
        },
        {
          "properties": {
            "language": {
              "description": "Example: en",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}language"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Language"
                  }
                ],
                "examples": [
                  {
                    "context": "Common",
                    "value": "en"
                  }
                ]
              },
              "type": "string"
            },
            "Remark": {
              "description": "A remark associated with this address.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to128"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Remark"
                  }
                ],
                "examples": [
                  {
                    "context": "Common",
                    "value": "This address should be used for all official correspondences."
                  }
                ]
              },
              "type": "string",
              "maxLength": 4096
            },
            "Privacy": {
              "description": "Assigned Type: ota2-0400:Privacy",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "AttributeGroup: PrivacyGroup"
                  ]
                }
              },
              "$ref": "#/definitions/Privacy"
            },
            "Type": {
              "description": "Assigned Type: ota2-0300:CommunicationLocation_Enum",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Type"
                  }
                ],
                "examples": [
                  {
                    "context": "Common",
                    "value": "CLT"
                  }
                ]
              },
              "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/CommunicationLocation_Enum"
            },
            "Use": {
              "description": "Assigned Type: ota2-0300:AddressUse_Enum",
              "x-otm-annotations": {
                "examples": [
                  {
                    "context": "Common",
                    "value": "AUT"
                  }
                ]
              },
              "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/AddressUse_Enum"
            },
            "validInd": {
              "description": "If true, this is a valid and complete mailing address that has been verified through an address verification service or previously mailed materials have not been returned.",
              "type": "boolean"
            },
            "ExtensionPoint_Detail": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "Enum_AddressRole": {
      "properties": {
        "value": {
          "$ref": "#/definitions/Enum_AddressRole_Open"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "Enum_AddressRole_Base": {
      "type": "string",
      "enum": [
        "Home",
        "Business",
        "Destination",
        "Other"
      ]
    },
    "Enum_AddressRole_Open": {
      "type": "string",
      "enum": [
        "Home",
        "Business",
        "Destination",
        "Other",
        "Other_"
      ]
    },
    "CodeExternal": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "CodeExternal"
      },
      "description": "Code with additional information describing the code authority.",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 128
        },
        "description": {
          "description": "Description of who manages this set of codes.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Description"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "Visa"
              }
            ]
          },
          "type": "string"
        },
        "name": {
          "description": "This may be a source authority\\/ owner name, ID or code.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "SourceName"
              }
            ]
          },
          "type": "string"
        },
        "uRL": {
          "description": "Implementer: This is A URL to the code source authority\\/ owner.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}anyURI"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "SourceURL"
              }
            ]
          },
          "type": "string"
        },
        "id": {
          "description": "Implementer: This is used for a database or key ID for the code item (if it is different from the @CodeExtension) in relationship to the obsolete code indicator.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "UniqueID"
              }
            ]
          },
          "type": "string"
        }
      }
    },
    "ContactPerson": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "ContactPerson"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "contactType": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            }
          },
          "type": "string",
          "maxLength": 128
        },
        "relation": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            }
          },
          "type": "string",
          "maxLength": 128
        },
        "Person": {
          "description": "Assigned Type: ota2-0400:Person",
          "$ref": "#/definitions/PersonID"
        },
        "CommunicationMethodCode": {
          "description": "Assigned Type: ota2-0300:DistributionType_Enum",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            }
          },
          "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/DistributionType_Enum"
        },
        "DocumentDistribMethodCode": {
          "description": "Assigned Type: ota2-0300:DistributionType_Enum",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            }
          },
          "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/DistributionType_Enum"
        },
        "emergencyFlagInd": {
          "description": "[LegacyDefaultValue: null]",
          "type": "boolean"
        },
        "defaultInd": {
          "description": "Indicates that the receiving system should assume the default value if the user specifies no overriding value or action.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: DefaultIndGroup"
              ]
            }
          },
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Location": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Location"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Address": {
          "description": "Assigned Type: ota2-0400:Address",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}AddressInfoType"
              ]
            }
          },
          "$ref": "#/definitions/Address"
        },
        "Position": {
          "description": "Assigned Type: ota2-0400:Geolocation",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Position"
              ]
            }
          },
          "$ref": "#/definitions/Geolocation"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "Address"
      ],
      "discriminator": "@type"
    },
    "IndexPointCode_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "IndexPointCode_Enum"
      },
      "description": "Indicates the type of location being referenced (e.g., Airport, Hotel).",
      "type": "string",
      "enum": [
        "Cross street",
        "Intersection",
        "Highway",
        "Highway exit",
        "City",
        "Airport",
        "Rail station",
        "Subway station",
        "Geo location",
        "Bus/coach station",
        "Hotel",
        "Nearest major city",
        "Surrounding city",
        "Heliport",
        "Regional express train station",
        "Attraction",
        "Business location",
        "Car rental location",
        "Convention center",
        "Educational",
        "Event",
        "Ground transport",
        "Military bases",
        "Park/recreational area",
        "Port",
        "Resort/ski area",
        "Shopping center",
        "Sports",
        "Transportation points",
        "Neighbouring state",
        "Metro area",
        "District",
        "Local landmark"
      ]
    },
    "Promotion": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Promotion"
      },
      "description": "Description of the promotion.",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 128
        },
        "promotionVendorCode": {
          "description": "Assigned Type: ota2-0400:ListOfTinyStrings",
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 32
          }
        },
        "code": {
          "description": "Assigned Type: ota2-0400:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "name": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "type": "string",
          "maxLength": 128
        }
      }
    },
    "Email": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Email"
      },
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to128",
            "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to128"
          ]
        }
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "remark": {
          "description": "Assigned Type: ota2-0400:StringText",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to128"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Remark"
              }
            ]
          },
          "type": "string",
          "maxLength": 4096
        },
        "textFormat": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: EmailType_TextFormat"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "TextFormat"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "Address": {
          "description": "The email address.  IETF RFC 2821",
          "type": "string",
          "maxLength": 512
        },
        "Type": {
          "description": "Assigned Type: ota2-0300:EmailAddressType_Enum",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "EmailType"
              }
            ]
          },
          "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/EmailAddressType_Enum"
        },
        "Privacy": {
          "description": "Assigned Type: ota2-0400:Privacy",
          "$ref": "#/definitions/Privacy"
        },
        "validInd": {
          "description": "If true, this is a valid email address that has been system verified via a successful email transmission.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}boolean"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ValidInd"
              }
            ]
          },
          "type": "boolean"
        },
        "defaultInd": {
          "description": "If true, this identifies this is the default email address.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: DefaultIndGroup"
              ]
            }
          },
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "Address"
      ],
      "discriminator": "@type"
    },
    "MultimediaCollection": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "MultimediaCollection"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "lastUpdated": {
          "description": "The date and time when the collection of multimedia information was last updated.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}dateTime"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "LastUpdated"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        },
        "Multimedia": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Multimedia"
          },
          "minItems": 1
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "Multimedia"
      ],
      "discriminator": "@type"
    },
    "VideoCategoryID": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "VideoCategory"
      },
      "description": "Each video item represents a specific category.",
      "properties": {
        "@type": {
          "type": "string"
        },
        "objID": {
          "description": "A unique identifier within this document for this object.",
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: ota2-0400:Identifier",
          "$ref": "#/definitions/Identifier"
        },
        "VideoCategoryRef": {
          "description": "Refers to the obj ID on an object defined elsewhere in the current document.",
          "type": "string"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "VideoCategory": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "VideoCategory"
      },
      "description": "Each video item represents a specific category.",
      "allOf": [
        {
          "$ref": "#/definitions/VideoCategoryID"
        },
        {
          "properties": {
            "category": {
              "description": "Assigned Type: ota2-0400:OTA_Code",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Category"
                  }
                ]
              },
              "type": "string",
              "pattern": "[0-9A-Z]{1,4}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
            },
            "language": {
              "description": "The language associated with the caption for the category.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}language"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Language"
                  }
                ],
                "examples": [
                  {
                    "context": "Common",
                    "value": "en"
                  }
                ]
              },
              "type": "string"
            },
            "caption": {
              "description": "Assigned Type: ota2-0400:StringShort",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to128"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Caption"
                  }
                ]
              },
              "type": "string",
              "maxLength": 128
            },
            "Video": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VideoID"
              }
            },
            "removalInd": {
              "description": "If true, this item is obsolete and should be removed from the receiving system.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "AttributeGroup: RemovalGroup"
                  ]
                }
              },
              "type": "boolean"
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "MultimediaDescription": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "MultimediaDescription"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "title": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
              ]
            }
          },
          "type": "string",
          "maxLength": 128
        },
        "language": {
          "description": "The language in which the content is provided.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}language"
              ]
            },
            "examples": [
              {
                "context": "Common",
                "value": "en"
              }
            ]
          },
          "type": "string"
        },
        "caption": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to128",
                "Example value: ca1 \u003d The Empire State Building at sunset.",
                "Example value: tns \u003d The Empire State Building at sunset."
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Caption"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "The Empire State Building at sunset."
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "FormattedTextSubSection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormattedTextSubSection"
          },
          "maxItems": 99,
          "minItems": 1
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "FormattedTextSubSection"
      ],
      "discriminator": "@type"
    },
    "MultimediaDetails": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "MultimediaDetails"
      },
      "description": "Warning:  To be redesigned in the next release. The title of the multimedia object.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to64"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 128
        },
        "author": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Author"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "copyrightNotice": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CopyrightNotice"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "copyrightOwner": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CopyrightOwner"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "copyrightStart": {
          "description": "Assigned Type: ota2-0400:DateTime",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}DateOrDateTimeType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CopyrightStart"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        },
        "copyrightEnd": {
          "description": "Assigned Type: ota2-0400:DateTime",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}DateOrDateTimeType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "CopyrightEnd"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        },
        "effectiveStart": {
          "description": "Assigned Type: ota2-0400:DateTime",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}DateOrDateTimeType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "EffectiveStart"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        },
        "effectiveEnd": {
          "description": "Assigned Type: ota2-0400:DateTime",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}DateOrDateTimeType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "EffectiveEnd"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        },
        "applicableStart": {
          "description": "Start month and day or date for which the multimedia content is relevent (e.g. the start of a season or the start of an event). When a year is not used (i.e. only the month and day) it signifies a recurring event.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}DateOrMonthDay"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ApplicableStart"
              }
            ]
          },
          "type": "string",
          "format": "date"
        },
        "applicableEnd": {
          "description": "End month and day or date for which the multimedia content is relevent (e.g. the end of a season or the start of an event). When a year is not used (i.e. only the month and day) it signifies a recurring event.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}DateOrMonthDay"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ApplicableEnd"
              }
            ]
          },
          "type": "string",
          "format": "date"
        }
      }
    },
    "VideoID": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Video"
      },
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Extension: VideoItemType"
          ]
        }
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "objID": {
          "description": "A unique identifier within this document for this object.",
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: ota2-0400:Identifier",
          "$ref": "#/definitions/Identifier"
        },
        "VideoRef": {
          "description": "Refers to the obj ID on an object defined elsewhere in the current document.",
          "type": "string"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Video": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Video"
      },
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Extension: VideoItemType"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/VideoID"
        },
        {
          "properties": {
            "unitOfMeasureCode": {
              "description": "Assigned Type: ota2-0400:OTA_Code",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "UnitOfMeasureCode"
                  }
                ]
              },
              "type": "string",
              "pattern": "[0-9A-Z]{1,4}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
            },
            "width": {
              "description": "The width of the video item (unit specified by unit of measure).",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}positiveInteger"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Width"
                  }
                ]
              },
              "type": "integer",
              "format": "int32"
            },
            "height": {
              "description": "The height of the video item (unit specified by unit of measure).",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}positiveInteger"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Height"
                  }
                ]
              },
              "type": "integer",
              "format": "int32"
            },
            "bitRate": {
              "description": "The bit rate of the video item.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}positiveInteger"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "BitRate"
                  }
                ]
              },
              "type": "integer",
              "format": "int32"
            },
            "length": {
              "description": "The length of the video item (unit specified by unit of measure).",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}positiveInteger"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Length"
                  }
                ]
              },
              "type": "integer",
              "format": "int32"
            },
            "version": {
              "description": "The version of the video item.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Version"
                  }
                ]
              },
              "type": "string"
            },
            "format": {
              "description": "Assigned Type: ota2-0400:OTA_Code",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}OTA_CodeType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "Format"
                  }
                ]
              },
              "type": "string",
              "pattern": "[0-9A-Z]{1,4}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
            },
            "fileSize": {
              "description": "The size of the multimedia file in bytes.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}positiveInteger"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "FileSize"
                  }
                ]
              },
              "type": "integer",
              "format": "int32"
            },
            "fileName": {
              "description": "Assigned Type: ota2-0400:StringShort",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to64"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "FileName"
                  }
                ]
              },
              "type": "string",
              "maxLength": 128
            },
            "streamingSource": {
              "description": "Example: YouTube",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "StreamingSource"
                  }
                ]
              },
              "type": "string"
            },
            "URL": {
              "description": "URL of the multimedia item for a specific format.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}anyURI"
                  ]
                },
                "equivalents": [
                  {
                    "context": "Common",
                    "value": "URL"
                  }
                ]
              },
              "type": "string"
            },
            "Details": {
              "description": "Assigned Type: ota2-0400:MultimediaDetails",
              "$ref": "#/definitions/MultimediaDetails"
            },
            "MultimediaDescription": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MultimediaDescription"
              }
            },
            "DateTimeStamp": {
              "description": "Assigned Type: ota2-0400:DateTimeStamp",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "AttributeGroup: DateTimeStampGroup"
                  ]
                }
              },
              "$ref": "#/definitions/DateTimeStamp"
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "Rating": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Rating"
      },
      "description": "The actual award or rating received by the facility.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string"
        },
        "provider": {
          "description": "The name of the award or ratings provider.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Provider"
              }
            ]
          },
          "type": "string"
        },
        "description": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "type": "string",
          "maxLength": 128
        }
      }
    },
    "ProcessingInfo": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "ProcessingInfo"
      },
      "description": "Transaction processing directives, including display currency overrides. If no display currency information is provided, the display and pricing currency will default to the value in POS\\/Source\\/@ISOCurrency.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "(Developer Notes) An agreement should be in place with your trading partners that specifies what information is summary versus detail."
          ]
        }
      },
      "properties": {
        "displayCurrency": {
          "description": "Assigned Type: ota2-0400:CurrencyCode_ISO4217",
          "x-otm-annotations": {
            "documentation": {
              "references": [
                "(Reference): http:\\/\\/www.opentraveldevelopersnetwork.com\\/Supported_ISO_Standards.php"
              ],
              "more-info": [
                "(More Info): http:\\/\\/www.opentraveldevelopersnetwork.com\\/2012A_SchemaDoc\\/DisplayCurrency"
              ]
            }
          },
          "type": "string",
          "pattern": "[a-zA-Z]{3}"
        },
        "positiveInteger": {
          "description": "The maximum quantity of search results in the response.",
          "type": "integer",
          "format": "int32"
        },
        "summaryResultsInd": {
          "description": "If true, summary information is requested in the search results.",
          "type": "boolean"
        }
      }
    },
    "OperationSchedule": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "OperationSchedule"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "daysOfWeek": {
          "description": "The day(s) of week to which the operation time applies.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: DOW_PatternGroup"
              ]
            }
          },
          "$ref": "#/definitions/DayOfOperation"
        },
        "additionalOperationInfoCode": {
          "description": "Assigned Type: ota2-0400:OTA_Code",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            }
          },
          "type": "string",
          "pattern": "[0-9A-Z]{1,4}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
        },
        "frequency": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
              ]
            }
          },
          "type": "string",
          "maxLength": 128
        },
        "text": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength0to64"
              ]
            }
          },
          "type": "string",
          "maxLength": 128
        },
        "DateTimeSpanWindows": {
          "description": "Assigned Type: ota2-0400:DateTimeSpanWindows",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: DateTimeSpanGroup"
              ]
            }
          },
          "$ref": "#/definitions/DateTimeSpanWindows"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "RateRange": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "RateRange"
      },
      "description": "A range of monetary values within which the cost of the available products are requested.",
      "properties": {
        "minRate": {
          "description": "Assigned Type: ota2-0400:Money",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}Money"
              ]
            }
          },
          "type": "number",
          "format": "float"
        },
        "maxRate": {
          "description": "Assigned Type: ota2-0400:Money",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}Money"
              ]
            }
          },
          "type": "number",
          "format": "float"
        },
        "fixedRate": {
          "description": "Assigned Type: ota2-0400:Money",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}Money"
              ]
            }
          },
          "type": "number",
          "format": "float"
        },
        "rateTimeUnit": {
          "description": "Used to specify the period of time to which the rates apply.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}TimeUnitType"
              ]
            }
          },
          "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/TimeUnit_Enum"
        },
        "currencyCode": {
          "description": "Assigned Type: ota2-0400:CurrencyCode_ISO4217",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}AlphaLength3"
              ]
            }
          },
          "type": "string",
          "pattern": "[a-zA-Z]{3}"
        }
      }
    },
    "Radius": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Radius"
      },
      "description": "The radius distance.",
      "properties": {
        "value": {
          "type": "integer",
          "format": "int32"
        },
        "unitOfMeasure": {
          "description": "The unit of measure for the radius value.",
          "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/UnitOfMeasure_Enum"
        }
      }
    },
    "LocationCode": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "LocationCode"
      },
      "description": "Location code is city, stateProvence, or country code",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 32
        },
        "city": {
          "description": "Assigned Type: ota2-0400:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to8"
              ]
            },
            "examples": [
              {
                "context": "Common",
                "value": "Lancaster"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "stateProvince": {
          "description": "Assigned Type: ota2-0400:StateProvCode",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to8"
              ]
            }
          },
          "type": "string",
          "maxLength": 8,
          "minLength": 2
        },
        "country": {
          "description": "Assigned Type: ota2-0400:CountryCode_ISO3166",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}ISO3166"
              ]
            },
            "examples": [
              {
                "context": "Common",
                "value": "US"
              }
            ]
          },
          "type": "string",
          "pattern": "[a-zA-Z]{2}"
        },
        "codeContext": {
          "description": "Assigned Type: ota2-0400:StringTiny",
          "type": "string",
          "maxLength": 32
        }
      }
    },
    "ImageID": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Image"
      },
      "description": "Warning:  This will be redesigned in the next release.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Extension: VideoItemType"
          ]
        }
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "objID": {
          "description": "A unique identifier within this document for this object.",
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: ota2-0400:Identifier",
          "$ref": "#/definitions/Identifier"
        },
        "ImageRef": {
          "description": "Refers to the obj ID on an object defined elsewhere in the current document.",
          "type": "string"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Image": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Image"
      },
      "description": "Warning:  This will be redesigned in the next release.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Extension: VideoItemType"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ImageID"
        },
        {
          "properties": {
            "version": {
              "description": "The version of the video item.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
                  ]
                }
              },
              "type": "string"
            },
            "format": {
              "description": "Assigned Type: ota2-0400:OTA_Code",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}OTA_CodeType"
                  ]
                }
              },
              "type": "string",
              "pattern": "[0-9A-Z]{1,4}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
            },
            "dimensionCategory": {
              "description": "Assigned Type: ota2-0400:StringTiny",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16",
                    "Example value: ca1 \u003d 100x100",
                    "Example value: tns \u003d 100x100"
                  ]
                }
              },
              "type": "string",
              "maxLength": 32
            },
            "sort": {
              "description": "Example: 1",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}positiveInteger",
                    "Example value: ca1 \u003d !",
                    "Example value: tns \u003d !"
                  ]
                }
              },
              "type": "integer",
              "format": "int32"
            },
            "resolution": {
              "description": "Example: 600",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}positiveInteger",
                    "Example value: ca1 \u003d 600",
                    "Example value: tns \u003d 600"
                  ]
                }
              },
              "type": "integer",
              "format": "int32"
            },
            "colorSpace": {
              "description": "Assigned Type: ota2-0400:StringShort",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
                  ]
                }
              },
              "type": "string",
              "maxLength": 128
            },
            "URL": {
              "description": "URL of the multimedia item for a specific format.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}anyURI"
                  ]
                }
              },
              "type": "string"
            },
            "Details": {
              "description": "Assigned Type: ota2-0400:MultimediaDetails",
              "$ref": "#/definitions/MultimediaDetails"
            },
            "MultimediaDescription": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MultimediaDescription"
              }
            },
            "DateTimeStamp": {
              "description": "Assigned Type: ota2-0400:DateTimeStamp",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "AttributeGroup: DateTimeStampGroup"
                  ]
                }
              },
              "$ref": "#/definitions/DateTimeStamp"
            },
            "Email": {
              "description": "Assigned Type: ota2-0400:Email",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string",
                    "Example value: ca1 \u003d John@company.com",
                    "Example value: tns \u003d John@company.com"
                  ]
                }
              },
              "$ref": "#/definitions/Email"
            },
            "Dimensions": {
              "description": "Assigned Type: ota2-0400:Dimensions",
              "$ref": "#/definitions/Dimensions"
            },
            "File": {
              "description": "Assigned Type: ota2-0400:File",
              "$ref": "#/definitions/File"
            },
            "Geolocation": {
              "description": "Assigned Type: ota2-0400:Geolocation",
              "$ref": "#/definitions/Geolocation"
            },
            "originalIndicatorInd": {
              "description": "When true, the image is the original file and format. When false, the image is not the original file and format.",
              "type": "boolean"
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "RelativePosition": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "RelativePosition"
      },
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Extension: TransportationsType",
            "Extension: TransportationsType"
          ]
        }
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "direction": {
          "description": "Defines the cardinal direction (e.g., north, south, southwest).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            }
          },
          "type": "string"
        },
        "distance": {
          "description": "Defines the distance between two points.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            }
          },
          "type": "string"
        },
        "unitOfMeasureCode": {
          "description": "The unit of measure in a code format. Refer to OpenTravel Code List Unit of Measure Code (UOM).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}OTA_CodeType"
              ]
            }
          },
          "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/UnitOfMeasure_Enum"
        },
        "indexPointCode": {
          "description": "This is the object referred to by the relative position (e.g. cross street, airport). Refer to OpenTravel Code List Index Point Code (IPC).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            }
          },
          "$ref": "#/definitions/IndexPointCode_Enum"
        },
        "name": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength0to64"
              ]
            }
          },
          "type": "string",
          "maxLength": 128
        },
        "toFrom": {
          "description": "Used to indicate whether the context is to a facility or from a facility.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: RelativePositionType_ToFrom"
              ]
            }
          },
          "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/ToFrom_Enum"
        },
        "positionAccuracy": {
          "description": "Indicates the accuracy of the property\u0027s geo-coding, since the property\u0027s longitude and latitude may not always be exact. Refer to OpenTravel Code List Position Accuracy Code (PAC).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            }
          },
          "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/PositionAccuracy_Enum"
        },
        "Transportations": {
          "description": "Assigned Type: ota2-0400:Transportations",
          "$ref": "#/definitions/Transportations"
        },
        "Description": {
          "description": "Assigned Type: ota2-0400:Description",
          "$ref": "#/definitions/Description"
        },
        "nearestInd": {
          "description": "The indicator for whether this location is nearest.",
          "type": "boolean"
        },
        "primaryInd": {
          "description": "Indicates whether the reference point is considered the main reference point for the specific type of IndexPointCode (e.g., in Dallas, where IndexPointCode\u003dairport Dallas\\/Fort Worth airport would be the primary airport even if another airport such as Love Field is closer).",
          "type": "boolean"
        },
        "approximateDistanceInd": {
          "description": "When true, the distance information is approximate.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Directions": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "RelativePosition"
      },
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Extension: TransportationsType",
            "Extension: TransportationsType"
          ]
        }
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "direction": {
          "description": "Defines the cardinal direction (e.g., north, south, southwest).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            }
          },
          "type": "string"
        },
        "distance": {
          "description": "Defines the distance between two points.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            }
          },
          "type": "string"
        },
        "unitOfMeasureCode": {
          "description": "The unit of measure in a code format. Refer to OpenTravel Code List Unit of Measure Code (UOM).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}OTA_CodeType"
              ]
            }
          },
          "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/UnitOfMeasure_Enum"
        },
        "indexPointCode": {
          "description": "This is the object referred to by the relative position (e.g. cross street, airport). Refer to OpenTravel Code List Index Point Code (IPC).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            }
          },
          "$ref": "#/definitions/IndexPointCode_Enum"
        },
        "name": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength0to64"
              ]
            }
          },
          "type": "string",
          "maxLength": 128
        },
        "toFrom": {
          "description": "Used to indicate whether the context is to a facility or from a facility.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: RelativePositionType_ToFrom"
              ]
            }
          },
          "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/ToFrom_Enum"
        },
        "positionAccuracy": {
          "description": "Indicates the accuracy of the property\u0027s geo-coding, since the property\u0027s longitude and latitude may not always be exact. Refer to OpenTravel Code List Position Accuracy Code (PAC).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            }
          },
          "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/PositionAccuracy_Enum"
        },
        "Transportations": {
          "description": "Assigned Type: ota2-0400:Transportations",
          "$ref": "#/definitions/Transportations"
        },
        "Description": {
          "description": "Assigned Type: ota2-0400:Description",
          "$ref": "#/definitions/Description"
        },
        "nearestInd": {
          "description": "The indicator for whether this location is nearest.",
          "type": "boolean"
        },
        "primaryInd": {
          "description": "Indicates whether the reference point is considered the main reference point for the specific type of IndexPointCode (e.g., in Dallas, where IndexPointCode\u003dairport Dallas\\/Fort Worth airport would be the primary airport even if another airport such as Love Field is closer).",
          "type": "boolean"
        },
        "approximateDistanceInd": {
          "description": "When true, the distance information is approximate.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "TransportationID": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Transportation"
      },
      "description": "Detailed transportation information.",
      "properties": {
        "@type": {
          "type": "string"
        },
        "objID": {
          "description": "A unique identifier within this document for this object.",
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: ota2-0400:Identifier",
          "$ref": "#/definitions/Identifier"
        },
        "TransportationRef": {
          "description": "Refers to the obj ID on an object defined elsewhere in the current document.",
          "type": "string"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Transportation": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Transportation"
      },
      "description": "Detailed transportation information.",
      "allOf": [
        {
          "$ref": "#/definitions/TransportationID"
        },
        {
          "properties": {
            "notificationRequired": {
              "description": "Assigned Type: ota2-0400:StringShort",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
                  ]
                }
              },
              "type": "string",
              "maxLength": 128
            },
            "description": {
              "description": "Assigned Type: ota2-0400:StringShort",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength0to64"
                  ]
                }
              },
              "type": "string",
              "maxLength": 128
            },
            "typicalTravelTime": {
              "description": "The normal (average) travel time required to get to or from the location, measured in minutes.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
                  ]
                }
              },
              "type": "string"
            },
            "Type": {
              "description": "Assigned Type: ota2-0300:Transportation_Enum",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                }
              },
              "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/Transportation_Enum"
            },
            "MultimediaCollection": {
              "description": "Assigned Type: ota2-0400:MultimediaCollection",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}MultimediaDescriptionsType"
                  ]
                }
              },
              "$ref": "#/definitions/MultimediaCollection"
            },
            "OperationSchedule": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OperationSchedule"
              },
              "maxItems": 30
            },
            "Description": {
              "description": "Descriptive text that describes the transportation.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
                  ]
                }
              },
              "type": "string",
              "maxLength": 4096
            },
            "ChargeUnit": {
              "description": "Assigned Type: ota2-0300:ChargeUnit_Enum",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                }
              },
              "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/ChargeUnit_Enum"
            },
            "CurrencyAmount": {
              "description": "Assigned Type: ota2-0400:CurrencyAmount",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "AttributeGroup: CurrencyAmountGroup"
                  ]
                }
              },
              "$ref": "#/definitions/CurrencyAmount"
            },
            "Address": {
              "description": "Assigned Type: ota2-0400:Address",
              "$ref": "#/definitions/Address"
            },
            "LocationCode": {
              "description": "Assigned Type: ota2-0400:LocationCode",
              "$ref": "#/definitions/LocationCode"
            },
            "includedInd": {
              "description": "When true there is no additional charge for transportation.",
              "type": "boolean"
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "Transportations": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Transportations"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Transportation": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransportationID"
          }
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "ArrivalTransport": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Transportations"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Transportation": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransportationID"
          }
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "DepartureTransport": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Transportations"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Transportation": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransportationID"
          }
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "TextCategory": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "TextCategory"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "category": {
          "description": "Assigned Type: ota2-0400:OTA_Code",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Category"
              }
            ]
          },
          "type": "string",
          "pattern": "[0-9A-Z]{1,4}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
        },
        "caption": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to128"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Caption"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "Text": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Text"
          }
        },
        "removalInd": {
          "description": "If true, this item is obsolete and should be removed from the receiving system.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: RemovalGroup"
              ]
            }
          },
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "FormattedTextSubSection": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "FormattedTextSubSection"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "subTitle": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
              ]
            }
          },
          "type": "string",
          "maxLength": 128
        },
        "subCode": {
          "description": "Assigned Type: ota2-0400:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to8"
              ]
            }
          },
          "type": "string",
          "maxLength": 32
        },
        "subSectionNumber": {
          "description": "This attribute may be used when there is a need to number all of the sub-sections of information that is to be presented.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Numeric1to999"
              ]
            }
          },
          "type": "integer",
          "format": "int32"
        },
        "TextParagraph": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TextParagraph"
          },
          "maxItems": 99,
          "minItems": 1
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "TextParagraph"
      ],
      "discriminator": "@type"
    },
    "RateQualifier": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "RateQualifier"
      },
      "description": "Name of the rate qualifier",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 128
        },
        "code": {
          "description": "Assigned Type: ota2-0400:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: RateQualifierCoreGroup"
              ]
            }
          },
          "type": "string",
          "maxLength": 32
        },
        "rateAuthorizationCode": {
          "description": "Assigned Type: ota2-0400:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            }
          },
          "type": "string",
          "maxLength": 32
        },
        "rateID": {
          "description": "Assigned Type: ota2-0400:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            }
          },
          "type": "string",
          "maxLength": 32
        },
        "ratePeriod": {
          "description": "The RatePeriod attribute defines the type of rate that may be applied. For example, typically car rental rates differ based upon the duration of the rental, and the actual rate is then expressed in terms of the period of the rental.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: RateQualifierCoreGroup_RatePeriod"
              ]
            }
          },
          "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/RatePeriod_Enum"
        },
        "description": {
          "description": "Assigned Type: ota2-0400:StringLong",
          "type": "string",
          "maxLength": 4096
        }
      }
    },
    "LoyaltyProgram": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "LoyaltyProgram"
      },
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength0to32",
            "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength0to32"
          ]
        }
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "id": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "loyaltyLevel": {
          "description": "Assigned Type: ota2-0400:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "LoyaltyLevel"
              }
            ],
            "examples": [
              {
                "context": "Common",
                "value": "Platinum"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "ProgramCode": {
          "description": "Assigned Type: ota2-0400:Code",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "ProgramCode"
              }
            ]
          },
          "$ref": "#/definitions/Code"
        },
        "TravelSector": {
          "description": "Assigned Type: ota2-0300:TravelSector_Enum",
          "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/TravelSector_Enum"
        },
        "primaryInd": {
          "description": "When true, indicates this is the primary loyalty program and when absent or false, indicates this is not the primary loyalty program.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Features": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "Features"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "quantity": {
          "description": "Assigned Type: ota2-0400:NonNegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "Description": {
          "description": "Assigned Type: ota2-0400:Description",
          "$ref": "#/definitions/Description"
        },
        "ExtensionPoint_Shared": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Shared"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "FeaturesOther": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "Features"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Features"
        },
        {
          "properties": {
            "Code": {
              "description": "Assigned Type: ota2-0400:Code",
              "$ref": "#/definitions/Code"
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "Amount": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Amount"
      },
      "description": "Price of an item and information on how this price was calculated, for example, a daily rate multiplied by the number of players, a percentage, etc.",
      "properties": {
        "@type": {
          "type": "string"
        },
        "unitPrice": {
          "description": "Assigned Type: ota2-0400:Money",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Money"
              ]
            }
          },
          "type": "number",
          "format": "float"
        },
        "unitName": {
          "description": "Assigned Type: ota2-0400:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            }
          },
          "type": "string",
          "maxLength": 32
        },
        "quantity": {
          "description": "Assigned Type: ota2-0400:NonNegativeInteger",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Numeric1to99"
              ]
            }
          },
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "percentage": {
          "description": "Assigned Type: ota2-0400:Percent",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Percentage"
              ]
            },
            "examples": [
              {
                "context": "Common",
                "value": "10"
              }
            ]
          },
          "type": "number",
          "format": "float",
          "maximum": 100.0,
          "exclusiveMaximum": false,
          "minimum": 0.0,
          "exclusiveMinimum": false
        },
        "description": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "Total": {
          "description": "Assigned Type: ota2-0400:CurrencyAmount",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Money"
              ]
            }
          },
          "$ref": "#/definitions/CurrencyAmount"
        },
        "ChargeUnit": {
          "description": "Assigned Type: ota2-0300:ChargeUnit_Enum",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: TeeTimeType_Applicability"
              ]
            }
          },
          "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/ChargeUnit_Enum"
        },
        "ExtensionPoint_Summary": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Price": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Amount"
      },
      "description": "Price of an item and information on how this price was calculated, for example, a daily rate multiplied by the number of players, a percentage, etc.",
      "properties": {
        "@type": {
          "type": "string"
        },
        "unitPrice": {
          "description": "Assigned Type: ota2-0400:Money",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Money"
              ]
            }
          },
          "type": "number",
          "format": "float"
        },
        "unitName": {
          "description": "Assigned Type: ota2-0400:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            }
          },
          "type": "string",
          "maxLength": 32
        },
        "quantity": {
          "description": "Assigned Type: ota2-0400:NonNegativeInteger",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Numeric1to99"
              ]
            }
          },
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "percentage": {
          "description": "Assigned Type: ota2-0400:Percent",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Percentage"
              ]
            },
            "examples": [
              {
                "context": "Common",
                "value": "10"
              }
            ]
          },
          "type": "number",
          "format": "float",
          "maximum": 100.0,
          "exclusiveMaximum": false,
          "minimum": 0.0,
          "exclusiveMinimum": false
        },
        "description": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "Total": {
          "description": "Assigned Type: ota2-0400:CurrencyAmount",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Money"
              ]
            }
          },
          "$ref": "#/definitions/CurrencyAmount"
        },
        "ChargeUnit": {
          "description": "Assigned Type: ota2-0300:ChargeUnit_Enum",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: TeeTimeType_Applicability"
              ]
            }
          },
          "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/ChargeUnit_Enum"
        },
        "ExtensionPoint_Summary": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "AmountDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Amount"
      },
      "description": "Price of an item and information on how this price was calculated, for example, a daily rate multiplied by the number of players, a percentage, etc.",
      "allOf": [
        {
          "$ref": "#/definitions/Amount"
        },
        {
          "properties": {
            "maxQuantity": {
              "description": "Assigned Type: ota2-0400:NonNegativeInteger",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Numeric1to999"
                  ]
                }
              },
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "ExtensionPoint_Detail": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "PriceDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Amount"
      },
      "description": "Price of an item and information on how this price was calculated, for example, a daily rate multiplied by the number of players, a percentage, etc.",
      "allOf": [
        {
          "$ref": "#/definitions/Amount"
        },
        {
          "properties": {
            "maxQuantity": {
              "description": "Assigned Type: ota2-0400:NonNegativeInteger",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Numeric1to999"
                  ]
                }
              },
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "ExtensionPoint_Detail": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "Ancillary": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Ancillary"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "name": {
          "description": "Assigned Type: ota2-0400:String",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            }
          },
          "type": "string",
          "maxLength": 512
        },
        "description": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "PricingType": {
          "description": "Assigned Type: ota2-0300:ChargeUnit_Enum",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: GolfAmenityType_PricingType"
              ]
            }
          },
          "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/ChargeUnit_Enum"
        },
        "Code": {
          "description": "Assigned Type: ota2-0400:Code",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            }
          },
          "$ref": "#/definitions/Code"
        },
        "includedInd": {
          "description": "If TRUE, this is included with the purchase.",
          "type": "boolean"
        },
        "orderableInd": {
          "description": "If TRUE, this ancillary may be ordered.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Amenity": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Amenity"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "name": {
          "description": "Assigned Type: ota2-0400:String",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            }
          },
          "type": "string",
          "maxLength": 512
        },
        "description": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "Code": {
          "description": "Assigned Type: ota2-0400:Code",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            }
          },
          "$ref": "#/definitions/Code"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "AmountOrPercent": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "AmountOrPercent"
      },
      "description": "Allows for either an amount or a percent to be expressed.",
      "properties": {
        "@type": {
          "type": "string"
        },
        "ExtensionPoint_Shared": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Shared"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "AmountOrPercentAmount": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "AmountOrPercent"
      },
      "description": "Allows for either an amount or a percent to be expressed.",
      "allOf": [
        {
          "$ref": "#/definitions/AmountOrPercent"
        },
        {
          "properties": {
            "CurrencyAmount": {
              "description": "Assigned Type: ota2-0400:CurrencyAmount",
              "$ref": "#/definitions/CurrencyAmount"
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "AmountOrPercentPercent": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "AmountOrPercent"
      },
      "description": "Allows for either an amount or a percent to be expressed.",
      "allOf": [
        {
          "$ref": "#/definitions/AmountOrPercent"
        },
        {
          "properties": {
            "Percent": {
              "description": "A percentage.",
              "type": "number",
              "format": "float",
              "maximum": 100.0,
              "exclusiveMaximum": false,
              "minimum": 0.0,
              "exclusiveMinimum": false
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "ReferencePoint": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "ReferencePoint"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "name": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "Code": {
          "description": "Assigned Type: ota2-0400:Code",
          "$ref": "#/definitions/Code"
        },
        "Type": {
          "description": "Assigned Type: ota2-0300:ReferencePoint_Enum",
          "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/ReferencePoint_Enum"
        },
        "Location": {
          "description": "Assigned Type: ota2-0400:Location",
          "$ref": "#/definitions/Location"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Dimensions": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Dimensions"
      },
      "description": "Defines the dimensions of an object.",
      "properties": {
        "unitOfMeasureCode": {
          "description": "Assigned Type: ota2-0400:OTA_Code",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            }
          },
          "type": "string",
          "pattern": "[0-9A-Z]{1,4}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
        },
        "width": {
          "description": "The width of the image item (unit specified by unit of measure).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}positiveInteger"
              ]
            }
          },
          "type": "integer",
          "format": "int32"
        },
        "height": {
          "description": "The height of the image item (unit specified by unit of measure).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}positiveInteger"
              ]
            }
          },
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "File": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "File"
      },
      "description": "Properties of a file.",
      "properties": {
        "name": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}StringLength1to64"
              ]
            }
          },
          "type": "string",
          "maxLength": 128
        },
        "size": {
          "description": "The size of the multimedia file in bytes.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}positiveInteger"
              ]
            }
          },
          "type": "integer",
          "format": "int32"
        },
        "originalName": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64",
                "Example value: ca1 \u003d 394820",
                "Example value: tns \u003d 394820"
              ]
            }
          },
          "type": "string",
          "maxLength": 128
        }
      }
    },
    "Multimedia": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "Multimedia"
      },
      "description": "Describes multimedia item(s).",
      "properties": {
        "@type": {
          "type": "string"
        },
        "objID": {
          "description": "A unique identifier within this document for this object.",
          "type": "string"
        },
        "lastUpdated": {
          "description": "The date and time when the multimedia information was last updated.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}dateTime"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "LastUpdated"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        },
        "version": {
          "description": "The version of the content, typically in the form of \\\"1\\\" or \\\"2.3.\\\"",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "Version"
              }
            ]
          },
          "type": "string"
        },
        "language": {
          "description": "The language associated with the caption for the category.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}language"
              ]
            },
            "examples": [
              {
                "context": "Common",
                "value": "en"
              }
            ]
          },
          "type": "string"
        },
        "caption": {
          "description": "Assigned Type: ota2-0400:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to128"
              ]
            }
          },
          "type": "string",
          "maxLength": 128
        },
        "Category": {
          "description": "Assigned Type: ota2-0300:PictureCategory_Enum",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            }
          },
          "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/PictureCategory_Enum"
        },
        "AdditionalDetailType": {
          "description": "Assigned Type: ota2-0300:AdditionalDetailType_Enum",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "AdditionalDetailCode"
              }
            ]
          },
          "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/AdditionalDetailType_Enum"
        },
        "InfoType": {
          "description": "Assigned Type: ota2-0300:InformationType_Enum",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            },
            "equivalents": [
              {
                "context": "Common",
                "value": "InfoCode"
              }
            ]
          },
          "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/InformationType_Enum"
        },
        "ExtensionPoint_Shared": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Shared"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "MultimediaText": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "Multimedia"
      },
      "description": "Describes multimedia item(s).",
      "allOf": [
        {
          "$ref": "#/definitions/Multimedia"
        },
        {
          "properties": {
            "TextCategory": {
              "description": "Assigned Type: ota2-0400:TextCategory",
              "$ref": "#/definitions/TextCategory"
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "MultimediaVideo": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "Multimedia"
      },
      "description": "Describes multimedia item(s).",
      "allOf": [
        {
          "$ref": "#/definitions/Multimedia"
        },
        {
          "properties": {
            "VideoCategory": {
              "description": "Assigned Type: ota2-0400:VideoCategory",
              "$ref": "#/definitions/VideoCategoryID"
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "Fee": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Fee"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Price": {
          "description": "Assigned Type: ota2-0400:Price",
          "$ref": "#/definitions/Price"
        },
        "FeeType": {
          "description": "Assigned Type: ota2-0300:FeeType_Enum",
          "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/FeeType_Enum"
        },
        "Description": {
          "description": "Assigned Type: ota2-0400:Description",
          "$ref": "#/definitions/Description"
        },
        "FeeDetail": {
          "description": "Assigned Type: ota2-0400:FeeDetail",
          "$ref": "#/definitions/FeeDetail"
        },
        "taxExcludedInd": {
          "description": "When true, tax is excluded from the price.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Tax": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Tax"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "sequenceNbr": {
          "description": "Assigned Type: ota2-0400:String",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Changed type from {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}nonNegativeInteger.",
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            }
          },
          "type": "string",
          "maxLength": 512
        },
        "AmountSummary": {
          "description": "Assigned Type: ota2-0400:Amount_Summary",
          "$ref": "#/definitions/Amount"
        },
        "EffectiveExpire": {
          "description": "Assigned Type: ota2-0400:DateEffectiveExpire",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: EffectiveExpireOptionalDateGroup"
              ]
            }
          },
          "$ref": "#/definitions/DateEffectiveExpire"
        },
        "TaxType_Enum": {
          "description": "Assigned Type: ota2-0300:TaxType_Enum",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "Common",
                "value": ""
              }
            ]
          },
          "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/TaxType_Enum"
        },
        "taxExcludedInd": {
          "description": "When present and true, this tax is excluded.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Taxes": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Taxes"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Total": {
          "description": "Assigned Type: ota2-0400:CurrencyAmount",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: CurrencyAmountGroup"
              ]
            }
          },
          "$ref": "#/definitions/CurrencyAmount"
        },
        "Tax": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tax"
          },
          "maxItems": 99
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "Total"
      ],
      "discriminator": "@type"
    },
    "Fees": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Fees"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Fee": {
          "description": "Assigned Type: ota2-0400:Fee",
          "$ref": "#/definitions/Fee"
        },
        "Total": {
          "description": "Assigned Type: ota2-0400:CurrencyAmount",
          "$ref": "#/definitions/CurrencyAmount"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "AccessibilityFeatures": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "AccessibilityFeatures"
      },
      "description": "Describes accessibility featrues.",
      "properties": {
        "@type": {
          "type": "string"
        },
        "AccessibilityFeatures": {
          "description": "Assigned Type: ota2-0300:DisabilityFeature_Enum",
          "$ref": "CodeList_3_0_0_Trim.schema.json#/definitions/DisabilityFeature_Enum"
        },
        "ExtensionPoint_Summary": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "AccessibilityFeaturesDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "AccessibilityFeatures"
      },
      "description": "Describes accessibility featrues.",
      "allOf": [
        {
          "$ref": "#/definitions/AccessibilityFeatures"
        },
        {
          "properties": {
            "Description": {
              "description": "Assigned Type: ota2-0400:Text",
              "$ref": "#/definitions/Text"
            },
            "ExtensionPoint_Detail": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "BasePayload": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "BasePayload"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "PayloadStdAttributes": {
          "description": "Assigned Type: ota2-0400:PayloadStdAttributes",
          "$ref": "#/definitions/PayloadStdAttributes"
        },
        "POS": {
          "description": "Assigned Type: ota2-0400:POS",
          "$ref": "#/definitions/POS"
        },
        "ProcessingInfo": {
          "description": "Assigned Type: ota2-0400:ProcessingInfo",
          "$ref": "#/definitions/ProcessingInfo"
        },
        "ExtensionPoint": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "ReferenceList": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "ReferenceList"
      },
      "description": "A list of objects that are referenced within another object.",
      "properties": {
        "@type": {
          "type": "string"
        },
        "ExtensionPoint_Shared": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Shared"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "ReferenceListProduct": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "ReferenceList"
      },
      "description": "A list of objects that are referenced within another object.",
      "allOf": [
        {
          "$ref": "#/definitions/ReferenceList"
        },
        {
          "properties": {
            "Product": {
              "description": "Assigned Type: prod-0400:Product",
              "$ref": "Product_4_0_0_Trim.schema.json#/definitions/ProductID"
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "FeeDetail": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "FeeDetail"
      },
      "description": "Specifics around the fee such as who it applies to or how it is applied.",
      "properties": {
        "@type": {
          "type": "string"
        },
        "ExtensionPoint_Shared": {
          "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint_Shared"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "FeeDetailAdditionalPerson": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "FeeDetail"
      },
      "description": "Specifics around the fee such as who it applies to or how it is applied.",
      "allOf": [
        {
          "$ref": "#/definitions/FeeDetail"
        },
        {
          "properties": {
            "minAge": {
              "description": "The min age for which this fee applies.",
              "type": "integer",
              "format": "int32"
            },
            "maxAge": {
              "description": "The max age for which the fee applies.",
              "type": "integer",
              "format": "int32"
            },
            "maxNumberAdditional": {
              "description": "The maximum number of additional people allowed.",
              "type": "integer",
              "format": "int32"
            },
            "feeAppliesAfter": {
              "description": "The number of people included in the price, before additional person charges apply.  The additonal person fee is applied after this number of people.  (E.G If feeAppliesAfter is 2 then the additional person fee begins with the 3 person.)",
              "type": "integer",
              "format": "int32"
            },
            "ExtensionPoint": {
              "$ref": "built-ins/OTM_BuiltIns.schema.json#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    }
  },
  "oneOf": [
    {
      "properties": {
        "PersonNameSummary": {
          "$ref": "#/definitions/PersonName"
        }
      },
      "required": [
        "PersonNameSummary"
      ]
    },
    {
      "properties": {
        "RelatedTraveler_Simple_Person_NameSummary": {
          "$ref": "#/definitions/PersonName"
        }
      },
      "required": [
        "RelatedTraveler_Simple_Person_NameSummary"
      ]
    },
    {
      "properties": {
        "PersonNameDetail": {
          "$ref": "#/definitions/PersonNameDetail"
        }
      },
      "required": [
        "PersonNameDetail"
      ]
    },
    {
      "properties": {
        "RelatedTraveler_Simple_Person_NameDetail": {
          "$ref": "#/definitions/PersonNameDetail"
        }
      },
      "required": [
        "RelatedTraveler_Simple_Person_NameDetail"
      ]
    },
    {
      "properties": {
        "TelephoneSummary": {
          "$ref": "#/definitions/Telephone"
        }
      },
      "required": [
        "TelephoneSummary"
      ]
    },
    {
      "properties": {
        "TelephoneDetail": {
          "$ref": "#/definitions/TelephoneDetail"
        }
      },
      "required": [
        "TelephoneDetail"
      ]
    },
    {
      "properties": {
        "TextParagraph": {
          "$ref": "#/definitions/TextParagraph"
        }
      },
      "required": [
        "TextParagraph"
      ]
    },
    {
      "properties": {
        "Comment": {
          "$ref": "#/definitions/TextParagraph"
        }
      },
      "required": [
        "Comment"
      ]
    },
    {
      "properties": {
        "Description": {
          "$ref": "#/definitions/TextParagraph"
        }
      },
      "required": [
        "Description"
      ]
    },
    {
      "properties": {
        "DateTimeSpanWindowsSummary": {
          "$ref": "#/definitions/DateTimeSpanWindows"
        }
      },
      "required": [
        "DateTimeSpanWindowsSummary"
      ]
    },
    {
      "properties": {
        "StayRestrictionsSummary": {
          "$ref": "#/definitions/DateTimeSpanWindows"
        }
      },
      "required": [
        "StayRestrictionsSummary"
      ]
    },
    {
      "properties": {
        "DateTimeSpanWindowsDetail": {
          "$ref": "#/definitions/DateTimeSpanWindowsDetail"
        }
      },
      "required": [
        "DateTimeSpanWindowsDetail"
      ]
    },
    {
      "properties": {
        "StayRestrictionsDetail": {
          "$ref": "#/definitions/DateTimeSpanWindowsDetail"
        }
      },
      "required": [
        "StayRestrictionsDetail"
      ]
    },
    {
      "properties": {
        "PersonDocument": {
          "$ref": "#/definitions/PersonDocument"
        }
      },
      "required": [
        "PersonDocument"
      ]
    },
    {
      "properties": {
        "POS": {
          "$ref": "#/definitions/POS"
        }
      },
      "required": [
        "POS"
      ]
    },
    {
      "properties": {
        "RequestorIDSummary": {
          "$ref": "#/definitions/RequestorID"
        }
      },
      "required": [
        "RequestorIDSummary"
      ]
    },
    {
      "properties": {
        "RequestorIDDetail": {
          "$ref": "#/definitions/RequestorIDDetail"
        }
      },
      "required": [
        "RequestorIDDetail"
      ]
    },
    {
      "properties": {
        "Source": {
          "$ref": "#/definitions/Source"
        }
      },
      "required": [
        "Source"
      ]
    },
    {
      "properties": {
        "BookingChannel": {
          "$ref": "#/definitions/BookingChannel"
        }
      },
      "required": [
        "BookingChannel"
      ]
    },
    {
      "properties": {
        "Result": {
          "$ref": "#/definitions/Result"
        }
      },
      "required": [
        "Result"
      ]
    },
    {
      "properties": {
        "PersonIdentifier": {
          "$ref": "#/definitions/PersonID"
        }
      },
      "required": [
        "PersonIdentifier"
      ]
    },
    {
      "properties": {
        "PersonSummary": {
          "$ref": "#/definitions/Person"
        }
      },
      "required": [
        "PersonSummary"
      ]
    },
    {
      "properties": {
        "AddressSummary": {
          "$ref": "#/definitions/Address"
        }
      },
      "required": [
        "AddressSummary"
      ]
    },
    {
      "properties": {
        "AddressDetail": {
          "$ref": "#/definitions/AddressDetail"
        }
      },
      "required": [
        "AddressDetail"
      ]
    },
    {
      "properties": {
        "ContactPerson": {
          "$ref": "#/definitions/ContactPerson"
        }
      },
      "required": [
        "ContactPerson"
      ]
    },
    {
      "properties": {
        "Location": {
          "$ref": "#/definitions/Location"
        }
      },
      "required": [
        "Location"
      ]
    },
    {
      "properties": {
        "Email": {
          "$ref": "#/definitions/Email"
        }
      },
      "required": [
        "Email"
      ]
    },
    {
      "properties": {
        "MultimediaCollection": {
          "$ref": "#/definitions/MultimediaCollection"
        }
      },
      "required": [
        "MultimediaCollection"
      ]
    },
    {
      "properties": {
        "VideoCategoryIdentifier": {
          "$ref": "#/definitions/VideoCategoryID"
        }
      },
      "required": [
        "VideoCategoryIdentifier"
      ]
    },
    {
      "properties": {
        "VideoCategorySummary": {
          "$ref": "#/definitions/VideoCategory"
        }
      },
      "required": [
        "VideoCategorySummary"
      ]
    },
    {
      "properties": {
        "MultimediaDescription": {
          "$ref": "#/definitions/MultimediaDescription"
        }
      },
      "required": [
        "MultimediaDescription"
      ]
    },
    {
      "properties": {
        "VideoIdentifier": {
          "$ref": "#/definitions/VideoID"
        }
      },
      "required": [
        "VideoIdentifier"
      ]
    },
    {
      "properties": {
        "VideoSummary": {
          "$ref": "#/definitions/Video"
        }
      },
      "required": [
        "VideoSummary"
      ]
    },
    {
      "properties": {
        "OperationSchedule": {
          "$ref": "#/definitions/OperationSchedule"
        }
      },
      "required": [
        "OperationSchedule"
      ]
    },
    {
      "properties": {
        "ImageIdentifier": {
          "$ref": "#/definitions/ImageID"
        }
      },
      "required": [
        "ImageIdentifier"
      ]
    },
    {
      "properties": {
        "ImageSummary": {
          "$ref": "#/definitions/Image"
        }
      },
      "required": [
        "ImageSummary"
      ]
    },
    {
      "properties": {
        "RelativePosition": {
          "$ref": "#/definitions/RelativePosition"
        }
      },
      "required": [
        "RelativePosition"
      ]
    },
    {
      "properties": {
        "Directions": {
          "$ref": "#/definitions/RelativePosition"
        }
      },
      "required": [
        "Directions"
      ]
    },
    {
      "properties": {
        "TransportationIdentifier": {
          "$ref": "#/definitions/TransportationID"
        }
      },
      "required": [
        "TransportationIdentifier"
      ]
    },
    {
      "properties": {
        "TransportationSummary": {
          "$ref": "#/definitions/Transportation"
        }
      },
      "required": [
        "TransportationSummary"
      ]
    },
    {
      "properties": {
        "Transportations": {
          "$ref": "#/definitions/Transportations"
        }
      },
      "required": [
        "Transportations"
      ]
    },
    {
      "properties": {
        "ArrivalTransport": {
          "$ref": "#/definitions/Transportations"
        }
      },
      "required": [
        "ArrivalTransport"
      ]
    },
    {
      "properties": {
        "DepartureTransport": {
          "$ref": "#/definitions/Transportations"
        }
      },
      "required": [
        "DepartureTransport"
      ]
    },
    {
      "properties": {
        "TextCategory": {
          "$ref": "#/definitions/TextCategory"
        }
      },
      "required": [
        "TextCategory"
      ]
    },
    {
      "properties": {
        "FormattedTextSubSection": {
          "$ref": "#/definitions/FormattedTextSubSection"
        }
      },
      "required": [
        "FormattedTextSubSection"
      ]
    },
    {
      "properties": {
        "LoyaltyProgram": {
          "$ref": "#/definitions/LoyaltyProgram"
        }
      },
      "required": [
        "LoyaltyProgram"
      ]
    },
    {
      "properties": {
        "FeaturesShared": {
          "$ref": "#/definitions/Features"
        }
      },
      "required": [
        "FeaturesShared"
      ]
    },
    {
      "properties": {
        "FeaturesOther": {
          "$ref": "#/definitions/FeaturesOther"
        }
      },
      "required": [
        "FeaturesOther"
      ]
    },
    {
      "properties": {
        "AmountSummary": {
          "$ref": "#/definitions/Amount"
        }
      },
      "required": [
        "AmountSummary"
      ]
    },
    {
      "properties": {
        "PriceSummary": {
          "$ref": "#/definitions/Amount"
        }
      },
      "required": [
        "PriceSummary"
      ]
    },
    {
      "properties": {
        "AmountDetail": {
          "$ref": "#/definitions/AmountDetail"
        }
      },
      "required": [
        "AmountDetail"
      ]
    },
    {
      "properties": {
        "PriceDetail": {
          "$ref": "#/definitions/AmountDetail"
        }
      },
      "required": [
        "PriceDetail"
      ]
    },
    {
      "properties": {
        "Ancillary": {
          "$ref": "#/definitions/Ancillary"
        }
      },
      "required": [
        "Ancillary"
      ]
    },
    {
      "properties": {
        "Amenity": {
          "$ref": "#/definitions/Amenity"
        }
      },
      "required": [
        "Amenity"
      ]
    },
    {
      "properties": {
        "AmountOrPercentShared": {
          "$ref": "#/definitions/AmountOrPercent"
        }
      },
      "required": [
        "AmountOrPercentShared"
      ]
    },
    {
      "properties": {
        "AmountOrPercentAmount": {
          "$ref": "#/definitions/AmountOrPercentAmount"
        }
      },
      "required": [
        "AmountOrPercentAmount"
      ]
    },
    {
      "properties": {
        "AmountOrPercentPercent": {
          "$ref": "#/definitions/AmountOrPercentPercent"
        }
      },
      "required": [
        "AmountOrPercentPercent"
      ]
    },
    {
      "properties": {
        "ReferencePoint": {
          "$ref": "#/definitions/ReferencePoint"
        }
      },
      "required": [
        "ReferencePoint"
      ]
    },
    {
      "properties": {
        "MultimediaShared": {
          "$ref": "#/definitions/Multimedia"
        }
      },
      "required": [
        "MultimediaShared"
      ]
    },
    {
      "properties": {
        "MultimediaText": {
          "$ref": "#/definitions/MultimediaText"
        }
      },
      "required": [
        "MultimediaText"
      ]
    },
    {
      "properties": {
        "MultimediaVideo": {
          "$ref": "#/definitions/MultimediaVideo"
        }
      },
      "required": [
        "MultimediaVideo"
      ]
    },
    {
      "properties": {
        "Fee": {
          "$ref": "#/definitions/Fee"
        }
      },
      "required": [
        "Fee"
      ]
    },
    {
      "properties": {
        "Tax": {
          "$ref": "#/definitions/Tax"
        }
      },
      "required": [
        "Tax"
      ]
    },
    {
      "properties": {
        "Taxes": {
          "$ref": "#/definitions/Taxes"
        }
      },
      "required": [
        "Taxes"
      ]
    },
    {
      "properties": {
        "Fees": {
          "$ref": "#/definitions/Fees"
        }
      },
      "required": [
        "Fees"
      ]
    },
    {
      "properties": {
        "AccessibilityFeaturesSummary": {
          "$ref": "#/definitions/AccessibilityFeatures"
        }
      },
      "required": [
        "AccessibilityFeaturesSummary"
      ]
    },
    {
      "properties": {
        "AccessibilityFeaturesDetail": {
          "$ref": "#/definitions/AccessibilityFeaturesDetail"
        }
      },
      "required": [
        "AccessibilityFeaturesDetail"
      ]
    },
    {
      "properties": {
        "BasePayload": {
          "$ref": "#/definitions/BasePayload"
        }
      },
      "required": [
        "BasePayload"
      ]
    },
    {
      "properties": {
        "ReferenceListShared": {
          "$ref": "#/definitions/ReferenceList"
        }
      },
      "required": [
        "ReferenceListShared"
      ]
    },
    {
      "properties": {
        "ReferenceListProduct": {
          "$ref": "#/definitions/ReferenceListProduct"
        }
      },
      "required": [
        "ReferenceListProduct"
      ]
    },
    {
      "properties": {
        "FeeDetailShared": {
          "$ref": "#/definitions/FeeDetail"
        }
      },
      "required": [
        "FeeDetailShared"
      ]
    },
    {
      "properties": {
        "FeeDetailAdditionalPerson": {
          "$ref": "#/definitions/FeeDetailAdditionalPerson"
        }
      },
      "required": [
        "FeeDetailAdditionalPerson"
      ]
    }
  ]
}